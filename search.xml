<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis之缓存</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E7%BC%93%E5%AD%98/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><h3 id="2-一级缓存"><a href="#2-一级缓存" class="headerlink" title="2.一级缓存"></a>2.一级缓存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        BlogMapper mapper = sqlSession.getMapper (BlogMapper.class);</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        map.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;queen&quot;</span>);</span><br><span class="line">        Blog blog = mapper.getBlog (map);</span><br><span class="line">        System.out.println (blog);</span><br><span class="line">        System.out.println (<span class="string">&quot;****************************&quot;</span>);</span><br><span class="line">        map.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;queen&quot;</span>);</span><br><span class="line">        Blog blog1 = mapper.getBlog (map);</span><br><span class="line">        System.out.println (blog1);</span><br><span class="line">        sqlSession.commit ();</span><br><span class="line">        sqlSession.close ();</span><br></pre></td></tr></table></figure><p>一级缓存是在sqlsession层面上的，在sqlsession产生到关闭之间的涉及增删改查的数据都会被保存下来</p><p>效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: select * from mybatis.blog <span class="built_in">where</span> author=?</span><br><span class="line">==&gt; Parameters: queen(String)</span><br><span class="line">&lt;==    Columns: id, title, author, create_time, views</span><br><span class="line">&lt;==        Row: 566993470e944aa2ba4003c7ccbfaf5d, 我是最帅的, queen, 2020-08-09 10:23:10, 10</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Blog&#123;author=<span class="string">&#x27;queen&#x27;</span>, createTime=null, id=<span class="string">&#x27;566993470e944aa2ba4003c7ccbfaf5d&#x27;</span>, title=<span class="string">&#x27;我是最帅的&#x27;</span>, views=10&#125;</span><br><span class="line">****************************</span><br><span class="line">Blog&#123;author=<span class="string">&#x27;queen&#x27;</span>, createTime=null, id=<span class="string">&#x27;566993470e944aa2ba4003c7ccbfaf5d&#x27;</span>, title=<span class="string">&#x27;我是最帅的&#x27;</span>, views=10&#125;</span><br></pre></td></tr></table></figure><p>由于存在缓存，我们的第二次查询就没有执行查询语句，而是直接从缓存中取出来；</p><p>可以利用sqlSession.clearCache()来清除缓存；清除以后的话，就会在加载一次数据库；</p><p><strong>缓存消失的原因：</strong></p><ul><li>自己清除，利用函数</li><li>查询语句会被我们的增删改语句覆盖，目的就是我们的增删改已经修改了数据，再次访问缓存里面的就会导致取出的数据不真实；</li><li>查询的是不同的mapper.xml下面的东西</li><li>查询不同的东西，比如查询一号和二号</li></ul><h3 id="3-二级缓存"><a href="#3-二级缓存" class="headerlink" title="3.二级缓存"></a>3.二级缓存</h3><p>当你使用二级缓存的时候，只有一级缓存会话消失后才会缓存到二级缓存；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        SqlSession sqlSession2 = MybatisUnit.getSqlSession ();</span><br><span class="line">        BlogMapper mapper = sqlSession.getMapper (BlogMapper.class);</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        map.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Queen and King&quot;</span>);</span><br><span class="line">        Blog blog = mapper.getBlog (map);</span><br><span class="line">        System.out.println (blog);</span><br><span class="line">        sqlSession.close ();<span class="comment">//会话关闭，一级缓存变成二级缓存</span></span><br><span class="line"></span><br><span class="line">        System.out.println (<span class="string">&quot;++++++++++++++++++++++++++++++++++++++++++++++++&quot;</span>);</span><br><span class="line"></span><br><span class="line">        BlogMapper mapper2 = sqlSession2.getMapper (BlogMapper.class);</span><br><span class="line">        Map&lt;String, Object&gt; map2 = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        map2.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Queen and King&quot;</span>);</span><br><span class="line">        Blog blog2 = mapper2.getBlog (map);</span><br><span class="line">        System.out.println (blog2);</span><br><span class="line">        sqlSession2.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用cache就只需要一个标签就可以了</p><p>注意：</p><ul><li>缓存的时候，实体类要序列化，所以我们的实体类要继承序列化接口</li><li>二级缓存的作用域就是namespace，一个mpper.xml,所有数据都放在先放在一级缓存，只有当我们关闭会话，这个才回到二级缓存；</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之动态SQL</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E5%8A%A8%E6%80%81SQL/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E5%8A%A8%E6%80%81SQL/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h2><h3 id="1-if"><a href="#1-if" class="headerlink" title="1.if"></a>1.if</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;views!=null&quot;</span>&gt;</span></span><br><span class="line">                and views&gt;#&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                and title =#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>if就是一个判断语句，我们的条件满足时将sql拼接上去。使用where标签时，如果是第一个条件，那么就会把开头的and或者or删除，在拼接；</strong></p><h3 id="2-choose、when、otherwise"><a href="#2-choose、when、otherwise" class="headerlink" title="2.choose、when、otherwise"></a>2.choose、when、otherwise</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                    title=#&#123;title&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">                    author=#&#123;author&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    1=1</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>choose语句相当于Java中的switch语句，那么when就是case标签，otherwise就是default标签，这个拼接和顺序有关，如果我们的条件都成立的话，那么就会只走第一个，相当于switch里面的条件成立就会break一样</strong></p><h3 id="3-set"><a href="#3-set" class="headerlink" title="3.set"></a>3.set</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        update mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">                author=#&#123;author&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>用于数据库的更新，set会自动帮我们去掉只有一句的时候的句末的逗号和最后一句的句末的逗号==需要注意的是，你如果没有加上的话，他是不会自动帮你添加的==</strong></p><h3 id="4-sql字段"><a href="#4-sql字段" class="headerlink" title="4.sql字段"></a>4.sql字段</h3><p>将一段可能复用的代码进行一个复用；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;sql_title_author&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">                author=#&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                1=1</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;sql_title_author&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>sql片段不要使用过于复杂的语句，这样会降低代码的复用性</li><li>在代码片段里面不要加上where，set等，不然会让代码复用性降低</li></ul><h3 id="5-foreach"><a href="#5-foreach" class="headerlink" title="5.foreach"></a>5.foreach</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;views&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;views&quot;</span>&gt;</span></span><br><span class="line">                views=#&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>里面的open，close和separator 构成拼接sql语句 item是集合中遍历的元素 collection表示的属性的名字，就是你放在map集合里面key的值，views=#{views}是拼接语句的内容，每一句之间用or隔开</strong></p><p>下面就是拼接后的字符串：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mybatis.blog <span class="keyword">WHERE</span> ( views=? <span class="keyword">or</span> views=? )</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之复杂查询</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h2><h3 id="一、多对一查询"><a href="#一、多对一查询" class="headerlink" title="一、多对一查询"></a>一、多对一查询</h3><p>环境搭建：</p><p>student:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Teacher teacher;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, teacher=&quot;</span> + teacher +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>teacher:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span>+</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-第一种根据查询嵌套查询"><a href="#1-第一种根据查询嵌套查询" class="headerlink" title="1.第一种根据查询嵌套查询"></a>1.第一种根据查询嵌套查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>   <span class="attr">javaType</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentInfo&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    select * from student;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.teacher where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-第二种：根据查询的结果查询"><a href="#2-第二种：根据查询的结果查询" class="headerlink" title="2.第二种：根据查询的结果查询"></a>2.第二种：根据查询的结果查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentInfo2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">     select s.id as id,s.name as student,t.name as teacherName</span><br><span class="line">     from student s,teacher t</span><br><span class="line">     where s.tid=t.id;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;student&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;teacherName&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们查出来的数据有一个是一个对象，那么我们就用这个对象再来查询一次；根据我们的sql语句，我们的teacherName是查询的别名，对应的就是实体类中的老师的名字；这个效果和子查询的结果是一样的；</p><h3 id="二、一对多查询"><a href="#二、一对多查询" class="headerlink" title="二、一对多查询"></a>二、一对多查询</h3><p>环境搭建:</p><p>student:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, tid=&quot;</span> + tid +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>teacher:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, list=&quot;</span> + students +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-第一种根据查询结果查询"><a href="#1-第一种根据查询结果查询" class="headerlink" title="1.第一种根据查询结果查询"></a>1.第一种根据查询结果查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.saxon.Dao.teacherMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;teach&quot;</span>&gt;</span></span><br><span class="line">  select t.id ,t.name,s sid,s.name sname from teacher t,student s</span><br><span class="line">  where t.id=s.tid and t.id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;teach&quot;</span> <span class="attr">type</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>步骤：</p><p>1.先根据写出的函数来进行一个语句的书写；</p><p>2.对结果集合进行一个映射。</p><p>3.字段里面有的映射出来 其中column表示的是数据库中的字段，property表示的是实体类的字段；一一对应关系；</p><p>4.我们的老师类子段中由一个集合，那么结果映射就是一个集合，结果集合就用collection来表示；oftype表示泛型；</p><p>5.在对我们的泛型里面的字段进行一个映射，有的字段进行一个一一对应；</p><p>特别注意的是我不知道为何学生字段必须全部有，删除一个无法编译；</p><h4 id="2-第二种-不会，因为直接看不懂"><a href="#2-第二种-不会，因为直接看不懂" class="headerlink" title="2.第二种 不会，因为直接看不懂"></a>2.第二种 不会，因为直接看不懂</h4><p><strong>总结：集合使用collection，对象使用assoation，前者泛型使用oftype后者对象使用JavaType</strong></p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之使用注解开发</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="使用注解开发"><a href="#使用注解开发" class="headerlink" title="使用注解开发"></a>使用注解开发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解、</span></span><br><span class="line"><span class="meta">@Select</span> (<span class="string">&quot;select * from mybatis.saxon&quot;</span>)</span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>这是我们的映射就要使用类名来注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAn</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">       List&lt;User&gt; userList = mapper.getUser ();</span><br><span class="line">       <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">           System.out.println (user);</span><br><span class="line">       &#125;</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这个办法只可以处理简单的sql语句，处理复杂的sql语句，会使得程序变得混乱不堪；一些复杂的操作我们还是推荐使用我们的xml配置文件来完成；当然我们也可以把二者进行一个结合，但是我们注册的时候，我们的接口名和xml名字要一样；</p><h4 id="二-CRUD"><a href="#二-CRUD" class="headerlink" title="二.CRUD"></a>二.CRUD</h4><h5 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解查询语句</span></span><br><span class="line">   <span class="meta">@Select</span> (<span class="string">&quot;select * from mybatis.saxon where id=#&#123;id&#125;&quot;</span>)</span><br><span class="line">   <span class="function">User <span class="title">select</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">   </span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">       User select = mapper.select (<span class="number">1</span>);</span><br><span class="line">       System.out.println (select);</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="2-添加"><a href="#2-添加" class="headerlink" title="2.添加"></a>2.添加</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解添加用户</span></span><br><span class="line">   <span class="meta">@Insert</span> (<span class="string">&quot;insert into mybatis.saxon(id,user,pwd) values(#&#123;id&#125;,#&#123;user&#125;,#&#123;password&#125;)&quot;</span>)</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(User user)</span></span>;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">       mapper.insert (<span class="keyword">new</span> User (<span class="number">2</span>,<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;1234567&quot;</span>));</span><br><span class="line">       sqlSession.commit ();</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="3-更新"><a href="#3-更新" class="headerlink" title="3.更新"></a>3.更新</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update</span> (<span class="string">&quot;update mybatis.saxon set user=#&#123;user&#125; , pwd=#&#123;pwd&#125;  where id=#&#123;id&#125;&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span> <span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">@org</span>.junit.Test</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">    mapper.update (<span class="keyword">new</span> User (<span class="number">2</span>,<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;12345 67&quot;</span>));</span><br><span class="line">    sqlSession.commit ();</span><br><span class="line">    sqlSession.close ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-删除"><a href="#4-删除" class="headerlink" title="4.删除"></a>4.删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解删除用户</span></span><br><span class="line">    <span class="meta">@Delete</span> (<span class="string">&quot;delete from mybatis.saxon where id=#&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="meta">@Param</span> (<span class="string">&quot;id&quot;</span>)</span> <span class="keyword">int</span> id)</span>;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">        mapper.delete (<span class="number">2</span>);</span><br><span class="line">        sqlSession.commit ();</span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在我们每一次的提交数据的时候，都要设置自动提交，我们可以在sqlsession建立的时候就可以把自动提交设置为true；这样可以每次不必要的去设置我们的数据提交，但是带来的隐患就是我们的数据无论对错都会被提交；</p><p><strong>每写一个查询的功能，就要注册一个mapper，在mybatis-config.xml中配置</strong></p><h5 id="5-关于-Param"><a href="#5-关于-Param" class="headerlink" title="5.关于@Param"></a>5.关于@Param</h5><p>在后面的使用中，我们的@Param中的东西才是我们取值的重点,才会被取到，如果我们的对象是引用数值类型就不用写；基础类型要写，如果只有一个基础类型的话可以不用写，我们在SQL语句中引用的就是@param()中的；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span> (<span class="string">&quot;select * from mybatis.saxon where id=#&#123;uid&#125;&quot;</span>)</span><br><span class="line"><span class="function">User <span class="title">select</span> <span class="params">(<span class="meta">@Param</span> (<span class="string">&quot;uid&quot;</span>)</span> <span class="keyword">int</span> id)</span>;</span><br></pre></td></tr></table></figure><h2 id="mybatis的实现流程"><a href="#mybatis的实现流程" class="headerlink" title="mybatis的实现流程"></a>mybatis的实现流程</h2><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/5f2ea3c9637689313ac372b0.png"></p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之分页</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E5%88%86%E9%A1%B5/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E5%88%86%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><h3 id="1-使用limit分页"><a href="#1-使用limit分页" class="headerlink" title="1.使用limit分页"></a>1.使用limit分页</h3><p>1.方法：利用集合去接受结果，把分页的数值存在map中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getLimit</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><p>2.SQL语句,就像前面提到的那样，我们的结果如果是list。那么把泛型数据填在里面；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getLimit&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">          select * from mybatis.saxon limit $&#123;startIndex&#125;,$&#123;pageSize&#125;;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">limit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">        Map&lt;String, Integer&gt; Map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        Map.put (<span class="string">&quot;startIndex&quot;</span>,<span class="number">0</span>);</span><br><span class="line">        Map.put (<span class="string">&quot;pageSize&quot;</span>,<span class="number">2</span>);</span><br><span class="line">        List&lt;User&gt; limit =  mapper.getLimit (Map);</span><br><span class="line">        <span class="keyword">for</span> (User user : limit) &#123;</span><br><span class="line">            System.out.println (user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-使用rowbounds"><a href="#2-使用rowbounds" class="headerlink" title="2.使用rowbounds"></a>2.使用rowbounds</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页2</span></span><br><span class="line">  <span class="function">List&lt;User&gt; <span class="title">getLimitby</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>分页操作由rowbounds做</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getLimitby&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.saxon</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">testRowbounds</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        RowBounds rowBounds = <span class="keyword">new</span> RowBounds (<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//其实下标和也页面大小</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList (<span class="string">&quot;com.saxon.Dao.UserMapper.getLimitby&quot;</span>, <span class="keyword">null</span>,rowBounds );</span><br><span class="line">        <span class="keyword">for</span> (User o : list) &#123;</span><br><span class="line">            System.out.println (o);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-使用插件"><a href="#3-使用插件" class="headerlink" title="3.使用插件"></a>3.使用插件</h3><p>例:pageHelper</p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之日志</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E6%97%A5%E5%BF%97/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p><strong>setting设置：logImpl（key） ：</strong></p><ul><li>**SLF4J **</li><li><strong>LOG4J（掌握）</strong></li><li><strong>LOG4J2</strong></li><li><strong>JDK_LOGGING</strong></li><li><strong>COMMONS_LOGGING</strong> </li><li><strong>STDOUT_LOGGING</strong> (掌握)</li><li><strong>NO_LOGGING</strong></li></ul><p><strong>第一种</strong>：<strong>STDOUT_LOGGING</strong> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>日志输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Logging initialized using <span class="string">&#x27;class org.apache.ibatis.logging.stdout.StdOutImpl&#x27;</span> adapter.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">Class not found: org.jboss.vfs.VFS</span><br><span class="line">JBoss 6 VFS API is not available <span class="keyword">in</span> this environment.</span><br><span class="line">Class not found: org.jboss.vfs.VirtualFile</span><br><span class="line">VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid <span class="keyword">in</span> this environment.</span><br><span class="line">Using VFS adapter org.apache.ibatis.io.DefaultVFS</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao</span><br><span class="line">Reader entry: UserDaoTest.class</span><br><span class="line">Listing file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao/UserDaoTest.class</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao/UserDaoTest.class</span><br><span class="line">Reader entry: ����   5 �</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao</span><br><span class="line">Reader entry: UserMapper.class</span><br><span class="line">Reader entry: UserMapper.xml</span><br><span class="line">Listing file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.class</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.class</span><br><span class="line">Reader entry: ����   5    getUserList ()Ljava/util/List; Signature )()Ljava/util/List&lt;Lcom/saxon/pojo/User;&gt;; getUserID (I)Lcom/saxon/pojo/User; </span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.xml</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.xml</span><br><span class="line">Reader entry: &lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">Checking to see <span class="keyword">if</span> class com.saxon.Dao.UserDaoTest matches criteria [is assignable to Object]</span><br><span class="line">Checking to see <span class="keyword">if</span> class com.saxon.Dao.UserMapper matches criteria [is assignable to Object]</span><br><span class="line">org.apache.ibatis.session.defaults.DefaultSqlSessionFactory@1e1a0406</span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 220695851.</span><br><span class="line">Setting autocommit to <span class="literal">false</span> on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">==&gt;  Preparing: select * from mybatis.saxon</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, user, <span class="built_in">pwd</span></span><br><span class="line">&lt;==        Row: 1, saxon, 1234567</span><br><span class="line">&lt;==        Row: 2, saxon, 441564161</span><br><span class="line">&lt;==      Total: 2</span><br><span class="line">441564161</span><br><span class="line">[User&#123;id=1, user=<span class="string">&#x27;saxon&#x27;</span>, <span class="built_in">pwd</span>=<span class="string">&#x27;1234567&#x27;</span>&#125;, User&#123;id=2, user=<span class="string">&#x27;saxon&#x27;</span>, <span class="built_in">pwd</span>=<span class="string">&#x27;441564161&#x27;</span>&#125;]</span><br><span class="line">Resetting autocommit to <span class="literal">true</span> on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Returned connection 220695851 to pool.</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重要信息：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 220695851.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">==&gt;  Preparing: select * from mybatis.saxon</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, user, pwd</span><br><span class="line">&lt;==        Row: 1, saxon, 1234567</span><br><span class="line">&lt;==        Row: 2, saxon, 441564161</span><br><span class="line">&lt;==      Total: 2</span><br><span class="line"><span class="number">441564161</span></span><br><span class="line">[User&#123;id=1, user=&#x27;saxon&#x27;, pwd=&#x27;1234567&#x27;&#125;, User&#123;id=2, user=&#x27;saxon&#x27;, pwd=&#x27;441564161&#x27;&#125;]</span><br><span class="line">Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Returned connection 220695851 to pool.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第二种：<strong>LOG4J</strong></p><p>1.先导入包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.setting设置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="comment">#存储的位置</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/saxon.log</span></span><br><span class="line"><span class="comment">#存储的最大大小，超出这个就在生成另一个</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="comment">#格式</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"><span class="comment">#是否追加</span></span><br><span class="line"><span class="meta">log4j.appender.file.Append</span>=<span class="string">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">static</span> Logger logger = Logger.getLogger (UserDaoTest.class);</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">testLog4j</span><span class="params">()</span></span>&#123;</span><br><span class="line">        logger.info (<span class="string">&quot;我是谁&quot;</span>);</span><br><span class="line">        logger.error (<span class="string">&quot;我是谁&quot;</span>);</span><br><span class="line">        logger.debug (<span class="string">&quot;我是谁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之CRUD操作</title>
      <link href="2020/12/11/Mybatis%E4%B9%8BCRUD%E6%93%8D%E4%BD%9C/"/>
      <url>2020/12/11/Mybatis%E4%B9%8BCRUD%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h2><h3 id="1-namespace"><a href="#1-namespace" class="headerlink" title="1.namespace"></a>1.namespace</h3><p>namespace要与我们的接口名一一对应；</p><h3 id="2-select"><a href="#2-select" class="headerlink" title="2.select"></a>2.select</h3><ul><li><strong>id</strong>：要与接口的方法名一致，作为一个我们唯一的标识；</li><li>**resultType:**返回值，如果是集合，写集合类型里面的东西；</li><li>**parameterType:**参数的类型 </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserID&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.saxon where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">       SqlSession sqlSession=<span class="keyword">null</span>;</span><br><span class="line">       <span class="comment">//关闭ssqlsession，这个关闭很重要</span></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//获得sqlsession对象</span></span><br><span class="line">           sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">           <span class="comment">//获得mapper对象,为了得到userdao，使用里面的方法；</span></span><br><span class="line">           UserDao mapper = sqlSession.getMapper (UserDao.class);</span><br><span class="line">           User userID = mapper.getUserID (<span class="number">2</span>);</span><br><span class="line">           System.out.println (userID);</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (sqlSession!=<span class="keyword">null</span>)&#123;</span><br><span class="line">              sqlSession.close ();</span><br><span class="line">          &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-insert"><a href="#3-insert" class="headerlink" title="3.insert"></a>3.insert</h3><h3 id="4-update"><a href="#4-update" class="headerlink" title="4.update"></a>4.update</h3><h3 id="5-delete"><a href="#5-delete" class="headerlink" title="5.delete"></a>5.delete</h3><p><strong>==除了查找之外，其他的都要提交事务，提交的话就是一句 sqlsession.commit()==</strong></p><h3 id="6-MAP-的使用"><a href="#6-MAP-的使用" class="headerlink" title="6.MAP 的使用"></a>6.MAP 的使用</h3><p>在一个实体类属性太多的时候，我们就可以用一个集合来添加属性；</p><p>直接利用key-value取出我们要的值；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">     update mybatis.saxon set user=#&#123;user&#125; ,pwd=#&#123;pwd&#125; where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserDao mapper = sqlSession.getMapper (UserDao.class);</span><br><span class="line">       Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">       map.put (<span class="string">&quot;id&quot;</span>,<span class="number">2</span>);</span><br><span class="line">       map.put (<span class="string">&quot;user&quot;</span>,<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">       map.put (<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;441564161&quot;</span>);</span><br><span class="line">       mapper.update (map);</span><br><span class="line">       sqlSession.commit ();</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>#{user}：里面的值就是你集合里面设置的值；</p><h3 id="7-模糊查询"><a href="#7-模糊查询" class="headerlink" title="7.模糊查询"></a>7.模糊查询</h3><p>1.在给出变量的时候拼接出来。例如String str=”%李%”；但是这个会存在sql注入的问题；</p><p>2.在我们写查询语句的时候，就在值的左右把他写成固定的；就是“%”#{value}“%”;可以避免一些注入问题；</p><h3 id="8-核心配置文件-mybatis-config-xml"><a href="#8-核心配置文件-mybatis-config-xml" class="headerlink" title="8.核心配置文件(mybatis-config.xml)"></a>8.核心配置文件(mybatis-config.xml)</h3><h4 id="1-properties-配置"><a href="#1-properties-配置" class="headerlink" title="1.properties 配置"></a>1.properties 配置</h4><p>我们的配置文件可以自己写成一个配置文件，也可以自己直接赋值</p><p><strong>==关于配置properties的位置，一定要放在第一位，他的位置有规定的==</strong></p><p>1.配置文件法</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/mybatis?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">saxon</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">111111</span></span><br></pre></td></tr></table></figure><p>引用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 读取配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span>   </span><br></pre></td></tr></table></figure><p>2.直接写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:localhost:3306/smbms?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-environments-环境"><a href="#2-environments-环境" class="headerlink" title="2.environments 环境"></a>2.environments 环境</h4><p>这个标签是关于环境的标签，我们可以配置多套环境但是只能使用一套环境；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>environments和environment通过id选择环境；你可以自定义环境；</p><h4 id="3-transactionManager-事务管理"><a href="#3-transactionManager-事务管理" class="headerlink" title="3.transactionManager 事务管理"></a>3.transactionManager 事务管理</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>事务的管理者，有两种，但是mybatis默认的是JDBC，还有另外一种叫做 <strong>MANGED</strong></p><h4 id="4-dataSource-数据源"><a href="#4-dataSource-数据源" class="headerlink" title="4.dataSource  数据源"></a>4.dataSource  数据源</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认的是pooled还有其他两种，一共是[UNPOOLED|POOLED|JNDI]这三种；</p><h4 id="5-typeAliases-别名"><a href="#5-typeAliases-别名" class="headerlink" title="5 .typeAliases.别名"></a>5 .typeAliases.别名</h4><p>第一种：直接配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种：扫描包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.saxon.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>取别名就是为了在我们使用的时候，避免重复的写一些冗长的代码，比如com.saxon.pojo.Use，我们取得别名就是user，那么我们在resultType要使用com.saxon.pojo.Use就可以使用user。</p><p>两种配置的区别：</p><p>1.第一种可以自己写名字，第二种的默认是类名的首字母大写，如果要自定义的话，可以在类名上加上一个注解@Aliases(“”);</p><p>2.当我们类名比较少的时候就可以用第一种，当我们类名比较多的时候，直接使用扫描包就可以了；</p><h4 id="6-setting设置"><a href="#6-setting设置" class="headerlink" title="6.setting设置"></a>6.setting设置</h4><h5 id="1-mapUnderscoreToCamelCase-把only-name变成onlyName-把有下划线的命名取成驼峰命名；"><a href="#1-mapUnderscoreToCamelCase-把only-name变成onlyName-把有下划线的命名取成驼峰命名；" class="headerlink" title="1.mapUnderscoreToCamelCase:把only_name变成onlyName,把有下划线的命名取成驼峰命名；"></a>1.mapUnderscoreToCamelCase:把only_name变成onlyName,把有下划线的命名取成驼峰命名；</h5><h5 id="2-logImpl：日志的输出可以取的值有：SLF4J-LOG4J-LOG4J2-JDK-LOGGING-COMMONS-LOGGING-STDOUT-LOGGING-NO-LOGGING"><a href="#2-logImpl：日志的输出可以取的值有：SLF4J-LOG4J-LOG4J2-JDK-LOGGING-COMMONS-LOGGING-STDOUT-LOGGING-NO-LOGGING" class="headerlink" title="2.logImpl：日志的输出可以取的值有：SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING"></a>2.logImpl：日志的输出可以取的值有：SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING</h5><h4 id="7-mapper映射器"><a href="#7-mapper映射器" class="headerlink" title="7.mapper映射器"></a>7.mapper映射器</h4><p>第一种：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/saxon/Dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>==使用第二种的时候必须保证两点：1.映射和实体类必须要在同一个包里；2.并且要和这个类的名字相符；简单来说就是通过你绑定的这个类，去找和这个类名一样的文件xml文件==</strong></p><p>第三种：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.saxon.Dao&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用第三种的要求和第二种是一样的；</p><p><strong>所以一般推荐使用第一种</strong></p><h4 id="8-作用域（Scope）和生命周期SqlSessionFactoryBuilder"><a href="#8-作用域（Scope）和生命周期SqlSessionFactoryBuilder" class="headerlink" title="8.作用域（Scope）和生命周期SqlSessionFactoryBuilder"></a>8.作用域（Scope）和生命周期SqlSessionFactoryBuilder</h4><h5 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h5><p>这个类可以被实例化、使用和丢弃<strong>，一旦创建了 SqlSessionFactory，就不再需要它了</strong>。 因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，</p><h5 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h5><p><strong>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在</strong>，没有任何理由丢弃它或重新创建另一个实例。 使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏习惯”。因此 SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用<strong>单例模式</strong>或者静态单例模式。</p><h5 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h5><p><strong>每个线程都应该有它自己的 SqlSession 实例</strong>。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。 绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，考虑将 SqlSession 放在一个和 HTTP 请求相似的作用域中。 换句话说，每次收到 HTTP 请求，就可以打开一个 SqlSession，返回一个响应后，<strong>就关闭它。 这个关闭操作很重要</strong>，为了确保每次都能执行关闭操作，你应该把这个关闭操作放到 finally 块中。 下面的示例就是一个确保 SqlSession 关闭的标准模式：</p><p><strong>每次的一个sqlsession都是为了完成一次的任务，CRUD</strong></p><h4 id="9-结果集映射"><a href="#9-结果集映射" class="headerlink" title="9.结果集映射"></a>9.结果集映射</h4><p>就是数据库里面的字段和实体类里面的属性的映射；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;users&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;users&quot;</span>&gt;</span><span class="comment">&lt;!-- the must match with  a pojo--&gt;</span></span><br><span class="line">   select * from mybatis.saxon</span><br><span class="line"> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得sqlsession对象</span></span><br><span class="line">sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line"><span class="comment">//获得mapper对象,为了得到userdao，使用里面的方法；</span></span><br><span class="line">UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">List&lt;User&gt; userList = mapper.getUserList ();</span><br><span class="line">User user = userList.get (<span class="number">1</span>);</span><br><span class="line">System.out.println (user.getPassword ());</span><br><span class="line">System.out.println (userList);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之第一个Mybatis项目</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E7%AC%AC%E4%B8%80%E4%B8%AAMybatis%E9%A1%B9%E7%9B%AE/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E7%AC%AC%E4%B8%80%E4%B8%AAMybatis%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一个mybatis项目"><a href="#第一个mybatis项目" class="headerlink" title="第一个mybatis项目"></a>第一个mybatis项目</h2><h3 id="一、数据库环境搭建"><a href="#一、数据库环境搭建" class="headerlink" title="一、数据库环境搭建"></a>一、数据库环境搭建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE &#96;mybatis&#96;;</span><br><span class="line">use &#96;mybatis&#96;;</span><br><span class="line">create TABLE &#96;saxon&#96;(</span><br><span class="line">&#96;id&#96; INT(10) not null ,</span><br><span class="line">&#96;user&#96; VARCHAR(20) not null,</span><br><span class="line">&#96;pwd&#96; VARCHAR(10) not null DEFAULT &quot;saxon&quot;,</span><br><span class="line">PRIMARY KEY(&#96;id&#96;)</span><br><span class="line">)ENGINE&#x3D;INNODB,CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">use &#96;mybatis&#96;;</span><br><span class="line">INSERT INTO  &#96;saxon&#96;(&#96;id&#96;,&#96;user&#96;,&#96;pwd&#96;) VALUES(1,&#39;saxon&#39;,&#39;1234567&#39;) </span><br></pre></td></tr></table></figure><h3 id="二、建立一个项目"><a href="#二、建立一个项目" class="headerlink" title="二、建立一个项目"></a>二、建立一个项目</h3><p>1.配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:localhost:3306/smbms?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234567&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/example/BlogMapper.xml&quot;</span>/&gt;</span><span class="comment">&lt;!-- 目录下的xml文件，中间用/隔开--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、编写工具类"><a href="#三、编写工具类" class="headerlink" title="三、编写工具类"></a>三、编写工具类</h3><p><strong>UserMapping:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.saxon.Dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.saxon</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>工具类</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUnit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;<span class="comment">//获得工厂，产生sqlsession；</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        String resource = <span class="string">&quot;org/mybatis/example/mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = Resources.getResourceAsStream (resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder ().build (inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得SQL session对象，就是jdbc中的statement对象，操作数据库</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="四、编写一个实体类"><a href="#四、编写一个实体类" class="headerlink" title="四、编写一个实体类"></a>四、编写一个实体类</h3><p>pojo:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span> <span class="params">(<span class="keyword">int</span> id, String user, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span> <span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span> <span class="params">(String user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span> <span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h3><p>测试代码;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Util.MybatisUnit;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获得sqlsession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        <span class="comment">//获得mapper对象,为了得到userdao，使用里面的方法；</span></span><br><span class="line">        UserDao mapper = sqlSession.getMapper (UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList = mapper.getUserList ();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println (user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==特别要注意的是，不要在配置文件，关键的xml里面写中文注释，会出现 2 字节的 UTF-8 序列的字节 2 无效的错误,，原因在编码，不清楚就不弄了==</strong></p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis之简介</title>
      <link href="2020/12/11/Mybatis%E4%B9%8B%E7%AE%80%E4%BB%8B/"/>
      <url>2020/12/11/Mybatis%E4%B9%8B%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="一、什么是Mybatis"><a href="#一、什么是Mybatis" class="headerlink" title="一、什么是Mybatis"></a>一、什么是Mybatis</h3><p>MyBatis 是一款优秀的<strong>持久层框架</strong>，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Ordinary Java Object,普通的 Java对象)映射成数据库中的记录。</p><p><strong>如何获得mybatis</strong></p><ul><li>maven 依赖</li><li>Github 原码</li></ul><p><strong>持久化：</strong></p><p>数据持久化：将数据进行一个持久化的变化；</p><p><strong>持久层：</strong></p><p>持久层，可以理解成数据 保存在 数据库或者 硬盘一类可以保存很长时间的设备里面，不像放在内存中那样断电就消失了，也就是把数据存在持久化设备上，mybatis就是持久层。</p><p><strong>特点</strong>：</p><ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的orm字段关系映射</li><li>提供对象关系映射标签，支持对象关系组建维护</li><li>提供xml标签，支持编写动态sql。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之Tomcat</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BTomcat/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BTomcat/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><h4 id="一、安装Tomcat"><a href="#一、安装Tomcat" class="headerlink" title="一、安装Tomcat"></a>一、安装Tomcat</h4><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200723124139128.png" alt="image-20200723124139128"></p><p>目录的意义：</p><ul><li>Bin:启动和关闭等一系列文件</li><li>conf:配置文件</li><li>lib:很多需要的jar包</li><li>logs:日志文件</li><li>Temp:临时文件</li><li>webApps:服务器读取文件的存放位置</li></ul><h4 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h4><p><strong>位置：apache-tomcat-9.0.37\conf\server.xml</strong></p><h5 id="1-更改设备的端口号"><a href="#1-更改设备的端口号" class="headerlink" title="1.更改设备的端口号"></a>1.更改设备的端口号</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> 常见的端口号：</span></span><br><span class="line"><span class="comment">Tomcat：8080；</span></span><br><span class="line"><span class="comment">MySQL：3306；</span></span><br><span class="line"><span class="comment">https:443;</span></span><br><span class="line"><span class="comment">http:80;</span></span><br><span class="line"><span class="comment">-&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-配置主机名称"><a href="#2-配置主机名称" class="headerlink" title="2.配置主机名称"></a>2.配置主机名称</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里改了还要去改Windows 下面的host文件-&gt;</span></span><br></pre></td></tr></table></figure><p>默认的主机名：localhost或者127.0.0.1；</p><p>默认的访问文件夹：webapps；</p><p><strong>一个网站如何访问：</strong></p><p>1.输入一个域名，然后搜索</p><p>2.域名解析</p><ul><li>先在本机上找，找到就返回相应的地址映射 本机地址配置：C:\Windows\System32\drivers\etc</li><li>如果本机没有，那么就去<strong>DNS</strong>上去找，有的话，返回IP地址和端口号等信息。没有的话，就会找不到。</li></ul><p><strong>DNS：所有域名的管理的一个地方</strong></p><h4 id="三、如何发布一个网站"><a href="#三、如何发布一个网站" class="headerlink" title="三、如何发布一个网站"></a>三、如何发布一个网站</h4><p>Tomcat：</p><p>先将自己的项目导入tomcat下面的webapps目录下，通过域名+项目名来访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#必须有的文件是一个web-inf文件夹，里面的web.xml文件 这是一个配置文件，配置网站信息的,以后还会有classes(java程序)和lib(依赖的jar包)；</span></span><br><span class="line"><span class="comment">#还有一个网页或者其他</span></span><br><span class="line"><span class="comment">#static摆放网页的资源文件，可以正常加载</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之文件上传和邮件发送</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>需要的jar包：</p><p>commo.io;</p><p>文件上传要求：</p><p>1.为了文件的安全性，我们要把文件放在外界无法直接访问的目录下；</p><p>2.要限制文件的大小</p><p>3.为了防止发生重名覆盖的现象，我们要避免重名</p><p>4.可以限制文件的类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.ProgressListener;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">fileUpLoad</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//判断文件是不是有文件上传的项</span></span><br><span class="line">        <span class="keyword">if</span> (! ServletFileUpload.isMultipartContent (req)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//终止方法,没有文件上传的功能</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建文件上传的路径 建议在WEB-INF目录下因为外部无法直接访问，比较安全；</span></span><br><span class="line">        String realPath = <span class="keyword">this</span>.getServletContext ().getRealPath (<span class="string">&quot;/WEB-INF/load&quot;</span>);</span><br><span class="line">        File file = <span class="keyword">new</span> File (realPath);</span><br><span class="line">        <span class="keyword">if</span> (! file.exists ()) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> mkdir = file.mkdir ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//临时文件区域，当文件的大小超过了一定的大小，就放在这里，超过一定的时间九自动删除；</span></span><br><span class="line">        String tempPath = <span class="keyword">this</span>.getServletContext ().getRealPath (<span class="string">&quot;/WEB-INF/temp&quot;</span>);</span><br><span class="line">        File temp = <span class="keyword">new</span> File (tempPath);</span><br><span class="line">        <span class="keyword">if</span> (! temp.exists ()) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> mkdir = temp.mkdir ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得一个工厂</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          @see DiskFileItemFactory</span></span><br><span class="line"><span class="comment">         * public static final int DEFAULT_SIZE_THRESHOLD = 10240;</span></span><br><span class="line"><span class="comment">         *     private File repository; 存储库文件的地方</span></span><br><span class="line"><span class="comment">         *     private int sizeThreshold;  文件的大小</span></span><br><span class="line"><span class="comment">         *     private FileCleaningTracker fileCleaningTracker;清理文件</span></span><br><span class="line"><span class="comment">         *     private String defaultCharset;编码</span></span><br><span class="line"><span class="comment">         *      public static final String DEFAULT_CHARSET = &quot;ISO-8859-1&quot;;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory ();</span><br><span class="line">        <span class="comment">//factory要有。</span></span><br><span class="line">        ServletFileUpload Upload = <span class="keyword">new</span> ServletFileUpload ();</span><br><span class="line">        <span class="comment">//监听我们的进程的进度</span></span><br><span class="line">        Upload.setProgressListener (<span class="keyword">new</span> ProgressListener () &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> pBytesRead 已经读取的文件</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> pContentLength 文件上传的大小</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> pItems 已经上传的项目</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span> <span class="params">(<span class="keyword">long</span> pBytesRead, <span class="keyword">long</span> pContentLength, <span class="keyword">int</span> pItems)</span> </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//获得文件的后缀和文件的名字</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//解析前端的请求，封装成一个fileitem对象</span></span><br><span class="line">        List&lt;FileItem&gt; list = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            list = Upload.parseRequest (req);</span><br><span class="line">            <span class="keyword">for</span> (FileItem fileItem : list) &#123;</span><br><span class="line">                <span class="keyword">if</span> (fileItem.isFormField ()) &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="邮件发送"><a href="#邮件发送" class="headerlink" title="邮件发送"></a>邮件发送</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.mail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.activation.DataHandler;</span><br><span class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mail</span> </span>&#123;</span><br><span class="line">    <span class="comment">//配置文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line">        <span class="comment">//准备</span></span><br><span class="line">        properties.setProperty (<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>);<span class="comment">//设置QQ邮箱</span></span><br><span class="line">        properties.setProperty (<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);<span class="comment">//设置发送协议</span></span><br><span class="line">        properties.setProperty (<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);<span class="comment">//是否验证密码</span></span><br><span class="line">        <span class="comment">//QQ邮箱</span></span><br><span class="line"></span><br><span class="line">        MailSSLSocketFactory socketFactory = <span class="keyword">new</span> MailSSLSocketFactory ();</span><br><span class="line">        socketFactory.setTrustAllHosts (<span class="keyword">true</span>);</span><br><span class="line">        properties.put (<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        properties.put (<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, socketFactory);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//邮箱的五个步骤</span></span><br><span class="line">        <span class="comment">//1.设置session环境</span></span><br><span class="line">        Session defaultInstance = Session.getDefaultInstance (properties, <span class="keyword">new</span> Authenticator () &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication (<span class="string">&quot;2433027822@qq.com&quot;</span>, <span class="string">&quot;ffvluhisjcfzebab&quot;</span>);<span class="comment">//前一个写地址，后一个写验证码</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        defaultInstance.setDebug (<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//2获得transport对象.用来发送邮件</span></span><br><span class="line">        Transport ts = defaultInstance.getTransport ();</span><br><span class="line">        <span class="comment">//3.使用邮箱和授权码来进行连接</span></span><br><span class="line">        ts.connect (<span class="string">&quot;smtp.qq.com&quot;</span>, <span class="string">&quot;2433027822#qq.com&quot;</span>, <span class="string">&quot;ffvluhisjcfzebab&quot;</span>);</span><br><span class="line">        <span class="comment">//4,编写邮件</span></span><br><span class="line">        Message message = <span class="keyword">new</span> MimeMessage (defaultInstance);</span><br><span class="line">        <span class="comment">//指明发件人</span></span><br><span class="line">        message.addRecipient (Message.RecipientType.TO, <span class="keyword">new</span> InternetAddress (<span class="string">&quot;2433027822@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//设置主题</span></span><br><span class="line">        message.setSubject (<span class="string">&quot;你好啊&quot;</span>);</span><br><span class="line">        <span class="comment">//设置图片内容</span></span><br><span class="line">        MimeBodyPart image = <span class="keyword">new</span> MimeBodyPart ();</span><br><span class="line">        <span class="comment">//图片要处理一下数据</span></span><br><span class="line">        DataHandler dataHandler = <span class="keyword">new</span> DataHandler (<span class="keyword">new</span> FileDataSource (<span class="string">&quot;D:\\dnf补丁\\bg.jpg&quot;</span>));</span><br><span class="line">        image.setDataHandler (dataHandler);</span><br><span class="line">        image.setContentID (<span class="string">&quot;bg.jpg&quot;</span>);<span class="comment">//这里设置的ID我们子啊后面可以接着使用</span></span><br><span class="line">        <span class="comment">//准备正文数据</span></span><br><span class="line">        MimeBodyPart content=<span class="keyword">new</span> MimeBodyPart ();</span><br><span class="line">        content.setContent (<span class="string">&quot;这是一个带有图片的邮件&lt;img src=&#x27;uid:bg.jpg&#x27;&gt;&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//描述数据关系</span></span><br><span class="line">        MimeMultipart mm=<span class="keyword">new</span> MimeMultipart ();</span><br><span class="line">        mm.addBodyPart (image);</span><br><span class="line">        mm.addBodyPart (content);</span><br><span class="line">        mm.setSubType (<span class="string">&quot;related&quot;</span>);</span><br><span class="line">        message.setText (<span class="string">&quot;这是第一份邮件&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置到消息中</span></span><br><span class="line">        message.setContent (mm);<span class="comment">//把最后消息发送到消息中</span></span><br><span class="line">        message.saveChanges ();<span class="comment">//保存修改</span></span><br><span class="line">        <span class="comment">//设置接受的人</span></span><br><span class="line">        message.setFrom (<span class="keyword">new</span> InternetAddress (<span class="string">&quot;2433027822@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//5.发送邮件</span></span><br><span class="line">        ts.sendMessage (message,message.getAllRecipients ());</span><br><span class="line">        ts.close ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之超市管理系统</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8B%E8%B6%85%E5%B8%82%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8B%E8%B6%85%E5%B8%82%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="SMBMS系统"><a href="#SMBMS系统" class="headerlink" title="SMBMS系统"></a>SMBMS系统</h2><h3 id="一、步骤"><a href="#一、步骤" class="headerlink" title="一、步骤"></a>一、步骤</h3><p><strong>1.搭建一个web项目</strong></p><p> <strong>2.配置Tomcat</strong></p><p> <strong>3.导入依赖和更新web.xml</strong></p><p> <strong>4.编写实体类JavaBean；</strong></p><p> <strong>5.创建项目的目录</strong></p><h5 id="编写基础公共类，工具类；"><a href="#编写基础公共类，工具类；" class="headerlink" title="编写基础公共类，工具类；"></a><strong>编写基础公共类，工具类；</strong></h5><ol><li><h6 id="数据库配置文件db-properties"><a href="#数据库配置文件db-properties" class="headerlink" title="数据库配置文件db.properties,"></a>数据库配置文件db.properties,</h6><p>关于读取配置文件的问题；其中一种方法，使用类加载器。getClassLoader ().getResource会选择当前class文件的根目录(src/)，在web程序中，我们的Java文件夹中Java文件编译过后会在classes文件夹下，我们的resource下面的文件也会到这个包里，所以可以这么使用；关于类加载器的内容，慢慢的开始补充；</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream stream = BaseDao.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;db.properties&quot;</span>);</span><br></pre></td></tr></table></figure><h6 id="2-编写数据库的查询类"><a href="#2-编写数据库的查询类" class="headerlink" title="2.编写数据库的查询类"></a>2.编写数据库的查询类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream stream = BaseDao.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line">            properties.load (stream);</span><br><span class="line">            driver = properties.getProperty (<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty (<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty (<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName (driver);</span><br><span class="line">            connection = DriverManager.getConnection (url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql        查询语句;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params     参数;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回查询;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title">executeQuery</span> <span class="params">(Connection connection, String sql, Object[] params)</span> </span>&#123;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                PreparedStatement preparedStatement = connection.prepareStatement (sql);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                    preparedStatement.setObject (i, params[i - <span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                resultSet = preparedStatement.executeQuery (sql);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resultSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql        数据库查询语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params     数据库的属性</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回改变的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">execute</span> <span class="params">(Connection connection, String sql, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> changeRows = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                PreparedStatement preparedStatement = connection.prepareStatement (sql);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                    preparedStatement.setObject (i + <span class="number">1</span>, params[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                changeRows = preparedStatement.executeUpdate ();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> changeRows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭连接释放资源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement  数据库本身</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet  结果集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回释放结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">release</span> <span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close ();</span><br><span class="line">                connection = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">                System.out.println (<span class="string">&quot;connection&quot;</span> + <span class="string">&quot;关闭失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close ();</span><br><span class="line">                statement = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">                System.out.println (<span class="string">&quot;statement&quot;</span> + <span class="string">&quot;关闭失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close ();</span><br><span class="line">                resultSet = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">                System.out.println (<span class="string">&quot;resultSet&quot;</span> + <span class="string">&quot;关闭失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-编写字符编码过滤器"><a href="#3-编写字符编码过滤器" class="headerlink" title="3.编写字符编码过滤器"></a>3.编写字符编码过滤器</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span> <span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        chain.doFilter (request, response);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="7-导入静态资源"><a href="#7-导入静态资源" class="headerlink" title="7.导入静态资源"></a>7.导入静态资源</h5><h5 id="8-编写Dao层代码"><a href="#8-编写Dao层代码" class="headerlink" title="8.编写Dao层代码"></a>8.编写Dao层代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">     <span class="function">User <span class="title">getLoginUser</span><span class="params">(Connection connection, String userCode,String password)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        user=<span class="keyword">new</span> User ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getLoginUser</span> <span class="params">(Connection connection, String userCode,String password)</span> </span>&#123;</span><br><span class="line">        connection = BaseDao.getConnection ();</span><br><span class="line">        String sql = <span class="string">&quot;select * from smbms_user where smbms_user.userCode=? and smbms_user.userPassword=?; &quot;</span>;</span><br><span class="line">        Object[] params = &#123;userCode,password&#125;;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ResultSet resultSet = BaseDao.executeQuery (connection, sql, params);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(resultSet.next ())&#123;</span><br><span class="line">                    user.setID (resultSet.getInt (<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                    user.setUserCode (resultSet.getString (<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                    user.setUserName (resultSet.getString (<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                    user.setUserPassword (resultSet.getString (<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                    user.setGender (resultSet.getInt (<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    user.setBirthday (resultSet.getDate (<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                    user.setPhone (resultSet.getString (<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                    user.setAddress (resultSet.getString (<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                    user.setUserRole (resultSet.getInt (<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                    user.setCreateBy (resultSet.getInt (<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                    user.setCreationDate (resultSet.getDate (<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                    user.setModifyBy (resultSet.getInt (<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                    user.setModifyDate (resultSet.getDate (<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    user=<span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="9-编写service层代码"><a href="#9-编写service层代码" class="headerlink" title="9.编写service层代码"></a>9.编写service层代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">     <span class="function">User  <span class="title">login</span><span class="params">(String userCode,String password)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.User.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.User.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      userDao = <span class="keyword">new</span> UserDaoImpl ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span> <span class="params">(String userCode,String password)</span> </span>&#123;</span><br><span class="line">        Connection connection=<span class="keyword">null</span>;</span><br><span class="line">        User user=<span class="keyword">null</span>;</span><br><span class="line">        connection=BaseDao.getConnection ();</span><br><span class="line">        <span class="keyword">if</span> (userDao!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            user = userDao.getLoginUser (connection, userCode,password);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="10-编写注册登录servlet"><a href="#10-编写注册登录servlet" class="headerlink" title="10.编写注册登录servlet"></a>10.编写注册登录servlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.saxon.service.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.saxon.util.constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;start&quot;</span>);</span><br><span class="line">        UserServiceImpl user=<span class="keyword">new</span> UserServiceImpl ();</span><br><span class="line">        String userCode = req.getParameter (<span class="string">&quot;userCode&quot;</span>);</span><br><span class="line">        String password = req.getParameter (<span class="string">&quot;userPassword&quot;</span>);</span><br><span class="line">        User login = user.login (userCode, password);</span><br><span class="line">        <span class="keyword">if</span> (login!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            req.getSession ().setAttribute (constants.USER_SESSION,user);</span><br><span class="line">            resp.sendRedirect (<span class="string">&quot;JSP/frame.jsp&quot;</span>);</span><br><span class="line">            resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.getServletContext ().setAttribute (<span class="string">&quot;error&quot;</span>,<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">            resp.sendRedirect (<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二、密码修改"><a href="#二、密码修改" class="headerlink" title="二、密码修改"></a>二、密码修改</h3><h4 id="1-旧密码验证"><a href="#1-旧密码验证" class="headerlink" title="1.旧密码验证"></a>1.旧密码验证</h4><p>由于旧密码可以被我们储存在session中，所以我们可以不用在验证旧密码的时候去查询数据库；</p><p>前端代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">jsp/user.<span class="keyword">do</span><span class="string">&quot; 数据提交给的serlvet action里面的数据</span></span><br><span class="line"><span class="string">这里的name属性就是我们接收值的string 例如req.getParameter (&quot;</span>oldpassword<span class="string">&quot;) 表单传递的是name</span></span><br><span class="line"><span class="string">$&#123;&#125;:el表达式，</span></span><br><span class="line"><span class="string">--&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;%@ page language=&quot;</span>java<span class="string">&quot; contentType=&quot;</span>text/html; charset=UTF-<span class="number">8</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">pageEncoding=&quot;</span>UTF-<span class="number">8</span><span class="string">&quot;%&gt;</span></span><br><span class="line"><span class="string">&lt;%@include file=&quot;</span>/JSP/common/head.jsp<span class="string">&quot;%&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;</span>right<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;</span>location<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;strong&gt;你现在所在的位置是:&lt;/strong&gt;</span></span><br><span class="line"><span class="string">                &lt;span&gt;密码修改页面&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;</span>providerAdd<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;form id=&quot;</span>userForm<span class="string">&quot; name=&quot;</span>userForm<span class="string">&quot; method=&quot;</span>post<span class="string">&quot; action=&quot;</span>$&#123;pageContext.request.contextPath &#125;/jsp/user.<span class="keyword">do</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;input type=&quot;</span>hidden<span class="string">&quot; name=&quot;</span>method<span class="string">&quot; value=&quot;</span>savepwd<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;!--div的class 为error是验证错误，ok是验证成功--&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;</span>info<span class="string">&quot;&gt;$&#123;message&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label for=&quot;</span>oldPassword<span class="string">&quot;&gt;旧密码：&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;</span>password<span class="string">&quot; name=&quot;</span>oldpassword<span class="string">&quot; id=&quot;</span>oldpassword<span class="string">&quot; value=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;font color=&quot;</span>red<span class="string">&quot;&gt;&lt;/font&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div&gt;</span></span><br><span class="line"><span class="string">                        &lt;label for=&quot;</span>newPassword<span class="string">&quot;&gt;新密码：&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;</span>password<span class="string">&quot; name=&quot;</span>newpassword<span class="string">&quot; id=&quot;</span>newpassword<span class="string">&quot; value=&quot;</span><span class="string">&quot;&gt; </span></span><br><span class="line"><span class="string">&lt;font color=&quot;</span>red<span class="string">&quot;&gt;&lt;/font&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div&gt;</span></span><br><span class="line"><span class="string">                        &lt;label for=&quot;</span>rnewpassword<span class="string">&quot;&gt;确认新密码：&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;</span>password<span class="string">&quot; name=&quot;</span>rnewpassword<span class="string">&quot; id=&quot;</span>rnewpassword<span class="string">&quot; value=&quot;</span><span class="string">&quot;&gt; </span></span><br><span class="line"><span class="string">&lt;font color=&quot;</span>red<span class="string">&quot;&gt;&lt;/font&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;</span>providerAddBtn<span class="string">&quot;&gt;</span></span><br><span class="line">                        &lt;!--&lt;a href=&quot;#&quot;&gt;保存&lt;/a&gt;--&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;button&quot;</span> name=<span class="string">&quot;save&quot;</span> id=<span class="string">&quot;save&quot;</span> value=<span class="string">&quot;保存&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;input-button&quot;</span>&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/JSP/common/foot.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;pageContext.request.contextPath &#125;/js/pwdmodify.js&quot; charset=&quot;UTF-8&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>对旧数据的查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证旧密码，从session中获得</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">oldPwd</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();<span class="comment">//设置一个map集合来把信息传递出去</span></span><br><span class="line">        String oldpassword = req.getParameter (<span class="string">&quot;oldpassword&quot;</span>);<span class="comment">//获得传递过来的信息</span></span><br><span class="line">        User user = (User) req.getSession ().getAttribute (constants.USER_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (oldpassword != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (oldpassword.equals (user.getUserPassword ())) &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;sessionerror&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置编译的类型</span></span><br><span class="line">        resp.setContentType (<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        PrintWriter writer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writer = resp.getWriter ();</span><br><span class="line">            writer.write (JSONArray.toJSONString (map));<span class="comment">//将一个对象变为json</span></span><br><span class="line">            writer.flush ();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (writer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                writer.close ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把servlet处理的结果放回到一个集合中，再把集合变成一个json对象，这样js可以接收数据；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (oldpassword.equals (user.getUserPassword ())) &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;sessionerror&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">writer.write (JSONArray.toJSONString (map));<span class="comment">//将一个对象变为json</span></span><br></pre></td></tr></table></figure><p>AJAX：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">oldpassword.on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            url: path + <span class="string">&quot;/jsp/user.do&quot;</span>,<span class="comment">//传向的位置</span></span><br><span class="line">            data: &#123;<span class="attr">method</span>: <span class="string">&quot;pwdmodify&quot;</span>, <span class="attr">oldpassword</span>: oldpassword.val()&#125;,<span class="comment">//传输的数据</span></span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,<span class="comment">//接收的数据类型</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//成功的页面，回调函数</span></span><br><span class="line">                <span class="keyword">if</span> (data.result == <span class="string">&quot;true&quot;</span>) &#123;<span class="comment">//旧密码正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;false&quot;</span>) &#123;<span class="comment">//旧密码输入不正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 原密码输入不正确&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;sessionerror&quot;</span>) &#123;<span class="comment">//当前用户session过期，请重新登录</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 当前用户session过期，请重新登录&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;error&quot;</span>) &#123;<span class="comment">//旧密码输入为空</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请输入旧密码&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//请求出错 回调函数</span></span><br><span class="line"></span><br><span class="line">                validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请求错误&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在ajax的成功返回的值中，data,由于接受的数据是json，我们后台返回的是一个map集合编译成的一个json数据，而json的格式就是key-value,所以其实date是一个对象，我们传的数值就是一个属性，所以用data.result;</span></span><br><span class="line">data.result == <span class="string">&quot;true“</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,<span class="comment">//接受方式</span></span><br><span class="line">            url: path + <span class="string">&quot;/jsp/user.do&quot;</span>,<span class="comment">//传向的位置</span></span><br><span class="line">            data: &#123;<span class="attr">method</span>: <span class="string">&quot;pwdmodify&quot;</span>, <span class="attr">oldpassword</span>: oldpassword.val()&#125;,<span class="comment">//传输的数据</span></span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,<span class="comment">//接收的数据类型</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//成功的页面，回调函数,</span></span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span></span><br></pre></td></tr></table></figure><h4 id="2-密码更新"><a href="#2-密码更新" class="headerlink" title="2.密码更新"></a>2.密码更新</h4><h5 id="1-userDao"><a href="#1-userDao" class="headerlink" title="1.userDao"></a>1.userDao</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">changeUserPassword</span> <span class="params">(Connection connection, String userCode, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> execute = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">&quot;update smbms_user set userPassword =? where userCode=?;&quot;</span>;</span><br><span class="line">            Object[] params = &#123;password, userCode&#125;;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                execute = BaseDao.execute (connection, sql, params);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            System.out.println (<span class="string">&quot;UserDaoImpl 关闭失败&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                BaseDao.release (<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);<span class="comment">//感觉应该没啥用</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.userService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">PasswordService</span> <span class="params">(String userCode, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDao.getConnection ();</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> i = userDao.changeUserPassword (connection, userCode, password);</span><br><span class="line">                flag = i &gt; <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">            throwables.printStackTrace ();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                BaseDao.release (connection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新密码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updatePassword</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String newpwd = req.getParameter (<span class="string">&quot;newpassword&quot;</span>);</span><br><span class="line">        Object attribute = req.getSession ().getAttribute (constants.USER_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (attribute != <span class="keyword">null</span>) &#123;</span><br><span class="line">            User user = (User) attribute;</span><br><span class="line">            UserServiceImpl service = <span class="keyword">new</span> UserServiceImpl ();</span><br><span class="line">            <span class="keyword">boolean</span> b = service.PasswordService (user.getUserCode (), newpwd);</span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                req.setAttribute (<span class="string">&quot;message&quot;</span>, <span class="string">&quot;change password successful&quot;</span>);</span><br><span class="line">                req.getSession ().removeAttribute (constants.USER_SESSION);</span><br><span class="line">                req.getRequestDispatcher (<span class="string">&quot;/login.jsp&quot;</span>).forward (req, resp);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.setAttribute (<span class="string">&quot;message&quot;</span>, <span class="string">&quot;change password error&quot;</span>);</span><br><span class="line">                req.getRequestDispatcher (<span class="string">&quot;#&quot;</span>).forward (req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute (<span class="string">&quot;message&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher (<span class="string">&quot;#&quot;</span>).forward (req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;info&quot;&gt;$&#123;message&#125;&lt;/div&gt;//接收返回值</span><br></pre></td></tr></table></figure><p>最后的提交与否是要三个都是真的时候才会提交</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">saveBtn.on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        oldpassword.blur();</span><br><span class="line">        newpassword.blur();</span><br><span class="line">        rnewpassword.blur();</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            oldpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>&amp;&amp;</span><br><span class="line">            newpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span></span><br><span class="line">            &amp;&amp; rnewpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (confirm(<span class="string">&quot;确定要修改密码？&quot;</span>)) &#123;</span><br><span class="line">                $(<span class="string">&quot;#userForm&quot;</span>).submit();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>密码验证的js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oldpassword = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> newpassword = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> rnewpassword = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> saveBtn = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    oldpassword = $(<span class="string">&quot;#oldpassword&quot;</span>);</span><br><span class="line">    newpassword = $(<span class="string">&quot;#newpassword&quot;</span>);</span><br><span class="line">    rnewpassword = $(<span class="string">&quot;#rnewpassword&quot;</span>);</span><br><span class="line">    saveBtn = $(<span class="string">&quot;#save&quot;</span>);</span><br><span class="line"></span><br><span class="line">    oldpassword.next().html(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    newpassword.next().html(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    rnewpassword.next().html(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    oldpassword.on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            url: path + <span class="string">&quot;/jsp/user.do&quot;</span>,<span class="comment">//传向的位置</span></span><br><span class="line">            data: &#123;<span class="attr">method</span>: <span class="string">&quot;pwdmodify&quot;</span>, <span class="attr">oldpassword</span>: oldpassword.val()&#125;,<span class="comment">//传输的数据</span></span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,<span class="comment">//接收的数据类型</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//成功的页面，回调函数</span></span><br><span class="line">                <span class="keyword">if</span> (data.result == <span class="string">&quot;true&quot;</span>) &#123;<span class="comment">//旧密码正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;false&quot;</span>) &#123;<span class="comment">//旧密码输入不正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 原密码输入不正确&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;sessionerror&quot;</span>) &#123;<span class="comment">//当前用户session过期，请重新登录</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 当前用户session过期，请重新登录&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;error&quot;</span>) &#123;<span class="comment">//旧密码输入为空</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请输入旧密码&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//请求出错 回调函数</span></span><br><span class="line"></span><br><span class="line">                validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请求错误&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;).on(<span class="string">&quot;focus&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#666666&quot;</span>&#125;, <span class="string">&quot;* Please enter the original password&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    newpassword.on(<span class="string">&quot;focus&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        validateTip(newpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#666666&quot;</span>&#125;, <span class="string">&quot;* Password length must be greater than 6 and less than 20&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;).on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (newpassword.val() != <span class="literal">null</span> &amp;&amp; newpassword.val().length &gt; <span class="number">6</span></span><br><span class="line">            &amp;&amp; newpassword.val().length &lt; <span class="number">20</span>) &#123;</span><br><span class="line">            validateTip(newpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            validateTip(newpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; Password input does not meet the specification, please re-enter&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    rnewpassword.on(<span class="string">&quot;focus&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        validateTip(rnewpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#666666&quot;</span>&#125;, <span class="string">&quot;* Please enter the same password as above&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;).on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rnewpassword.val() != <span class="literal">null</span> &amp;&amp; rnewpassword.val().length &gt; <span class="number">6</span></span><br><span class="line">            &amp;&amp; rnewpassword.val().length &lt; <span class="number">20</span> &amp;&amp; newpassword.val() == rnewpassword.val()) &#123;</span><br><span class="line">            validateTip(rnewpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            validateTip(rnewpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; The two passwords are inconsistent, please re-enter&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    saveBtn.on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        oldpassword.blur();</span><br><span class="line">        newpassword.blur();</span><br><span class="line">        rnewpassword.blur();</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            oldpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>&amp;&amp;</span><br><span class="line">            newpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span></span><br><span class="line">            &amp;&amp; rnewpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (confirm(<span class="string">&quot;确定要修改密码？&quot;</span>)) &#123;</span><br><span class="line">                $(<span class="string">&quot;#userForm&quot;</span>).submit();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="三、用户管理"><a href="#三、用户管理" class="headerlink" title="三、用户管理"></a>三、用户管理</h3><p>用户管理是由三条线组成：查询用户，查询角色，查询用户数量（分页）</p><h5 id="查询用户："><a href="#查询用户：" class="headerlink" title="查询用户："></a>查询用户：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span> <span class="params">(Connection connection, String userName, <span class="keyword">int</span> roleID, <span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        StringBuffer sql = <span class="keyword">new</span> StringBuffer (<span class="string">&quot;select * from smbms_user u ,smbms_role r  where u.userRole=r.id &quot;</span>);</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        <span class="keyword">int</span> execute = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (userName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and u.userName like ? &quot;</span>);</span><br><span class="line">                list.add (<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (roleID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and r.id= ?&quot;</span>);</span><br><span class="line">                list.add (roleID);</span><br><span class="line">            &#125;</span><br><span class="line">            sql.append (<span class="string">&quot; order by u.id  limit ?,?;&quot;</span>);<span class="comment">//第一个参数指定第一个返回记录行的偏移量,就是从第几个开始，第二个参数指定返回记录行的最大数目</span></span><br><span class="line">            currentPage = (currentPage - <span class="number">1</span>) *pageSize;</span><br><span class="line">            list.add (currentPage);</span><br><span class="line">            list.add (pageSize);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet = BaseDao.executeQuery (connection, sql.toString (), list.toArray ());</span><br><span class="line">                <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                    User _user = <span class="keyword">new</span> User ();</span><br><span class="line">                    _user.setID (resultSet.getInt (<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                    _user.setUserCode (resultSet.getString (<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                    _user.setUserName (resultSet.getString (<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                    _user.setUserPassword (resultSet.getString (<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                    _user.setGender (resultSet.getInt (<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    _user.setBirthday (resultSet.getDate (<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                    _user.setPhone (resultSet.getString (<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                    _user.setAddress (resultSet.getString (<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                    _user.setUserRole (resultSet.getInt (<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                    _user.setCreateBy (resultSet.getInt (<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                    _user.setCreationDate (resultSet.getDate (<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                    _user.setModifyBy (resultSet.getInt (<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                    _user.setModifyDate (resultSet.getDate (<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                    userList.add (_user);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                BaseDao.release (<span class="keyword">null</span>, <span class="keyword">null</span>, resultSet);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里的重点是利用字符串的拼接和集合的使用，来把查询语句拼成一句查询语句。用于实现我们的用户管理界面的用户查询和角色查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (userName != <span class="keyword">null</span>) &#123;</span><br><span class="line">               sql.append (<span class="string">&quot;and u.userName like ? &quot;</span>);</span><br><span class="line">               list.add (<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (roleID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">               sql.append (<span class="string">&quot;and r.id= ?&quot;</span>);</span><br><span class="line">               list.add (roleID);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>userservice</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span> <span class="params">(String userName, <span class="keyword">int</span> userRole, <span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        Connection connection = BaseDao.getConnection ();</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            userList = userDao.getUserList (connection, userName, userRole, currentPage, pageSize);</span><br><span class="line"></span><br><span class="line">            BaseDao.release (connection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="查询数量："><a href="#查询数量：" class="headerlink" title="查询数量："></a>查询数量：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">UserNum</span> <span class="params">(Connection connection, String userName, <span class="keyword">int</span> roleID)</span> </span>&#123;</span><br><span class="line">        StringBuffer sql = <span class="keyword">new</span> StringBuffer (<span class="string">&quot;select count(1) as count from smbms_user u ,smbms_role r  where u.userRole=r.id &quot;</span>);</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        <span class="keyword">int</span> execute = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (userName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and u.userCode like ? &quot;</span>);</span><br><span class="line">                list.add (<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (roleID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and u.userRole= ?&quot;</span>);</span><br><span class="line">                list.add (roleID);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet = BaseDao.executeQuery (connection, sql.toString (), list.toArray ());</span><br><span class="line">                <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                        execute = resultSet.getInt (<span class="string">&quot;count&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                BaseDao.release (<span class="keyword">null</span>, <span class="keyword">null</span>, resultSet);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>联表查询；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span> <span class="params">(String userName, <span class="keyword">int</span> userRole)</span> </span>&#123;</span><br><span class="line">    Connection connection = BaseDao.getConnection ();</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">        i = userDao.UserNum (connection, userName, userRole);</span><br><span class="line">        BaseDao.release (connection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="查询用户的角色的信息"><a href="#查询用户的角色的信息" class="headerlink" title="查询用户的角色的信息"></a>查询用户的角色的信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">getRoleList</span> <span class="params">(Connection connection)</span></span>&#123;</span><br><span class="line">       List&lt;Role&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">       String sql = <span class="string">&quot;select * from smbms_role r;&quot;</span>;</span><br><span class="line">       <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">           ResultSet resultSet = BaseDao.executeQuery (connection, sql, <span class="keyword">null</span>);</span><br><span class="line">           <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                       Role _role = <span class="keyword">new</span> Role ();</span><br><span class="line">                       _role.setID (resultSet.getInt (<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                       _role.setRoleCode (resultSet.getString (<span class="string">&quot;roleCode&quot;</span>));</span><br><span class="line">                       _role.setRoleName (resultSet.getString (<span class="string">&quot;roleName&quot;</span>));</span><br><span class="line">                       list.add (_role);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                   throwables.printStackTrace ();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>roleService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">getRoleList</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">       List&lt;Role&gt; roleList = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">       Connection connection = BaseDao.getConnection ();</span><br><span class="line">       <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">           roleList = role.getRoleList (connection);</span><br><span class="line">       &#125;</span><br><span class="line">       BaseDao.release (connection,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">       <span class="keyword">return</span> roleList;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这查询的是为了使用用户角色来查询我们的用户</p><p>接下来就是把这三条线合在一起组成一条线；</p><p>servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询界面</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line">        String queryname = req.getParameter (<span class="string">&quot;queryname&quot;</span>);</span><br><span class="line">        String checkRole = req.getParameter (<span class="string">&quot;queryUserRole&quot;</span>);</span><br><span class="line">        String index = req.getParameter (<span class="string">&quot;pageIndex&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> queryUserRole = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//确定查询的框是不是为空</span></span><br><span class="line">        <span class="keyword">if</span> (queryname == <span class="keyword">null</span>) &#123;</span><br><span class="line">            queryname = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断角色框是否是空，在这个框里，传递出来的是value=0;</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;c:if test=&quot;$&#123;roleList != null &#125;&quot;&gt;</span></span><br><span class="line"><span class="comment">         * &lt;option value=&quot;0&quot;&gt;--请选择--&lt;/option&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (checkRole != <span class="keyword">null</span> &amp;&amp; ! checkRole.equals (<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            queryUserRole = Integer.parseInt (checkRole);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//分页</span></span><br><span class="line">        <span class="keyword">int</span> currentPage = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> totalCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl ();</span><br><span class="line">        <span class="comment">//获得用户总数</span></span><br><span class="line">        totalCount = userService.getCount (queryname, queryUserRole);</span><br><span class="line">        <span class="keyword">if</span> (index != <span class="keyword">null</span>) &#123;</span><br><span class="line">            currentPage = Integer.parseInt (index);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置页面</span></span><br><span class="line">        PageSupport pageSupport = <span class="keyword">new</span> PageSupport ();</span><br><span class="line">        pageSupport.setPageSize (pageSize);</span><br><span class="line">        pageSupport.setTotalPageCount (totalCount);</span><br><span class="line">        pageSupport.setCurrentPageNo (currentPage);</span><br><span class="line">        pageSupport.setTotalCount (totalCount);</span><br><span class="line">        <span class="keyword">int</span> currentPageNo = pageSupport.getCurrentPageNo ();</span><br><span class="line">        <span class="comment">//控制第一页和最后一页</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageNo &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            currentPageNo = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentPageNo &gt; totalCount) &#123;</span><br><span class="line">            currentPageNo = totalCount;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得用户列表显示</span></span><br><span class="line">        List&lt;User&gt; userList = userService.getUserList (queryname, queryUserRole, currentPage, pageSize);</span><br><span class="line"></span><br><span class="line">        req.setAttribute (<span class="string">&quot;userList&quot;</span>, userList);</span><br><span class="line">        <span class="comment">//角色列表  用户查询的显示rolelist</span></span><br><span class="line">        roleServiceImpl role = <span class="keyword">new</span> roleServiceImpl ();</span><br><span class="line">        List&lt;Role&gt; roleList = role.getRoleList ();</span><br><span class="line">        req.setAttribute (<span class="string">&quot;roleList&quot;</span>, roleList);</span><br><span class="line">        <span class="comment">//显示页数</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;totalCount&quot;</span>, totalCount);</span><br><span class="line">        req.setAttribute (<span class="string">&quot;currentPageNo&quot;</span>, currentPageNo);<span class="comment">//当前页数</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;totalPageCount&quot;</span>,pageSupport.getTotalPageCount ());<span class="comment">//查询的总页数</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;queryUserName&quot;</span>,queryname);<span class="comment">//名字查询</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;userList&quot;</span>,userList);<span class="comment">//用户列表</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;queryUserRole&quot;</span>,roleList);<span class="comment">//用户角色的列表</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            req.getRequestDispatcher (<span class="string">&quot;/JSP/userlist.jsp&quot;</span>).forward (req, resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>jsp:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.saxon.pojo.Role&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line"> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/JSP/common/head.jsp&quot;</span>%&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;right&quot;</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;location&quot;</span>&gt;</span><br><span class="line">                &lt;strong&gt;你现在所在的位置是:&lt;/strong&gt;</span><br><span class="line">                &lt;span&gt;用户管理页面&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;search&quot;</span>&gt;</span><br><span class="line">           &lt;form method=<span class="string">&quot;get&quot;</span> action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/jsp/user.do&quot;</span>&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;method&quot;</span> value=<span class="string">&quot;query&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;input-text&quot;</span> type=<span class="string">&quot;hidden&quot;</span>&gt;</span><br><span class="line"> &lt;span&gt;用户名：&lt;/span&gt;</span><br><span class="line"> &lt;input name=<span class="string">&quot;queryname&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;input-text&quot;</span>type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;queryUserName&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;span&gt;用户角色：&lt;/span&gt;</span><br><span class="line">&lt;select name=<span class="string">&quot;queryUserRole&quot;</span>&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;roleList!= null &#125;&quot;</span>&gt;</span><br><span class="line">&lt;option value=&quot;0&quot;&gt;--请选择--&lt;/option&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;pageIndex&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line"> &lt;inputvalue=<span class="string">&quot;查 询&quot;</span> type=<span class="string">&quot;submit&quot;</span> id=<span class="string">&quot;searchbutton&quot;</span>&gt;</span><br><span class="line">&lt;%-- &lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/jsp/useradd.jsp&quot; &gt;添加用户&lt;/a&gt;--%&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!--用户--&gt;</span><br><span class="line">            &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;providerTable&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">                &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;firstTr&quot;</span>&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;用户编码&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;20%&quot;&gt;用户名称&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;性别&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;年龄&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;电话&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;用户角色&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;30%&quot;&gt;操作&lt;/th&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                   &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;user&quot;</span> items=<span class="string">&quot;$&#123;userList &#125;&quot;</span> varStatus=<span class="string">&quot;status&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.userCode &#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.userName &#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;</span><br><span class="line">&lt;c:if test=&quot;$&#123;user.gender==1&#125;&quot;&gt;男&lt;/c:if&gt;</span><br><span class="line">&lt;c:if test=&quot;$&#123;user.gender==2&#125;&quot;&gt;女&lt;/c:if&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.birthday&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.phone&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.userRole&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;&lt;a class=&quot;viewUser&quot; href=&quot;javascript:;&quot; userid=$&#123;user.ID &#125; username=$&#123;user.userName &#125;&gt;&lt;img src=&quot;$&#123;pageContext.request.contextPath &#125;/images/read.png&quot; alt=&quot;查看&quot; title=&quot;查看&quot;/&gt;&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;&lt;a class=&quot;modifyUser&quot; href=&quot;javascript:;&quot; userid=$&#123;user.ID &#125; username=$&#123;user.userName &#125;&gt;&lt;img src=&quot;$&#123;pageContext.request.contextPath &#125;/images/xiugai.png&quot; alt=&quot;修改&quot; title=&quot;修改&quot;/&gt;&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;&lt;a class=&quot;deleteUser&quot; href=&quot;javascript:;&quot; userid=$&#123;user.ID &#125; username=$&#123;user.userName &#125;&gt;&lt;img src=&quot;$&#123;pageContext.request.contextPath &#125;/images/schu.png&quot; alt=&quot;删除&quot; title=&quot;删除&quot;/&gt;&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> id=<span class="string">&quot;totalPageCount&quot;</span> value=<span class="string">&quot;$&#123;totalPageCount&#125;&quot;</span>/&gt;</span><br><span class="line">  &lt;c:<span class="keyword">import</span> url=<span class="string">&quot;/JSP/rollpage.jsp&quot;</span>&gt;</span><br><span class="line">          &lt;c:param name=<span class="string">&quot;totalCount&quot;</span> value=<span class="string">&quot;$&#123;totalCount&#125;&quot;</span>/&gt;</span><br><span class="line">          &lt;c:param name=<span class="string">&quot;currentPageNo&quot;</span> value=<span class="string">&quot;$&#123;currentPageNo&#125;&quot;</span>/&gt;</span><br><span class="line">          &lt;c:param name=<span class="string">&quot;totalPageCount&quot;</span> value=<span class="string">&quot;$&#123;totalPageCount&#125;&quot;</span>/&gt;</span><br><span class="line">          &lt;/c:import&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--点击删除按钮后弹出的页面--&gt;</span><br><span class="line">&lt;div class=&quot;zhezhao&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;remove&quot;</span> id=<span class="string">&quot;removeUse&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;removerChid&quot;</span>&gt;</span><br><span class="line">        &lt;h2&gt;提示&lt;/h2&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;removeMain&quot;</span>&gt;</span><br><span class="line">            &lt;p&gt;你确定要删除该用户吗？&lt;/p&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot; id=&quot;yes&quot;&gt;确定&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot; id=&quot;no&quot;&gt;取消&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/JSP/common/foot.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;pageContext.request.contextPath &#125;/js/userlist.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>##</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之过滤器Filter</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8B%E8%BF%87%E6%BB%A4%E5%99%A8Filter/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8B%E8%BF%87%E6%BB%A4%E5%99%A8Filter/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="过滤器filter"><a href="#过滤器filter" class="headerlink" title="过滤器filter"></a>过滤器filter</h2><p>应用：</p><ul><li>web服务器有一些垃圾请求那么我们后台就应该报错或者不处理</li><li>乱码问题</li></ul><p>测试代码：</p><ol><li>过滤器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">filterDemo</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;过滤器初始化完毕&quot;</span>);<span class="comment">//在一切之前初始化</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span> <span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        servletRequest.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        servletResponse.setContentType (<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        servletResponse.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        System.out.println (<span class="string">&quot;start***************************&quot;</span>);</span><br><span class="line">        filterChain.doFilter (servletRequest,servletResponse);<span class="comment">//必须写</span></span><br><span class="line">        System.out.println (<span class="string">&quot;end***************************&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;销毁&quot;</span>);<span class="comment">//在服务器关闭时注销</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter ().write (<span class="string">&quot;只有爱，才会喜欢代码&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.filter.Demo<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/r/r<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/r<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>f<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.saxon.filter.filterDemo<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>f<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/r/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>//文件目录</span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之MVC三层架构</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BMVC%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BMVC%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVC三层架构"><a href="#MVC三层架构" class="headerlink" title="MVC三层架构"></a>MVC三层架构</h2><p><strong>servlet和jsp都可以写Java代码;servlet注重写处理代码，跳转页面;JSP注重于显示数据</strong></p><p><strong>mvc:</strong></p><ul><li><strong>M:model (模型 service)**：</strong>控制业务操作，对数据的增删改查；访问数据库**；</li><li><strong>V:view(视图 JSP)**MVC好处是它能为应用程序处理很多不同的视图，在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式，</strong>提供用户操作，展示数据模型**</li><li>**C :controller(控制器 servlet)**：接收数据，将数据交给服务层去做，页面的跳转</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之JSP</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BJSP/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BJSP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><h3 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h3><p>ldea下面的tomcat的目录：C:\Users\adiminstor\AppData\Local\JetBrains</p><h5 id="1-jsp的运行原理："><a href="#1-jsp的运行原理：" class="headerlink" title="1.jsp的运行原理："></a>1.<strong>jsp的运行原理：</strong></h5><p><strong>1.jsp</strong>实际上编译后会变成一个class文件，继承了一个类org.apache.jasper.runtime.HttpJspBase;会发现这实际上就是一个servlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">index_jsp</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">jasper</span>.<span class="title">runtime</span>.<span class="title">HttpJspBase</span>----&gt;</span></span><br><span class="line"><span class="class">    </span>===&gt;<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpJspBase</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> <span class="keyword">implements</span> <span class="title">HttpJspPage</span></span></span><br></pre></td></tr></table></figure><h5 id="2-内置对象"><a href="#2-内置对象" class="headerlink" title="2.内置对象"></a>2.内置对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext;</span><br><span class="line">javax.servlet.http.HttpSession session = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application;</span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config;</span><br><span class="line">javax.servlet.jsp.JspWriter out = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">final</span> java.lang.Object page = <span class="keyword">this</span>;</span><br><span class="line">javax.servlet.jsp.JspWriter _jspx_out = <span class="keyword">null</span>;</span><br><span class="line">javax.servlet.jsp.PageContext _jspx_page_context = <span class="keyword">null</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-运行过程"><a href="#3-运行过程" class="headerlink" title="3.运行过程"></a>3.运行过程</h5><p>用户客户端发出请求，服务器在自己项目内寻找jsp，找到后，先把jsp转换成Java文件，在把Java文件编译成class文件，再交给服务器，由服务器交给用户，那么用户拿到的就是真正的class对象，实际上就是一个servlet；</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/091745426439496.png"></p><h5 id="4-对比jsp和jsp-java"><a href="#4-对比jsp和jsp-java" class="headerlink" title="4.对比jsp和jsp.java"></a>4.对比jsp和jsp.java</h5><p><strong>jsp</strong>:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span>  pageEncoding=<span class="string">&quot;utf-8&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%--pageContext.request.contextPath 当前目录/url pattern--%&gt;</span><br><span class="line">&lt;% String name=<span class="string">&quot;saxon&quot;</span>;%&gt;</span><br><span class="line">name=&lt;%=name%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/re&quot;</span> method=<span class="string">&quot;get&quot;</span> &gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;爱好：</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;篮球&quot;</span> required&gt;篮球</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;游戏&quot;</span>&gt;游戏</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;休息&quot;</span>&gt;休息</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;唱歌&quot;</span>&gt;唱歌</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);<span class="comment">//识别</span></span><br><span class="line">      pageContext = _jspxFactory.getPageContext(<span class="keyword">this</span>, request, response,</span><br><span class="line">      <span class="keyword">null</span>, <span class="keyword">true</span>, <span class="number">8192</span>, <span class="keyword">true</span>);</span><br><span class="line">      _jspx_page_context = pageContext;</span><br><span class="line">      application = pageContext.getServletContext();</span><br><span class="line">      config = pageContext.getServletConfig();</span><br><span class="line">      session = pageContext.getSession();</span><br><span class="line">      out = pageContext.getOut();</span><br><span class="line">      _jspx_out = out;</span><br><span class="line"></span><br><span class="line">      out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;html&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;body&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;h2&gt;Hello World!&lt;/h2&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"> String name=<span class="string">&quot;saxon&quot;</span>;<span class="comment">//我们写的Java代码</span></span><br><span class="line">      out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;name=&quot;</span>);</span><br><span class="line">      out.print(name);<span class="comment">//原样输出</span></span><br><span class="line">      out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;form action=\&quot;&quot;</span>);</span><br><span class="line">      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;&quot;</span>, java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, <span class="keyword">null</span>));</span><br><span class="line">      out.write(<span class="string">&quot;/re\&quot; method=\&quot;get\&quot; &gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;p&gt;&lt;label&gt;username：&lt;input type=\&quot;text\&quot; name=\&quot;username\&quot;&gt;&lt;/label&gt;&lt;/p&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;p&gt;&lt;label&gt;password：&lt;input type=\&quot;password\&quot; name=\&quot;password\&quot;&gt;&lt;/label&gt;&lt;/p&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;p&gt;爱好：\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;篮球\&quot; required&gt;篮球\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;游戏\&quot;&gt;游戏\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;休息\&quot;&gt;休息\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;唱歌\&quot;&gt;唱歌\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;/p&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;input type=\&quot;submit\&quot;&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/form&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/body&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>==<strong>通过对比我们明白，如果我们写在jsp中的代码是Java，那么就会原模原样的输出Java代码，如果是html代码就会改写成out.write方法输出到页面上</strong>==</p><h3 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、基本语法</h3><h4 id="一、导入依赖的包"><a href="#一、导入依赖的包" class="headerlink" title="一、导入依赖的包"></a>一、导入依赖的包</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    servlet的依赖包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    jsp的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl-api --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    JSTL的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/taglibs/standard --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--   standard标签库--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="二、基本语法-1"><a href="#二、基本语法-1" class="headerlink" title="二、基本语法"></a>二、基本语法</h4><p>1.表达式(&lt;%=      %&gt;)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;%=3%&gt;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>2.jsp脚本片段(&lt;%      %&gt;)</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    out.println (sum);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">5</span> ; i++) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;hello world!&lt;/h1&gt;</span><br><span class="line">&lt;%&#125;    %&gt;</span><br></pre></td></tr></table></figure><p>3.jsp声明(&lt;%!    %&gt;)</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">21</span>:08</span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;&lt;%=3%&gt;&lt;/h1&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    out.println (sum);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">5</span> ; i++) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;hello world!&lt;/h1&gt;</span><br><span class="line">&lt;%&#125;    %&gt;</span><br><span class="line">    </span><br><span class="line">&lt;%!</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除了声明，编译后会在类的里面，其他的编译了会在service方法里面；</p><h3 id="三、jsp指令"><a href="#三、jsp指令" class="headerlink" title="三、jsp指令"></a>三、jsp指令</h3><h5 id="1、配置错误页面"><a href="#1、配置错误页面" class="headerlink" title="1、配置错误页面"></a>1、配置错误页面</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- code要写在location前面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><p>404错误界面，没有页面时跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">18</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;404&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/images/404.jpg&quot;</span> alt=<span class="string">&quot;404 error&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主页面显示：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;% <span class="keyword">int</span> x=<span class="number">1</span>/<span class="number">0</span>;%&gt; &lt;%--<span class="number">500</span>错误--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.include标签的区别</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;index.jsp&quot;</span>%&gt; </span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;index.jsp&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>&lt;%@include file=”index.jsp”%&gt; ,就是一个页面，把全部的代码用Java写出来，就是out.write();可能出现变量重名的情况</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;title&gt;Title&lt;/title&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;h1&gt;this is my include&lt;/h1&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/html&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;h1&gt;hello world&lt;/h1&gt;\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>&lt;jsp:include page=”index.jsp”/&gt;是页面的拼接，是对象拼在一起，区别就在于如果写Java代码会不会出现变量重名的情况</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    _jspx_imports_packages = <span class="keyword">new</span> java.util.HashSet&lt;&gt;();</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;java.util&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet.http&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet.jsp&quot;</span>);</span><br><span class="line">    _jspx_imports_classes = <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, <span class="string">&quot;index.jsp&quot;</span>, out, <span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><h3 id="四、jsp的四大作用域和9大内置对象"><a href="#四、jsp的四大作用域和9大内置对象" class="headerlink" title="四、jsp的四大作用域和9大内置对象"></a>四、jsp的四大作用域和9大内置对象</h3><h4 id="1-9大内置对象"><a href="#1-9大内置对象" class="headerlink" title="1.9大内置对象"></a>1.9大内置对象</h4><p>1.<strong>PageContext</strong>: javax.servlet.jsp.PageContext  <strong>存储信息</strong><br>2**.reques<strong>t :javax.servlet.http.HttpServletrequest  **存储信息</strong><br>3.<strong>response</strong>: javax.servlet.http.HttpServletResponse <strong>服务器向客户端的回应信息</strong><br>4**.session**: javax.servlet.http.HttpSession  <strong>存储信息</strong><br>5.<strong>application</strong>: javax.servlet.ServletContext  <strong>存储信息</strong><br>6.<strong>config</strong> :javax.servlet.ServletConfig  <strong>配置文件</strong><br>7.<strong>out</strong> :javax.servlet.jsp.jspWriter<br>8.<strong>page</strong> ：不常用<br>9.<strong>exceptio</strong>n java.lang.Throwable <strong>异常</strong></p><h4 id="2、四大作用域"><a href="#2、四大作用域" class="headerlink" title="2、四大作用域"></a>2、四大作用域</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute (<span class="string">&quot;NO1&quot;</span>, <span class="string">&quot;saxon1&quot;</span>);</span><br><span class="line">    request.setAttribute (<span class="string">&quot;NO2&quot;</span>, <span class="string">&quot;saxon2&quot;</span>);</span><br><span class="line">    session.setAttribute (<span class="string">&quot;NO3&quot;</span>, <span class="string">&quot;saxon3&quot;</span>);</span><br><span class="line">    application.setAttribute (<span class="string">&quot;NO4&quot;</span>, <span class="string">&quot;saxon4&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>pageContext</strong>：只有当前页面有用，其他页面数据就失效；</li><li><strong>request</strong>：只有这个请求页有效；但是转发数据也会被带到新的页面；</li><li><strong>session</strong>：在这个浏览器关闭前有效；</li><li><strong>application：</strong>只有服务器炸裂时，才会失效；</li></ul><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">21</span>:08</span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Index&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    pageContext.setAttribute (<span class="string">&quot;NO1&quot;</span>, <span class="string">&quot;saxon1&quot;</span>);</span><br><span class="line">    request.setAttribute (<span class="string">&quot;NO2&quot;</span>, <span class="string">&quot;saxon2&quot;</span>);</span><br><span class="line">    session.setAttribute (<span class="string">&quot;NO3&quot;</span>, <span class="string">&quot;saxon3&quot;</span>);</span><br><span class="line">    application.setAttribute (<span class="string">&quot;NO4&quot;</span>, <span class="string">&quot;saxon4&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String no1 = (String) pageContext.findAttribute (<span class="string">&quot;No1&quot;</span>);</span><br><span class="line">    String no2 = (String) pageContext.findAttribute (<span class="string">&quot;No2&quot;</span>);</span><br><span class="line">    String no3 = (String) pageContext.findAttribute (<span class="string">&quot;No3&quot;</span>);</span><br><span class="line">    String no4 = (String) pageContext.findAttribute (<span class="string">&quot;No4&quot;</span>);</span><br><span class="line">    String no5 = (String) pageContext.findAttribute (<span class="string">&quot;No2&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%pageContext.forward(<span class="string">&quot;/Test.jsp&quot;</span>);%&gt;</span><br><span class="line">$&#123;NO1&#125;</span><br><span class="line">$&#123;NO2&#125;</span><br><span class="line">$&#123;NO3&#125;</span><br><span class="line">$&#123;NO4&#125;</span><br><span class="line">$&#123;NO5&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>转发页：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User:Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String no1 = (String) pageContext.findAttribute (<span class="string">&quot;No1&quot;</span>);</span><br><span class="line">    String no2 = (String) pageContext.findAttribute (<span class="string">&quot;No2&quot;</span>);</span><br><span class="line">    String no3 = (String) pageContext.findAttribute (<span class="string">&quot;No3&quot;</span>);</span><br><span class="line">    String no4 = (String) pageContext.findAttribute (<span class="string">&quot;No4&quot;</span>);</span><br><span class="line">    String no5 = (String) pageContext.findAttribute (<span class="string">&quot;No5&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;NO1&#125;</span><br><span class="line">$&#123;NO2&#125;</span><br><span class="line">$&#123;NO3&#125;</span><br><span class="line">$&#123;NO4&#125;</span><br><span class="line">$&#123;NO5&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>常见场景：</p><p>1.看了一次就不会在看的，例如新闻，可以放在request中</p><p>2.用户会一直使用的信息，例如购物车，放在session中</p><p>3.这个网页，网站一直要用的，例如，浏览人数，放在application中</p><p>4.一些只在当前页面要用到的，就放在pagecontext</p><h3 id="五、JSP标签，JSTL标签，EL表达式"><a href="#五、JSP标签，JSTL标签，EL表达式" class="headerlink" title="五、JSP标签，JSTL标签，EL表达式"></a>五、JSP标签，JSTL标签，EL表达式</h3><h4 id="一、JSTL标签"><a href="#一、JSTL标签" class="headerlink" title="一、JSTL标签"></a>一、JSTL标签</h4><p><strong>种类：</strong></p><ul><li>核心标签</li><li>sql标签</li><li>xml标签</li><li>格式化标签</li></ul><p>测试一：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;#&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">    用户：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;$&#123;param.username&#125;&quot;</span>&gt;</span><br><span class="line">    分数：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;score&quot;</span> value=<span class="string">&quot;$&#123;param.score&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>JSTL标签</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;param.username==&#x27;saxon&#x27;&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;saxon&quot;</span>&gt;&lt;!-- 这里的值--&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;登录成功&quot;</span>/&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;saxon&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;c:set value=<span class="string">&quot;$&#123;param.score&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;score&quot;</span>/&gt;</span><br><span class="line">    &lt;c:choose&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;90&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩优秀</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;80&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩一般</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;70&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩可以</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;60&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩罪恶</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">    &lt;/c:choose&gt;</span><br></pre></td></tr></table></figure><p>java实现：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span> (request.getParameter (<span class="string">&quot;username&quot;</span>) != <span class="keyword">null</span> &amp;&amp; request.getParameter (<span class="string">&quot;username&quot;</span>).equals (<span class="string">&quot;saxon&quot;</span>)) &#123;</span><br><span class="line">        out.print (request.getParameter (<span class="string">&quot;username&quot;</span>) + <span class="string">&quot;,欢迎你&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span> (request.getParameter (<span class="string">&quot;username&quot;</span>) != <span class="keyword">null</span> &amp;&amp; request.getParameter (<span class="string">&quot;username&quot;</span>).equals (<span class="string">&quot;saxon&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (request.getParameter (<span class="string">&quot;score&quot;</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String score = request.getParameter (<span class="string">&quot;score&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> i = Integer.parseInt (score);</span><br><span class="line">            out.print (<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            out.print (<span class="string">&quot;你的成绩是：&quot;</span>);</span><br><span class="line">            <span class="keyword">switch</span> (i / <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;good&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;better&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;Just-so-so&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;Usual&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;worse or in put again&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>测试二：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    ArrayList&lt;String&gt; str = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">    str.add (<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;田六&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;李七&quot;</span>);</span><br><span class="line">    request.setAttribute (<span class="string">&quot;people&quot;</span>,str);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>JSTL标签：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="keyword">var</span>:名字；</span><br><span class="line">items：来源</span><br><span class="line">begin：开始节点</span><br><span class="line">step:下标递增的次序</span><br><span class="line">end:最后一个的下标</span><br><span class="line">--&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;list&quot;</span> items=<span class="string">&quot;$&#123;people&#125;&quot;</span> begin=<span class="string">&quot;0&quot;</span> step=<span class="string">&quot;2&quot;</span> end=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;list&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>Java代码：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">5</span> ; i+=<span class="number">2</span>) &#123;</span><br><span class="line">        out.println (str.get (i));</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>通过对比我们就可以明白，标签可以做的，我们的Java语言也可以做。那么用标签的原因就是简化代码，看起来美观一些；</p><h4 id="二、EL表达式"><a href="#二、EL表达式" class="headerlink" title="二、EL表达式"></a>二、EL表达式</h4><p><strong>格式:  ${}</strong></p><p>作用：</p><ul><li>获取数据</li><li>执行运算</li><li>获得web执行的对象；</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$&#123;param.score&#125; <span class="comment">//获得数据</span></span><br><span class="line">$&#123;score&gt;<span class="number">90</span>&#125;    <span class="comment">//执行运算</span></span><br><span class="line">$&#123;param.score&#125;<span class="comment">//获得web对象</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之cookie和session</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8Bcookie%E5%92%8Csession/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8Bcookie%E5%92%8Csession/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="cookie-session"><a href="#cookie-session" class="headerlink" title="cookie session"></a>cookie session</h2><h3 id="一、会话"><a href="#一、会话" class="headerlink" title="一、会话"></a>一、会话</h3><h4 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h4><p>在计算机术语中，会话是指一个终端用户与交互系统进行通讯的过程，比如从输入账户密码进入操作系统到退出操作系统就是一个会话过程。会话较多用于网络上，TCP的三次握手就创建了一个会话，TCP关闭连接就是关闭会话；</p><p><strong>有状态会话：可以在不同的方法调用间保持针对各个客户端的状态与客户端的联系必须被维持，这样做开销要大一些</strong></p><h4 id="二、保存会话的两种方式"><a href="#二、保存会话的两种方式" class="headerlink" title="二、保存会话的两种方式"></a>二、保存会话的两种方式</h4><p><strong>cookie</strong>  Cookie是客户端技术，程序把每个用户的数据以cookie的形式写给用户各自的浏览器，当用户使用浏览器再去访问服务器中的web资源时，就会带着各自的数据去，这样web资源处理的就是各自的数据！</p><p><strong>session</strong>：Session是服务器端技术，利用这个技术服务器在运行时可以为每一个用户的浏览器绘制创建一个其独享的session对象，由于session为用户浏览器独享，所以用户在访问服务器的web资源时，可以把各自的数据放在各自的session中，当用户再去服务器中的其他web资源时，其它web资源再从用户各自的session中取出数据为用户服务</p><h3 id="二、cookie"><a href="#二、cookie" class="headerlink" title="二、cookie"></a>二、cookie</h3><h5 id="1-添加"><a href="#1-添加" class="headerlink" title="1.添加"></a>1.添加</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">cookieDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        Cookie[] cookies = req.getCookies ();</span><br><span class="line">        PrintWriter out = resp.getWriter ();</span><br><span class="line">        <span class="keyword">if</span> (cookies!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName ();</span><br><span class="line">                <span class="keyword">if</span> (name.equals (<span class="string">&quot;saxon&quot;</span>)) &#123;</span><br><span class="line">                    String value = cookie.getValue ();</span><br><span class="line">                    Date date = <span class="keyword">new</span> Date (Long.parseLong (value));</span><br><span class="line">                    out.print (<span class="string">&quot;你上次来的时间是&quot;</span> + date);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            out.write (<span class="string">&quot;欢迎光临\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie (<span class="string">&quot;saxon&quot;</span>, System.currentTimeMillis () + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        cookie.setMaxAge (<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);<span class="comment">//Set-Cookie: saxon=1595912818749; Max-Age=86400; Expires=Wed, 29-Jul-2020 05:06:58 GMT</span></span><br><span class="line">        resp.addCookie (cookie);<span class="comment">//每次都给一个新的cookie,覆盖上一个同名cookie</span></span><br><span class="line">        System.out.println (<span class="string">&quot;********************************&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-删除"><a href="#2-删除" class="headerlink" title="2.删除"></a>2.删除</h5><ul><li>不设置日期，直接关闭浏览器，就删除cookie</li><li>设置cookie.setMaxAge=0;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        Cookie[] cookies = req.getCookies ();</span><br><span class="line">        Cookie new_cookie=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cookie.getName ().equals (<span class="string">&quot;saxon&quot;</span>))&#123;</span><br><span class="line">                new_cookie=cookie;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (new_cookie!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            new_cookie.setMaxAge (<span class="number">0</span>);</span><br><span class="line">            resp.getWriter ().print (cookie.getName ()+<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        resp.addCookie (new_cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String str=<span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">                URLEncoder.encode (str,<span class="string">&quot;GBK&quot;</span>);<span class="comment">//编码</span></span><br><span class="line">                URLDecoder.decode (str,<span class="string">&quot;GBK&quot;</span>);<span class="comment">//解码</span></span><br></pre></td></tr></table></figure><h4 id="3-cookie的上限"><a href="#3-cookie的上限" class="headerlink" title="3.cookie的上限"></a>3.cookie的上限</h4><h3 id="三、session"><a href="#三、session" class="headerlink" title="三、session"></a>三、session</h3><h4 id="一、概念-1"><a href="#一、概念-1" class="headerlink" title="一、概念"></a>一、概念</h4><p><strong>session</strong>：Session是服务器端技术，利用这个技术服务器在运行时可以为每一个用户的浏览器绘制创建一个其独享的session对象，由于session为用户浏览器独享，所以用户在访问服务器的web资源时，可以把各自的数据放在各自的session中，当用户再去服务器中的其他web资源时，其它web资源再从用户各自的session中取出数据为用户服务</p><p><strong>response.getWriter().print()和response.getWriter().writer（）的区别:</strong></p><ul><li>response.getWriter().print(),不仅可以打印输出文本格式的（包括html标签），还可以将一个对象以默认的编码方式转换为二进制字节输出</li><li>response.getWriter().writer（）,只能打印输出文本格式的（包括html标签），不可以打印对象</li></ul><h4 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h4><h5 id="1-获取session对象，添加节点信息"><a href="#1-获取session对象，添加节点信息" class="headerlink" title="1.获取session对象，添加节点信息"></a>1.获取session对象，添加节点信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        HttpSession session = req.getSession ();</span><br><span class="line">        session.setAttribute (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;saxon&quot;</span>);<span class="comment">//可以保存一个对象</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (session.isNew ())&#123;</span><br><span class="line">            resp.getWriter ().print (<span class="string">&quot;新创建的session：&quot;</span>+session.getAttribute (<span class="string">&quot;saxon&quot;</span>)+<span class="string">&quot;的ID是&quot;</span>+session.getId ());</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter ().print (<span class="string">&quot;原来就有的&quot;</span>+session.getAttribute (<span class="string">&quot;saxon&quot;</span>)+<span class="string">&quot;的ID是&quot;</span>+session.getId ());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-获得session的信息"><a href="#2-获得session的信息" class="headerlink" title="2.获得session的信息"></a>2.获得session的信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionShow</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取指定的节点</span></span><br><span class="line">        HttpSession session = req.getSession ();</span><br><span class="line">        String saxon = (String) session.getAttribute (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (saxon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-删除session"><a href="#3-删除session" class="headerlink" title="3.删除session"></a>3.删除session</h5><ul><li>在web.xm配置文件会话自动过期</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span> <span class="comment">&lt;!--单位是分钟--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>利用session.invalidate ();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDelete</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        HttpSession session = req.getSession ();</span><br><span class="line">        session.removeAttribute (<span class="string">&quot;saxon&quot;</span>);<span class="comment">//移除保存的数据</span></span><br><span class="line">        session.invalidate ();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="三、session与cookie的区别"><a href="#三、session与cookie的区别" class="headerlink" title="三、session与cookie的区别"></a>三、session与cookie的区别</h4><ul><li><strong>cookie:**cookie是把数据写在用户自己的浏览器，交给用户自己保存，</strong>直接把信息交给用户**</li><li><strong>session:**把用户的数据写在独立的session里面，交给服务器保管（保存重要信息，节约服务器资源），</strong>交给用户的是一个ID，用户不知道里面的内容，但是可以凭借这个访问服务器的资源资源在服务器**</li><li>session由服务器创建，不写也是存在</li></ul><p>==<strong>使用频繁的信息我们用session保存:例如用户登录信息，购物信息</strong>==</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之Request</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BRequest/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BRequest/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><h4 id="一、试一下"><a href="#一、试一下" class="headerlink" title="一、试一下"></a>一、试一下</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">requestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String username = req.getParameter (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String password = req.getParameter (<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String path = <span class="keyword">this</span>.getServletContext ().getContextPath ();</span><br><span class="line">        resp.sendRedirect (path+<span class="string">&quot;/success.html&quot;</span>);<span class="comment">//选择重定向的去处</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%-- pageContext.request.contextPath 当前目录/url pattern --%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/re&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>successful<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过代码实现密码输入，成功跳转成功。</p><h4 id="二、获得前端信息"><a href="#二、获得前端信息" class="headerlink" title="二、获得前端信息"></a>二、获得前端信息</h4><p>1.接收前端信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ISO_8859_1 默认编码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">requestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);<span class="comment">//解决乱码问题</span></span><br><span class="line">        String username = req.getParameter (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String[] hobbies = req.getParameterValues (<span class="string">&quot;hobbies&quot;</span>);</span><br><span class="line">        System.out.println (Arrays.toString (hobbies));</span><br><span class="line">        String path = <span class="keyword">this</span>.getServletContext ().getContextPath ();</span><br><span class="line">        resp.sendRedirect (path + <span class="string">&quot;/new.html&quot;</span>);<span class="comment">//302</span></span><br><span class="line">        <span class="comment">//req.getRequestDispatcher (&quot;/sucess.jsp&quot;).forward (req,resp);</span></span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.提交页</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;&lt;%解决界面乱码问题%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%--pageContext.request.contextPath 当前目录/url pattern--%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/re&quot;</span> method=<span class="string">&quot;post&quot;</span> &gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;爱好：</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;篮球&quot;</span> required&gt;篮球</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;游戏&quot;</span>&gt;游戏</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;休息&quot;</span>&gt;休息</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;唱歌&quot;</span>&gt;唱歌</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.成功反馈,跳出这个界面</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">26</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">44</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;successful&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于乱码问题：</p><p>1.首先是Tomcat 的问题，如果在界面加载控制台出现乱码，就改logging.properties（java.util.logging.ConsoleHandler.encoding = GBK）最后一个有关编码的UTF-8改成GBK;</p><p>2.如果是接收的时候出现数据的乱码，就用request.setCharacterEncoding (“utf-8”);就可以了</p><p>3.如果实在不行就上网上搜，我是被这个搞崩溃了。然后在改一下配置，花了好久，在我准备卸载的时候，她就好了；</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之Response</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BResponse/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BResponse/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><h4 id="一、下载文件"><a href="#一、下载文件" class="headerlink" title="一、下载文件"></a>一、下载文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoading</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.确定位置和名字</span></span><br><span class="line">        String location = <span class="string">&quot;..\\1.png&quot;</span>      <span class="comment">//具体的地址绝对地址;</span></span><br><span class="line">        String filename = location.substring (location.lastIndexOf (<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//2.设置传输的头文件</span></span><br><span class="line">        resp.setHeader (<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=&quot;</span> + filename);<span class="comment">//下载页面的文件名，可以在下载页面手动改，默认的话就是。.txt;</span></span><br><span class="line">        <span class="comment">//3.建立缓冲区</span></span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">//4.将下载文件变成输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream (location);</span><br><span class="line">        <span class="comment">//5.获得输出流是，下载</span></span><br><span class="line">        ServletOutputStream out = resp.getOutputStream ();</span><br><span class="line">        <span class="comment">//in.read (buffer) 将文件读取到缓存中</span></span><br><span class="line">        <span class="keyword">while</span> (in.read (buffer) != - <span class="number">1</span>) &#123;</span><br><span class="line">            out.write (buffer, <span class="number">0</span>, len);<span class="comment">//将这个缓存给客户端，响应</span></span><br><span class="line">        &#125;</span><br><span class="line">        out.close ();</span><br><span class="line">        in.close ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="二、验证码的实现"><a href="#二、验证码的实现" class="headerlink" title="二、验证码的实现"></a>二、验证码的实现</h4><p>1.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setHeader (<span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;5&quot;</span>);<span class="comment">//刷新时间</span></span><br><span class="line">        <span class="comment">//图片的大小。</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage (<span class="number">80</span>, <span class="number">20</span>, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics2D pen = (Graphics2D) image.getGraphics ();</span><br><span class="line">        <span class="comment">//对图片进行填充</span></span><br><span class="line">        pen.setColor (Color.black);</span><br><span class="line">        pen.fillRect (<span class="number">0</span>,<span class="number">0</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//在图片中写入文字</span></span><br><span class="line">        pen.setColor (Color.white);</span><br><span class="line">        pen.setFont (<span class="keyword">new</span> Font (<span class="keyword">null</span>,Font.BOLD,<span class="number">20</span>));</span><br><span class="line">        pen.drawString (Num (),<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//浏览器的读取形式</span></span><br><span class="line">        resp.setContentType (<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">//缓存</span></span><br><span class="line">        resp.setDateHeader (<span class="string">&quot;expires&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">        resp.setHeader (<span class="string">&quot;Cache-Control&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        resp.setHeader (<span class="string">&quot;pragma&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">//图片交给浏览器</span></span><br><span class="line">        ImageIO.write (image,<span class="string">&quot;jpeg&quot;</span>,resp.getOutputStream ());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">Num</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer str=<span class="keyword">new</span> StringBuffer ();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">7</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> i1 = <span class="keyword">new</span> Random ().nextInt (<span class="number">9</span>);</span><br><span class="line">            str.append (i1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str.toString ();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200726143405536.png" alt="image-20200726143405536" style="zoom: 80%;" /><p>我们可以设置上面的相关的信息；</p><h4 id="三、实现重定向"><a href="#三、实现重定向" class="headerlink" title="三、实现重定向"></a>三、实现重定向</h4><h5 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h5><p>重定向：当你想要小美的QQ号，但你不知道如何要她的QQ号，所以你去找认识小美QQ号的小札，小札叫你自己去，于是你就自己去；</p><p>转发：当你想要小美的QQ号，但是你不知道如何要她的QQ号，所以你就去找认识小美QQ号的小札，小札帮你去要，要到了再给你；</p><p><strong>比较</strong>：重定向和转发</p><p>相同点：都是页面的跳转；</p><p>不同点：重定向的url地址发生了变化，但是转发没有。他们的状态码也不一样。重定向的是3开头的。转发是200；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转发</span></span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">RequestDispatcher r = context.getRequestDispatcher (<span class="string">&quot;/gp&quot;</span>);<span class="comment">//写入要跳转的页面的url-pattern</span></span><br><span class="line"><span class="comment">//重定向</span></span><br><span class="line">String contextPath = <span class="keyword">this</span>.getServletContext ().getContextPath ();<span class="comment">//当前项目的地址</span></span><br><span class="line">resp.sendRedirect (contextPath+<span class="string">&quot;/hello.html&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="2-测试"><a href="#2-测试" class="headerlink" title="2.测试"></a>2.测试</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedirectServlet</span>  <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String contextPath = <span class="keyword">this</span>.getServletContext ().getContextPath ();<span class="comment">//当前项目的地址</span></span><br><span class="line">        resp.sendRedirect (contextPath+<span class="string">&quot;/hello.html&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之Servlet</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BServlet/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BServlet/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><h3 id="一、使用"><a href="#一、使用" class="headerlink" title="一、使用"></a>一、使用</h3><h5 id="1-建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目"><a href="#1-建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目" class="headerlink" title="1.建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目"></a>1.建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目</h5><h5 id="2-建立一个子项目，子项目的pom-xml就会有父项目的信息"><a href="#2-建立一个子项目，子项目的pom-xml就会有父项目的信息" class="headerlink" title="2.建立一个子项目，子项目的pom.xml就会有父项目的信息"></a>2.建立一个子项目，子项目的pom.xml就会有父项目的信息</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Saxon_01_servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>父项目中就会添加一个子项目信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Saxon_Servlet_Son_01<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>建项目吗?父子局</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">son extends father</span><br></pre></td></tr></table></figure><h5 id="3-环境优化"><a href="#3-环境优化" class="headerlink" title="3.环境优化"></a>3.环境优化</h5><ul><li>配置web.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>优化结构，加上一些该加上的文件夹 Java ,resources</li></ul><h5 id="4-编写第一个servlet程序"><a href="#4-编写第一个servlet程序" class="headerlink" title="4.编写第一个servlet程序"></a>4.编写第一个servlet程序</h5><p><strong>sun公司的servlet的实现类：HttpServlet,GenericServlet</strong></p><ol><li>先创建一个普通的类</li><li>这个类去继承servlet的实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继承HttpServlet</span></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//HttpServlet继承GenericServlet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServlet</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//GenericServlet实现Servlet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span>, <span class="title">ServletConfig</span>, <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//servlet就是一个接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig var1)</span> <span class="keyword">throws</span> ServletException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">ServletConfig <span class="title">getServletConfig</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest var1, ServletResponse var2)</span> <span class="keyword">throws</span> ServletException, IOException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">getServletInfo</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.实现父类的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.ServletSecurity;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        PrintWriter writer = resp.getWriter ();</span><br><span class="line">        writer.print (<span class="string">&quot;Hello, I am Saxon&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.编写servlet地址映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.启动tomcat调试</p><h3 id="二、原理："><a href="#二、原理：" class="headerlink" title="二、原理："></a>二、原理：</h3><p>在我们第一次使用浏览器加载项目时，项目会生成一个Target目录。当浏览器向客户端发出请求的时候，如果是第一次加载，那么就会去加载servlet，如果不是的话，就由web容器发出请求，请求具体访问我们的servlet的service方法。结束后在返还一个响应信息，web容器在返回一个响应给浏览器；（接收并处理要求和返回响应信息）</p><h3 id="三、servlet-mapping"><a href="#三、servlet-mapping" class="headerlink" title="三、servlet mapping"></a>三、servlet mapping</h3><h4 id="一、一个对应一个"><a href="#一、一个对应一个" class="headerlink" title="一、一个对应一个"></a>一、一个对应一个</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="二、一个对应多个"><a href="#二、一个对应多个" class="headerlink" title="二、一个对应多个"></a>二、一个对应多个</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon4<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="三、一个对应所有的映射"><a href="#三、一个对应所有的映射" class="headerlink" title="三、一个对应所有的映射"></a>三、一个对应所有的映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 就是在路径下面加上一个*--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="四、修改默认请求的路径"><a href="#四、修改默认请求的路径" class="headerlink" title="四、修改默认请求的路径"></a>四、修改默认请求的路径</h4><p>默认访问的不是jsp了，而是我们绑定的servlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="五、固定的文件后缀可以访问"><a href="#五、固定的文件后缀可以访问" class="headerlink" title="五、固定的文件后缀可以访问"></a>五、固定的文件后缀可以访问</h4><p>*.saxon的前后不可以加任何的其他字，不然会报错；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.IllegalArgumentException: servlet鏄犲皠涓殑&lt;url pattern&gt;[*.saxon/<span class="number">2</span>]鏃犳晥</span><br></pre></td></tr></table></figure><h3 id="四、ServletContext"><a href="#四、ServletContext" class="headerlink" title="四、ServletContext"></a>四、ServletContext</h3><h4 id="一、含义"><a href="#一、含义" class="headerlink" title="一、含义"></a>一、含义</h4><p>servletContext接口是Servlet中最大的一个接口，呈现了web应用的Servlet视图。**==ServletContext实例是通过 getServletContext()方法获得的==<strong>，由于HttpServlet继承GenericServlet的关系，GenericServlet类和HttpServlet类同时具有该方法。</strong>==这是在servlet之上的一层结构，等级高一级==**     每个web应用都会有一个<a href="https://baike.baidu.com/item/ServletContext"><strong>ServletContext</strong></a>对象与之关联</p><h4 id="二、测试servlet之间的通信"><a href="#二、测试servlet之间的通信" class="headerlink" title="二、测试servlet之间的通信"></a>二、测试servlet之间的通信</h4><p>1.上传</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">send</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        context.setAttribute (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;saxon 是帅哥&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.接收</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">get</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        String saxon = (String)context.getAttribute (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);<span class="comment">//配置编码</span></span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (saxon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>get<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.get<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>get<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/get<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>send<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.send<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>send<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/send<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要先放入在接收，才会显示结果</p><h4 id="三、获得初始化参数"><a href="#三、获得初始化参数" class="headerlink" title="三、获得初始化参数"></a>三、获得初始化参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GP</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        String saxon = context.getInitParameter (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (saxon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>saxon<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://saxon:3306/test<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.GP<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/gp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="四、请求转发"><a href="#四、请求转发" class="headerlink" title="四、请求转发"></a>四、请求转发</h4><p>含义：就是在当前页面下跳转到另一个页面。servlet之间的跳转；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Skip</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        RequestDispatcher r = context.getRequestDispatcher (<span class="string">&quot;/gp&quot;</span>);<span class="comment">//写入要跳转的页面的url-pattern</span></span><br><span class="line">        r.forward (req,resp);<span class="comment">//    void forward(ServletRequest var1, ServletResponse var2) 一个请求，一个响应</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">       doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>skip<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.Skip<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>skip<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/skip<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>tips</strong>:zap::我们虽然跳到了其他的页面但是地址栏还是当前的地址，不会变；这就是与重定向的区别。他的<strong>Status Code</strong>是200；</p><h4 id="五、读取配置文件"><a href="#五、读取配置文件" class="headerlink" title="五、读取配置文件"></a>五、读取配置文件</h4><p>1.写一个配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=<span class="string">saxon</span></span><br><span class="line"><span class="attr">pwd</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>2.编写测试servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Properties_Servlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println (<span class="keyword">this</span>.getServletContext ().getContextPath ());<span class="comment">//Saxon_Servlet_Son_02_war</span></span><br><span class="line">        System.out.println (<span class="string">&quot;start***************************&quot;</span>);</span><br><span class="line">        InputStream is = <span class="keyword">this</span>.getServletContext ().getResourceAsStream (<span class="string">&quot;/WEB-INF/classes/lover.properties&quot;</span>);<span class="comment">//注意路径</span></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties ();</span><br><span class="line">        prop.load (is);</span><br><span class="line">        String username = prop.getProperty (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd = prop.getProperty (<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (username + <span class="string">&quot;:&quot;</span> + pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于当前servletcontext是在/Saxon_Servlet_Son_02_war目录下，我们也知道war包就是一个打包的web程序。所以我们的路径前面加上的==/==表示当前路径。我们在resource下面写的包就会到WEB-INF/classes/包下，如果我们将配置文件写在了Java目录中，我们可以在当前项目的文件pom.xml中加入一段代码；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--你要导出资源的文件夹--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span><span class="comment">&lt;!-- 导出资源的类型--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.将这一个servlet加入web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>prop<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.Properties_Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>prop<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/prop<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.启动tomcat，测试；</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之Maven使用</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BMaven%E4%BD%BF%E7%94%A8/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BMaven%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Maven的使用"><a href="#Maven的使用" class="headerlink" title="Maven的使用"></a>Maven的使用</h2><h5 id="1-先写出一个java程序"><a href="#1-先写出一个java程序" class="headerlink" title="1.先写出一个java程序"></a>1.先写出一个java程序</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        response.setContentType (<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding (<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">        PrintWriter out = response.getWriter ()；</span><br><span class="line">        out.println (<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;title&gt;Hello Beauty!&lt;/title&gt;&quot;</span>);<span class="comment">//如果是中文，编码不同会导致乱码，可以在Java中设置编码</span></span><br><span class="line">        out.println (<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;h1&gt;Hello beauty!&lt;/h1&gt;&quot;</span>);<span class="comment">//如果是中文，编码不同会导致乱码</span></span><br><span class="line">        out.println (<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-修改webaapps中的web-xml文件"><a href="#2-修改webaapps中的web-xml文件" class="headerlink" title="2.修改webaapps中的web.xml文件"></a>2.修改webaapps中的web.xml文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  申请一个servlet 指向一个文件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  与一个    &lt;servlet-name&gt;&lt;/servlet-name&gt; 建立一个连接，用url访问数据 一队建立一个连接</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span><span class="comment">&lt;!-- 这个就是等下访问的地址，在项目名后面加上的额外部分--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/Saxon_web_maven_war; 默认访问webapps下面的index.jsp;</span><br><span class="line">http://localhost:8080/Saxon_web_maven_war/saxon; 加上上面的名字可以访问class文件，如果要想要访问其他的文件，那么直接写下webapps，加上文件名直接访问</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之Maven</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BMaven/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BMaven/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Maven（-约定大于配置-）"><a href="#Maven（-约定大于配置-）" class="headerlink" title="Maven（==约定大于配置==）"></a>Maven（==约定大于配置==）</h2><p>用途：</p><ol><li>再写Java程序的时候，有的时候要导入大量的jar包，我们要导入</li><li>我们想要一个东西来帮我们自动导包</li></ol><h3 id="一、环境变量的配置"><a href="#一、环境变量的配置" class="headerlink" title="一、环境变量的配置"></a>一、环境变量的配置</h3><ol><li>配置M2_HOME： 安装maven的bin目录下</li><li>配置MAVEN_HOME：安装maven的目录</li><li>在path下面配置MAVEN_HOME的bin目录；就是M2_HOME的位置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置成功后</span></span><br><span class="line">Maven home: D:\JAVA\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin\..</span><br><span class="line">Java version: 9.0.4, vendor: Oracle Corporation, runtime: D:\JAVA\jdk</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: <span class="string">&quot;windows 10&quot;</span>, version: <span class="string">&quot;10.0&quot;</span>, arch: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;windows&quot;</span></span><br></pre></td></tr></table></figure><h3 id="二、阿里云镜像配置"><a href="#二、阿里云镜像配置" class="headerlink" title="二、阿里云镜像配置"></a>二、阿里云镜像配置</h3><p><strong>配置setting.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、本地仓库"><a href="#三、本地仓库" class="headerlink" title="三、本地仓库"></a>三、本地仓库</h3><p>自己建一个文件夹在加进去</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\JAVA\apache-maven-3.6.3-bin\apache-maven-3.6.3\maven_repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四、ideal使用maven"><a href="#四、ideal使用maven" class="headerlink" title="四、ideal使用maven"></a>四、ideal使用maven</h3><p><strong>1.新建一个maven目录创建一个maven项目，可以选择有模板和没模版的；二者的区别也不一样。</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724134718443.png" alt="image-20200724134718443"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724135123957.png" alt="image-20200724135123957"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724140517641.png" alt="image-20200724140517641"></p><p><strong>2.在创建的maven web模板中加入Java（resource root）和resources（resource root）;</strong></p><p><strong>3.配置tomcat，在ideal中</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724170428914.png" alt="image-20200724170428914"></p><p><strong>Warning: No artifacts marked for deployment</strong>：警告：没有标记为部署的项目，要添加一个项目</p><p><strong>4.启动Tomcat</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724171302317.png" alt="image-20200724171302317"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/Saxon_web_maven_war/ <span class="comment">&lt;!-- 配置完的就是显示后缀名-&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.pom.xml（pom文件）</strong></p><p><strong>maven的核心文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 刚才配置的GAV--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Saxon_web_maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--jar:java 程序的包</span></span><br><span class="line"><span class="comment">    war:javaweb 应用的包--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  自己设置的名字--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Saxon_web_maven Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    默认的构建编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    编码版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--项目依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>   <span class="comment">&lt;!--    具体依赖的包--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--以后用要用的包 可以连他依赖的包一起下下来 &lt;dependency&gt; &lt;/dependency&gt; 用这个包起来的 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>Saxon_web_maven<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于maven的约定大于配置，所以我们在Java文件夹上面如果写的文件不是Java文件，就导不出去。需要在build中配置一下resource文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>修改项目默认生成的文件夹WEB-INF里面的web.xml让版本提高，更好的一个测试环境，不是target</strong></p><p>原版：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更改可以参考tomcat的web.xml</p><h3 id="五、maven仓库"><a href="#五、maven仓库" class="headerlink" title="五、maven仓库"></a>五、maven仓库</h3><p>第一次使用某一个包的时候，他没在我们本地的仓库中，我们就要去网上的maven仓库寻找我们要找的资源</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>   <span class="comment">&lt;!--    具体依赖的包--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之HTTP</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8BHTTP/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8BHTTP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h4 id="一、什么是HTTP"><a href="#一、什么是HTTP" class="headerlink" title="一、什么是HTTP"></a>一、什么是HTTP</h4><p><strong>http（超文本文件传输协议）是一个简单的请求-响应协议，它通常运行在TCP之上。</strong></p><h4 id="二、HTTP请求（百度）"><a href="#二、HTTP请求（百度）" class="headerlink" title="二、HTTP请求（百度）"></a>二、HTTP请求（百度）</h4><p>客户端=&gt;发出请求=&gt;服务器</p><h5 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Request URL: https://www.baidu.com/ <span class="comment">#请求的域名</span></span><br><span class="line">Request Method: GET  <span class="comment">#请求方式 GET和POST</span></span><br><span class="line">Status Code: 200 OK <span class="comment">#状态码</span></span><br><span class="line">Remote Address: 14.215.177.38:443 <span class="comment">#实际上的IP地址和端口</span></span><br></pre></td></tr></table></figure><p><strong>请求方式：</strong></p><ul><li><strong>GET：请求携带的数据比较少，大小有限制，会在访问的URL上面显示数据信息，不安全，但是高效</strong></li><li><strong>POST:请求携带的数据没有限制，大小没有限制，不会在访问的URL上面显示数据信息，安全，但是不高效</strong></li></ul><h5 id="2-消息体"><a href="#2-消息体" class="headerlink" title="2.消息体"></a>2.消息体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,image/apng,<span class="comment">//告诉浏览器他支持的数据类型</span></span><br><span class="line">Accept-Encoding: gzip, deflate, br<span class="comment">//编码</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span><span class="comment">//语言</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span> <span class="comment">//缓存控制</span></span><br><span class="line">Connection: keep-alive <span class="comment">//告诉浏览器请求完成后是不是断开连接，如果断开的话，下一次再要访问还要再次请求全部资源</span></span><br><span class="line">Host: www.baidu.com<span class="comment">//主机</span></span><br></pre></td></tr></table></figure><h4 id="三、HTTP响应（百度）"><a href="#三、HTTP响应（百度）" class="headerlink" title="三、HTTP响应（百度）"></a>三、HTTP响应（百度）</h4><p>服务器=&gt;发出相应=&gt;客户端</p><h5 id="1-响应体"><a href="#1-响应体" class="headerlink" title="1.响应体"></a>1.响应体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: <span class="keyword">private</span><span class="comment">//缓存控制</span></span><br><span class="line">Connection: keep-alive <span class="comment">//告诉浏览器响应完成后是不是断开连接，如果断开的话，下一次再要访问还要再次请求全部资源</span></span><br><span class="line">Content-Encoding: gzip<span class="comment">//编码</span></span><br><span class="line">Content-Type: text/html;<span class="comment">//类型</span></span><br><span class="line">charset=utf-<span class="number">8</span><span class="comment">//编码</span></span><br></pre></td></tr></table></figure><h5 id="2-响应状态码"><a href="#2-响应状态码" class="headerlink" title="2.响应状态码"></a>2.响应状态码</h5><p>200:响应成功</p><p>3XX：重定向</p><p>4XX：失败，资源找不到</p><p>5XX：服务器错误  502网关错误</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java_web之web服务器</title>
      <link href="2020/12/11/JavaWeb%E4%B9%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2020/12/11/JavaWeb%E4%B9%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h2><h3 id="一、脚本语言"><a href="#一、脚本语言" class="headerlink" title="一、脚本语言"></a>一、脚本语言</h3><h4 id="一、asp"><a href="#一、asp" class="headerlink" title="一、asp"></a>一、asp</h4><p>一、概念：</p><p>ASP即Active Server Pages，是Microsoft公司开发的服务器端脚本环境，可用来创建动态交互式网页并建立强大的web应用程序。当服务器收到对ASP文件的请求时，它会处理包含在用于构建发送给浏览器的HTML（<em>Hyper Text Markup Language，超文本置标语言</em>）网页文件中的服务器端脚本代码。除服务器端脚本代码外，ASP文件也可以包含文本、HTML（<em>包括相关的客户端脚本</em>）和com组件调用。</p><p><strong>ASP可以使用两种脚本语言：VBScript和Jscript（所谓的JScript语言就是微软版本的JavaScript语言）</strong></p><h4 id="二、PHP"><a href="#二、PHP" class="headerlink" title="二、PHP"></a>二、PHP</h4><p>PHP即“超文本预处理器，是一种通用开源脚本语言。PHP是在服务器端执行的脚本语言，与C语言类似，是常用的网站编程语言。PHP独特的语法混合了C、Java、Perl以及 PHP 自创的语法。利于学习，使用广泛，主要适用于web开发领域。</p><p><strong>无法承载大的访问量的访问；</strong></p><h4 id="三、JSP"><a href="#三、JSP" class="headerlink" title="三、JSP"></a>三、JSP</h4><p><strong>本质上是servlet</strong></p><p><strong>JSP</strong>（全称<strong>J</strong>ava<strong>S</strong>erver <strong>P</strong>ages）是由Sun公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、xml或其他格式文档的web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的Http请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>特点：</p><ul><li>能以模板化的方式简单、高效地添加动态网页内容。</li><li>由sun公司编写，语法上与ASP相似</li><li>可利用Javabean和标签库技术复用常用的功能代码（设计好的组件容易实现重复利用，减少重复劳动）。标签库不仅带有通用的内置标签JSTL，而且支持可扩展功能的自定义标签。</li><li>有良好的工具支持。</li><li>继承了Java语言的相对易用性。</li><li>继承了Java的跨平台优势，实现“一次编写，处处运行”。因为支持Java及其相关技术的开发平台多，网站开发人员可以选择在最适合自己的系统平台上进行JSP开发；不同环境下开发的JSP项目，在所有客户端上都能顺利访问。</li><li>页面中的动（控制变动内容的部分）/静（内容不需变动的部分）区域以分散但又有序的形式组合在一起，能使人更直观地看出页面代码的整体结构，也使得设计页面效果和程序逻辑这2部分工作容易分离（外观视图与逻辑分离）。从而方便分配人员并发挥各自长处，实现高效地分工合作。</li><li>可与其它企业级Java技术相互配合。JSP可以只专门负责页面中的数据呈现，实现分层开发。</li></ul><h3 id="二、web服务器"><a href="#二、web服务器" class="headerlink" title="二、web服务器"></a>二、web服务器</h3><h4 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat:"></a>Tomcat:</h4><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8">服务器</a>，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应<a href="https://baike.baidu.com/item/HTML">HTML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073">标准通用标记语言</a>下的一个应用）页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p><p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和<a href="https://baike.baidu.com/item/IIS">IIS</a>等Web服务器一样，具有处理HTML页面的功能，<strong>另外它还是一个Servlet和JSP容器</strong>，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态<a href="https://baike.baidu.com/item/HTML">HTML</a>的能力不如Apache服务器。目前Tomcat最新版本为9.0.37**。</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA_WEB之基本概念</title>
      <link href="2020/12/11/JAVA-WEB%E4%B9%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>2020/12/11/JAVA-WEB%E4%B9%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaWeb基本概念"><a href="#JavaWeb基本概念" class="headerlink" title="JavaWeb基本概念"></a>JavaWeb基本概念</h2><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p><strong>web开发：就是基于网页的开发</strong></p><ul><li>静态网页：每个人看到的都是一样的。例如HTML.css js 等</li><li>动态网页：例如淘宝等大型网站</li></ul><p>在Java中，动态web技术就叫做Java web;</p><h3 id="二、web应用程序"><a href="#二、web应用程序" class="headerlink" title="二、web应用程序"></a>二、web应用程序</h3><p>web应用程序：可以提供给浏览器访问的程序</p><p>web应用程序编写完毕后，如果需要给他人访问，那么需要一个服务器来统一管理。</p><h3 id="三、静态web"><a href="#三、静态web" class="headerlink" title="三、静态web"></a>三、静态web</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/9082898-21595aecd7a3ad26.png"></p><p>客户端发出**(request)<strong>请求访问服务器上的web service ，再通过web service 去找寻拂服务器上的html等静态网页资源，最后再由web service返回</strong>(response)**响应</p><p><strong>缺点:</strong></p><ul><li>web无法实现动态更新，所有用户看到的都是同一个页面</li><li>无法与数据库进行连接，数据无法持久化，用户无法进行交互</li></ul><h3 id="四、动态web"><a href="#四、动态web" class="headerlink" title="四、动态web"></a>四、动态web</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/3.jpg"></p><p><strong>优点:</strong></p><ul><li>web可以动态更新，所有用户看到的都不是同一个页面</li><li>与数据库进行连接</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch之文档操作</title>
      <link href="2020/12/11/ElasticSearch%E4%B9%8B%E6%96%87%E6%A1%A3%E6%93%8D%E4%BD%9C/"/>
      <url>2020/12/11/ElasticSearch%E4%B9%8B%E6%96%87%E6%A1%A3%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="文档操作"><a href="#文档操作" class="headerlink" title="文档操作"></a>文档操作</h2><h3 id="一、添加文档信息"><a href="#一、添加文档信息" class="headerlink" title="一、添加文档信息"></a>一、添加文档信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实际命令 PUT /saxon/_doc/1</span></span><br><span class="line"><span class="comment">//        &#123;...&#125;</span></span><br><span class="line">User saxon = <span class="keyword">new</span> User (<span class="string">&quot;saxon&quot;</span>, <span class="number">1</span>);</span><br><span class="line">IndexRequest indexRequest=<span class="keyword">new</span> IndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">indexRequest.id (<span class="string">&quot;1&quot;</span>);<span class="comment">//设置文档的编号</span></span><br><span class="line">indexRequest.timeout (<span class="string">&quot;1s&quot;</span>);</span><br><span class="line">String s = JSON.toJSONString (saxon);</span><br><span class="line">indexRequest.source (s,XContentType.JSON);</span><br><span class="line">IndexResponse index = restHighLevelClient.index (indexRequest, RequestOptions.DEFAULT);</span><br><span class="line">System.out.println (index.getVersion ());</span><br></pre></td></tr></table></figure><p>指定timeout，就能在timeout时间范围内，将搜索到的部分数据（也可能全部都搜索到），直接返回给client，而不是所有数据搜索到再返回，可以为一些敏感的搜索应用提供良好的支持</p><p>提供的信息必须要是json字符串，否则就会添加失败,还是那句话，所有的命令由client执行</p><h3 id="二、修改文档的数据"><a href="#二、修改文档的数据" class="headerlink" title="二、修改文档的数据"></a>二、修改文档的数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UpdateRequest up = <span class="keyword">new</span> UpdateRequest (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">up.doc (JSON.toJSONString (<span class="keyword">new</span> User (<span class="string">&quot;saxonmo&quot;</span>,<span class="number">202</span>)),XContentType.JSON);</span><br><span class="line">UpdateResponse update = restHighLevelClient.update (up, RequestOptions.DEFAULT);</span><br><span class="line">System.out.println (update.status ());</span><br></pre></td></tr></table></figure><p>实际上每一个xxxxResponse对应的都是一个命令的返回体</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">6</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">5</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、删除文档数据"><a href="#三、删除文档数据" class="headerlink" title="三、删除文档数据"></a>三、删除文档数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DeleteRequest deleteRequest=<span class="keyword">new</span> DeleteRequest (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">deleteRequest.timeout (<span class="string">&quot;1s&quot;</span>);</span><br><span class="line">DeleteResponse deleteResponse=restHighLevelClient.delete (deleteRequest,RequestOptions.DEFAULT);</span><br><span class="line">System.out.println (deleteResponse.status ());</span><br></pre></td></tr></table></figure><h3 id="四、查出文档信息"><a href="#四、查出文档信息" class="headerlink" title="四、查出文档信息"></a>四、查出文档信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SearchRequest searchRequest=<span class="keyword">new</span> SearchRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">SearchSourceBuilder Builder = <span class="keyword">new</span> SearchSourceBuilder ();</span><br><span class="line">Builder.query (QueryBuilders.matchQuery (<span class="string">&quot;name&quot;</span>,<span class="string">&quot;saxon&quot;</span>));</span><br><span class="line">searchRequest.source (Builder);</span><br><span class="line">SearchResponse search = restHighLevelClient.search (searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"><span class="keyword">for</span> (SearchHit hit : search.getHits ()) &#123;</span><br><span class="line">System.out.println (hit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch之集成SpringBoot</title>
      <link href="2020/12/11/ElasticSearch%E4%B9%8B%E9%9B%86%E6%88%90SpringBoot/"/>
      <url>2020/12/11/ElasticSearch%E4%B9%8B%E9%9B%86%E6%88%90SpringBoot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Springboot-集成-ElasticSearch7-8-0"><a href="#Springboot-集成-ElasticSearch7-8-0" class="headerlink" title="Springboot 集成 ElasticSearch7.8.0"></a>Springboot 集成 ElasticSearch7.8.0</h2><p><strong>使用spring boot的版本为2.4.0，所以系统自带的ElasticSearch 的版本就是7.9.2，我们可以为他自动降个版本</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>7.8.0<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用版本要和我们本地的版本一致；</p><h3 id="第一步、Quick-Start"><a href="#第一步、Quick-Start" class="headerlink" title="第一步、Quick Start"></a>第一步、Quick Start</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201124214447961.png" alt="image-20201124214447961"></p><p>初始化，在spring boot自动配置；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticSearchClientConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestHighLevelClient <span class="title">restHighLevelClient</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestHighLevelClient (RestClient.builder(</span><br><span class="line">                <span class="keyword">new</span> HttpHost(<span class="string">&quot;localhost&quot;</span>, <span class="number">9200</span>, <span class="string">&quot;http&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于<strong>RestHighLevelClient</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">RestHighLevelClient</span><span class="params">(RestClientBuilder restClientBuilder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(restClientBuilder, Collections.emptyList());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>对我们的客户端进行一个绑定</p><h3 id="第二步、创建第一个索引"><a href="#第二步、创建第一个索引" class="headerlink" title="第二步、创建第一个索引"></a>第二步、创建第一个索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.indices.CreateIndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.indices.CreateIndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoApplicationTests</span> </span>&#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RestHighLevelClient restHighLevelClient;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">CreateIndexRequest request=<span class="keyword">new</span> CreateIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">CreateIndexResponse response=restHighLevelClient.indices ().create (request, RequestOptions.DEFAULT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一个创建索引的服务端，就有一个创建索引的响应端创建执行索引命令；</p><p>结果如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;saxon&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;aliases&quot;</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;index&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;creation_date&quot;</span> : <span class="string">&quot;1606225198553&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_shards&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_replicas&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;uuid&quot;</span> : <span class="string">&quot;LwwRyzzISD20HJXIKsHZ8A&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;created&quot;</span> : <span class="string">&quot;7080099&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;provided_name&quot;</span> : <span class="string">&quot;saxon&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三步、查看索引是否存在以及获得索引信息"><a href="#第三步、查看索引是否存在以及获得索引信息" class="headerlink" title="第三步、查看索引是否存在以及获得索引信息"></a>第三步、查看索引是否存在以及获得索引信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetIndexRequest request=<span class="keyword">new</span> GetIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">System.out.println (restHighLevelClient.indices ().exists (request, RequestOptions.DEFAULT));</span><br></pre></td></tr></table></figure><p>执行命令：<strong>restHighLevelClient.indices ()</strong></p><p>获得索引信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetIndexRequest request=<span class="keyword">new</span> GetIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">System.out.println (restHighLevelClient.indices ().get (request,RequestOptions.DEFAULT));</span><br></pre></td></tr></table></figure><h3 id="第四步、测试删除一个索引"><a href="#第四步、测试删除一个索引" class="headerlink" title="第四步、测试删除一个索引"></a>第四步、测试删除一个索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">DeleteIndexRequest request=<span class="keyword">new</span> DeleteIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">System.out.println (restHighLevelClient.indices ().delete (request,RequestOptions.DEFAULT).isAcknowledged ());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch之Restful风格</title>
      <link href="2020/12/11/ElasticSearch%E4%B9%8BRestful%E9%A3%8E%E6%A0%BC/"/>
      <url>2020/12/11/ElasticSearch%E4%B9%8BRestful%E9%A3%8E%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Restful风格"><a href="#Restful风格" class="headerlink" title="Restful风格"></a>Restful风格</h2><p>一种软件架构风格，而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交 互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。</p><p>基本Rest命令说明：</p><table><thead><tr><th><strong>method</strong></th><th><strong>url</strong>地址</th><th>描述</th></tr></thead><tbody><tr><td>PUT</td><td>localhost:9200/索引名称/类型名称/文档id</td><td>创建文档（指定文档id）</td></tr><tr><td>POST</td><td>localhost:9200/索引名称/类型名称</td><td>创建文档（随机文档id）</td></tr><tr><td>POST</td><td>localhost:9200/索引名称/类型名称/文档id/_update</td><td>修改文档</td></tr><tr><td>DELETE</td><td>localhost:9200/索引名称/类型名称/文档id</td><td>删除文档</td></tr><tr><td>GET</td><td>localhost:9200/索引名称/类型名称/文档id</td><td>查询文档通过文档id</td></tr><tr><td>POST</td><td>localhost:9200/索引名称/类型名称/_search</td><td>查询所有数据</td></tr></tbody></table><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT /[index]</span><br></pre></td></tr></table></figure><h4 id="测试put（添加数据）"><a href="#测试put（添加数据）" class="headerlink" title="测试put（添加数据）"></a><strong>测试put（添加数据）</strong></h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT /test/type1/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in document index requests is deprecated, use the typeless endpoints instead (/&#123;index&#125;/_doc/&#123;id&#125;, /&#123;index&#125;/_doc, or /&#123;index&#125;/_create/&#123;id&#125;).//使用的格式不要制定索引的类型</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;test&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;type1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在elasticSearch head里面发现新的索引</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201123154604392.png" alt="image-20201123154604392"></p><p><strong>如果kibana一直在调转，我们可以看一下Elastic Search客户端是否卡住了；</strong></p><p><strong>使用put创建一个库</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUT /saxon</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;integer&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;index&quot;</span> : <span class="string">&quot;saxon&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不指定数据类型的话，es会自动指定数据</p><h4 id="修改索引库"><a href="#修改索引库" class="headerlink" title="修改索引库"></a>修改索引库</h4><p><strong>第一种方法：put</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT /test/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;saxonmo&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;test&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>需要注意的是，这个需要我们把库里面所有的字段，都要写出来；实际上就是一个覆盖</strong></p><p>使用post 最后加上<strong>__update</strong></p><p><strong>修改属性</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /saxon/_doc/3/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;doc&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;json&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最新的方式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /key2/_update/jjab_nUB0kitsOqAVIOH/</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;doc&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;ss&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在索引的后面就是用<strong>_update</strong>在加上 <strong>id</strong>就可以修改，这么做的方法与上面put不同的地方在于可以不用写出全部的字段名，想要修改哪一个属性就修改那个属性，使用 <strong>doc</strong>括起来就可以</p><h4 id="删除索引库"><a href="#删除索引库" class="headerlink" title="删除索引库"></a>删除索引库</h4><p>删除一整个库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /[index]</span><br></pre></td></tr></table></figure><p>删除某一个字段</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /key2/_doc/jjab_nUB0kitsOqAVIOH</span><br></pre></td></tr></table></figure><p><strong>库名/类型/id</strong></p><h4 id="文档的搜索"><a href="#文档的搜索" class="headerlink" title="文档的搜索"></a>文档的搜索</h4><p><strong>关于hits</strong></p><p>hits包括了索引和文档信息，查询结果的总数,id等信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.9808291</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>不使用restful风格</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET saxon/_search?q=name=mo</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.9808291</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.9808291</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="搜索指定索引根据属性"><a href="#搜索指定索引根据属性" class="headerlink" title="搜索指定索引根据属性"></a><strong>搜索指定索引根据属性</strong></h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mosong&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;json&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;saxonmo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="搜索出来的数据，控制显示的属性"><a href="#搜索出来的数据，控制显示的属性" class="headerlink" title="搜索出来的数据，控制显示的属性"></a><strong>搜索出来的数据，控制显示的属性</strong></h5><p>使用“_source”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_source&quot;</span>: [<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">1.2039728</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.2039728</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="数据排序"><a href="#数据排序" class="headerlink" title="数据排序"></a>数据排序</h5><p><strong>sort:</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;mo&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;sort&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h5><p><strong>from[序号] size[页面大小]</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;mo&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;from&quot;</span>: <span class="number">0</span></span><br><span class="line">  , <span class="attr">&quot;size&quot;</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h5><p>bool下面使用must或者should，使用<strong>must</strong>的话，就是and关系，必须要所有条件，排除条件的话，使用 <strong>must_not</strong>；使用<strong>should</strong>的话就只要满足一个就好</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是多个条件一起查询</p><h5 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h5><p><strong>使用filter选择在这个条件的时候，range选择age的范围</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;filter&quot;</span>: [</span><br><span class="line">        &#123;<span class="attr">&quot;range&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;age&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;gte&quot;</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;lte&quot;</span>: <span class="number">20</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>gte:大于等于 gt:大于</li><li>lte:小于等于 lt:小于</li></ul><h5 id="查询多个的权重"><a href="#查询多个的权重" class="headerlink" title="查询多个的权重"></a><strong>查询多个的权重</strong></h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">325</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣男&quot;</span>,</span><br><span class="line">            <span class="string">&quot;男&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.12874341</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;男人&quot;</span>,</span><br><span class="line">            <span class="string">&quot;美铝&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配的个数不同的话，他的分数就会不一样，权重就不一样，匹配越多，权重越大；</p><p>匹配多个的话，直接使用空格隔开</p><h5 id="精准查询"><a href="#精准查询" class="headerlink" title="精准查询"></a>精准查询</h5><p>term:直接查询精确的，通过倒排索指定的词条进行精确查询</p><p>match：使用分词器分析</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果tags是关键字的话，他就会只匹配一整个，不会分词</p><p><strong>字段的类型 text和keyword</strong></p><p><strong>text：会不会被拆分，会不会使用分词器分析</strong></p><p><strong>keyword：不会被拆分</strong></p><h5 id="高亮显示"><a href="#高亮显示" class="headerlink" title="高亮显示"></a>高亮显示</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">83</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣男&quot;</span>,</span><br><span class="line">            <span class="string">&quot;男&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣&lt;em&gt;男&lt;/em&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;em&gt;男&lt;/em&gt;&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.12874341</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;男人&quot;</span>,</span><br><span class="line">            <span class="string">&quot;美铝&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;&lt;em&gt;男&lt;/em&gt;人&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>自定义高亮样式：</strong></p><p>使用<strong>pre_tags(前缀)**和</strong>post_tags(后缀)**</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;pre_tags&quot;</span>: <span class="string">&quot;&lt;p&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;post_tags&quot;</span>: <span class="string">&quot;&lt;/p&gt;&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣男&quot;</span>,</span><br><span class="line">            <span class="string">&quot;男&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣&lt;p&gt;男&lt;/p&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;p&gt;男&lt;/p&gt;&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.12874341</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;男人&quot;</span>,</span><br><span class="line">            <span class="string">&quot;美铝&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;&lt;p&gt;男&lt;/p&gt;人&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch之IK分词器</title>
      <link href="2020/12/11/ElasticSearch%E4%B9%8BIK%E5%88%86%E8%AF%8D%E5%99%A8/"/>
      <url>2020/12/11/ElasticSearch%E4%B9%8BIK%E5%88%86%E8%AF%8D%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="IK分词器"><a href="#IK分词器" class="headerlink" title="IK分词器"></a>IK分词器</h2><p>分词：即把一段中文或者别的划分成一个个的关键字，我们在搜索时候会把自己的信息进行分词，会把 数据库中或者索引库中的数据进行分词，然后进行一个匹配操作，默认的中文分词是将每个字看成一个 词，比如 “我爱狂神” 会被分为”我”,”爱”,”狂”,”神”，这显然是不符合要求的，所以我们需要安装中文分词器ik来解决这个问题。</p><p>IK提供了两个分词算法：ik_smart 和 ik_max_word，其中 ik_smart 为最少切分，ik_max_word为最细粒度划分！一会我们测试！</p><p><strong>ik_smart</strong> : 粗粒度分词，从第一个开始分割，分离词汇，不会阿紫回来再分割一次，就只分割一次！</p><p><strong>ik_max_word</strong> : 细粒度分词，会穷尽一个语句中所有分词可能，测试！</p><h4 id="ik-smart"><a href="#ik-smart" class="headerlink" title="ik_smart"></a>ik_smart</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line"> , <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;曲靖师范学院信息工程学院&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;曲靖&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;信息&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ik-max-word"><a href="#ik-max-word" class="headerlink" title="ik_max_word"></a>ik_max_word</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line"> , <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;曲靖师范学院信息工程学院&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;曲靖&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">3</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;信息&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程学&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">6</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">7</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">8</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>smart模式只会分割一次。</p><h4 id="自定义词汇"><a href="#自定义词汇" class="headerlink" title="自定义词汇"></a>自定义词汇</h4><p>步骤：</p><p>（1）  进入elasticsearch/plugins/ik/conﬁg目录</p><p>（2）  新建一个my.dic文件，编辑内容：</p><p>（3）  修改IKAnalyzer.cfg.xml（在ik/conﬁg目录下）</p><p>使用以后变化：</p><p>我在字典里面添加了一个==信息工程学院==</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line"> , <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;曲靖师范学院信息工程学院&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;曲靖&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;信息工程学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变化在于：<strong>他把我们的原来拆分成俩个的信息和工程学院变成信息工程学院了</strong></p>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch之Elasticsearch核心概念</title>
      <link href="2020/12/11/elasticsearch%E4%B9%8Belasticsearch%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/"/>
      <url>2020/12/11/elasticsearch%E4%B9%8Belasticsearch%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Elastic-Search的核心概念"><a href="#Elastic-Search的核心概念" class="headerlink" title="Elastic Search的核心概念"></a>Elastic Search的核心概念</h2><p><strong>==elasticsearch是面向文档，关系行数据库 和 elasticsearch 客观的对比==</strong></p><table><thead><tr><th><strong>Relational DB</strong>  (mysql)</th><th><strong>Elasticsearch</strong></th></tr></thead><tbody><tr><td>数据库(database)</td><td>索引(indices)</td></tr><tr><td>表(tables)</td><td>types</td></tr><tr><td>行(rows)</td><td>documents</td></tr><tr><td>字段(columns)</td><td>ﬁelds</td></tr></tbody></table><p>elasticsearch(集群)中可以包含<strong>多个索引(数据库)**，每个索引中可以包含</strong>多个类型(表)<strong>，每个类型下又包 含多 个</strong>文档(行)<strong>，每个文档中又包含多个</strong>字段(列)**。</p><p>物理设计：</p><p>elasticsearch 在后台把每个索引划分成多个分片，每分分片可以在集群中的不同服务器间迁移</p><p>逻辑设计：</p><p>一个索引类型中，包含多个文档，比如说文档1，文档2。 当我们索引一篇文档时，可以通过这样的一各顺序找到 它: 索引 ▷ 类型 ▷ 文档ID ，通过这个组合我们就能索引到某个具体的文档。 注意:ID不必是整数，实际上它是个字 符串。</p><h3 id="一、文档"><a href="#一、文档" class="headerlink" title="一、文档"></a>一、文档</h3><p>之前说elasticsearch是面向文档的，那么就意味着索引和搜索数据的最小单位是文档，elasticsearch 中，文档有几个 重要属性 :</p><p>!自我包含，一篇文档同时包含字段和对应的值，也就是同时包含 key:value！ 可以是层次型的，一个文档中包含自文档，复杂的逻辑实体就是这么来的！</p><p>灵活的结构，文档不依赖预先定义的模式，我们知道关系型数据库中，要提前定义字段才能使用， 在elasticsearch中，对于字段是非常灵活的，有时候，我们可以忽略该字段，或者动态的添加一个 新的字段。<br>尽管我们可以随意的新增或者忽略某个字段，但是，每个字段的类型非常重要，比如一个年龄字段类   型，可以是字符 串也可以是整形。因为elasticsearch会保存字段和类型之间的映射及其他的设置。这种映射具体到每个映射的每种类型，这也是为什么在elasticsearch中，类型有时候也称为映射类型。</p><p>类型是文档的逻辑容器，就像关系型数据库一样，表格是行的容器。 类型中对于字段的定义称为映射</p><h3 id="二、类型"><a href="#二、类型" class="headerlink" title="二、类型"></a>二、类型</h3><p>比如 name 映 射为字符串类型。 我们说文档是无模式的，它们不需要拥有映射中所定义的所有字段， 比如新增一个字段，那么elasticsearch是怎么做的呢?elasticsearch会自动的将新字段加入映射，但是这 个字段的不确定它是什么类型，elasticsearch就开始猜，如果这个值是18，那么elasticsearch会认为它 是整形。 但是elasticsearch也可能猜不对， 所以<strong>最安全的方式就是提前定义好所需要的映射</strong>，这点跟关系型数据库殊途同归了，先定义好字段，然后再使用，别 整什么幺蛾子。</p>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch之简介和安装</title>
      <link href="2020/12/11/ElasticSearch%E4%B9%8B%E7%AE%80%E4%BB%8B%E5%92%8C%E5%AE%89%E8%A3%85/"/>
      <url>2020/12/11/ElasticSearch%E4%B9%8B%E7%AE%80%E4%BB%8B%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Elaticsearch，简称为es， es是一个开源的高扩展的分布式全文检索引擎，它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。es也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p><p> 据国际权威的数据库产品评测机构DB Engines的统计，在2016年1月，ElasticSearch已超过Solr等，成为排名第一的搜索引擎类应用。</p><h2 id="ElasticSearch和Elastic-Search-Kibana安装"><a href="#ElasticSearch和Elastic-Search-Kibana安装" class="headerlink" title="ElasticSearch和Elastic Search Kibana安装"></a>ElasticSearch和Elastic Search Kibana安装</h2><h3 id="一、Elastic-Search和Elastic-Search-head"><a href="#一、Elastic-Search和Elastic-Search-head" class="headerlink" title="一、Elastic Search和Elastic Search head"></a>一、Elastic Search和Elastic Search head</h3><p>我们需要下载和安装ElasticSearch的服务端和客户端！</p><p>注意：</p><p>ElasticSearch是使用java开发的，且本版本的es需要的jdk版本要是1.8以上，所以安装ElasticSearch 之前保证JDK1.8+安装完毕，并正确的配置好JDK环境变量，否则启动ElasticSearch失败。</p><p>ElasticSearch的官方地址： <a href="https://www.elastic.co/products/elasticsearch">https://www.elastic.co/products/elasticsearch</a></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/clip_image005.jpg" alt="img"></p><p>官方下载地址：<a href="https://www.elastic.co/cn/downloads/elasticsearch">https://www.elastic.co/cn/downloads/elasticsearch </a>（很慢，可以翻墙下载！）</p><p>win下载：<a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.1.zip">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.1.zip</a></p><p>我这里已经帮大家下载好了，Linux 和 window 版的！</p><p>我们学习的话使用 window 或者 linux 都是可以的，对于我们 java 开发来说没有区别，只是连接的问题！</p><p>Windows更加方便一点！所以我们前期都是用Window安装使用！后面我们再真正的安装到Linux服务器 上跑项目！</p><p> <strong>1、解压window的压缩包！</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/clip_image012.jpg" alt="img"></p><p>2、双击ElasticSearch下的bin目录中的elasticsearch.bat启动，控制台显示的日志（等待启动完 毕！）：</p><p>3、然后在浏览器访问：<a href="http://localhost:9200/">http://localhost:9200</a> 得到如下信息，说明安装成功了:</p><p>!)<img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/clip_image018.jpg" alt="img"></p><p>注意：需要NodeJS的环境，我们讲解大前端进阶已经安装过了，没安装的需要安装！ Head是elasticsearch的集群管理工具，可以用于数据的浏览查询！被托管在github上面！ 地址： <a href="https://github.com/mobz/elasticsearch-head/">https://github.com/mobz/elasticsearch-head/</a></p><p>1、下载 elasticsearch-head-master.zip 2、解压之后安装依赖！ </p><p>这将启动在端口9100上运行的本地web服务器，为elasticsearch-head服务！访问测试： </p><p>3、由于ES进程和客户端进程端口号不同，存在跨域问题，所以我们要在ES的配置文件中配置下跨域问 题：</p><table><thead><tr><th>1</th><th># 跨域配置：</th></tr></thead><tbody><tr><td>2</td><td>http.cors.enabled:  true</td></tr><tr><td>3</td><td>http.cors.allow-origin:  “*”</td></tr></tbody></table><p>4、启动ElasticSearch，使用head工具进行连接测试！</p><h3 id="二、kibana"><a href="#二、kibana" class="headerlink" title="二、kibana"></a><strong>二、kibana</strong></h3><p>Kibana是一个针对Elasticsearch的开源分析及可视化平台，用来搜索、查看交互存储在Elasticsearch索 引中的数据。使用Kibana，可以通过各种图表进行高级数据分析及展示。Kibana让海量数据更容易理   解。它操作简单，基于浏览器的用户界面可以快速创建仪表板（dashboard）实时显示Elasticsearch查 询动态。设置Kibana非常简单。无需编码或者额外的基础架构，几分钟内就可以完成Kibana安装并启动Elasticsearch索引监测。</p><p>下载过程和上面的一摸一样，但是就是我们的版本号不同导致页面和以前不一样</p><p><strong>配置中文</strong></p><p>只需要在配置文件 kibana.yml 中加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i18n.locale: <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之JDBC</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BJDBC/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BJDBC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><h4 id="一、数据库驱动"><a href="#一、数据库驱动" class="headerlink" title="一、数据库驱动"></a>一、数据库驱动</h4><p>类似于显卡驱动的东西，应用程序不可以直接与数据库相连，所以要用到驱动；</p><h4 id="二、JDBC"><a href="#二、JDBC" class="headerlink" title="二、JDBC"></a>二、JDBC</h4><p>JDBC（<strong>J</strong>ava <strong>D</strong>ata<strong>B</strong>ase <strong>C</strong>onnectivity）是Java和数据库之间的一个桥梁，==<strong>是一个规范而不是一个实现</strong>==，能够执行SQL语句。它由一组用Java语言编写的类和接口组成。各种不同类型的数据库都有相应的实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="comment">//连接云数据库</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.加载驱动 驱动的版本一定要和数据库的版本相适应</span></span><br><span class="line">        Class.forName (<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<span class="comment">//固定写法 com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="comment">//2.用户信息和url</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/saxon  主机名（外网地址）和端口号 数据库名</span></span><br><span class="line"><span class="comment">        useUnicode=true&amp;characterEncoding=utf8:是否使用中中文字符和解码的规则</span></span><br><span class="line"><span class="comment">        SSL:SSL VPN是以SSL协议为安全基础的VPN远程接入技术，移动办公人员（在SSL VPN中被称为远程用户）使用SSL VPN可以安全、         访问企业内网资源，提高工作效率。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/saxon?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName=<span class="string">&quot;saxon&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">        String password=<span class="string">&quot;19990707&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">        <span class="comment">//3.连接成功  connection:就是一个数据库对象</span></span><br><span class="line">        Connection connection = DriverManager.getConnection (url, userName, password);</span><br><span class="line">        <span class="comment">//4.获取statement对象，这个对象用于执行sql语句</span></span><br><span class="line">        Statement statement = connection.createStatement ();</span><br><span class="line">        <span class="comment">//5.执行sql语句 返回一个结果resultSet 是一个链表</span></span><br><span class="line">        String sql=<span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line">        ResultSet resultSet = statement.executeQuery (sql);<span class="comment">//返回的是全部查询的结果，数据库查询</span></span><br><span class="line">        statement.executeUpdate ();<span class="comment">//数据库的增删改</span></span><br><span class="line">        <span class="keyword">while</span> (resultSet.next ())&#123;</span><br><span class="line">            System.out.println (<span class="string">&quot;sno:&quot;</span>+resultSet.getObject (<span class="string">&quot;sno&quot;</span>));</span><br><span class="line">            System.out.println (<span class="string">&quot;sname:&quot;</span>+resultSet.getObject (<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">            System.out.println (<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment">//6 释放连接 避免资源的浪费</span></span><br><span class="line">        resultSet.close ();</span><br><span class="line">        statement.close ();</span><br><span class="line">        connection.close ();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>步骤总结：</strong></p><ol><li><strong>加载驱动</strong> </li><li><strong>连接数据库 DrivrManager</strong></li><li><strong>创建对象 statement</strong></li><li><strong>获得结果，可以对结果进行一个操作</strong></li><li><strong>释放连接</strong></li></ol><h4 id="三、关于对象的解释"><a href="#三、关于对象的解释" class="headerlink" title="三、关于对象的解释"></a>三、关于对象的解释</h4><h5 id="1-DriverManager"><a href="#1-DriverManager" class="headerlink" title="1.DriverManager"></a>1.DriverManager</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Class.forName (<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>)</span><br><span class="line">    <span class="comment">//加载驱动就会执行下面的动态代码块，就不用再用DriverManager.registerDriver(new Driver())，目的只是为了获得驱动，所以不用在返回对象</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            java.sql.DriverManager.registerDriver(<span class="keyword">new</span> Driver());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException E) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Can&#x27;t register driver!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//数据库本身，可以执行事务的回滚和提交</span></span><br><span class="line"> Connection connection = DriverManager.getConnection (url, userName, password);</span><br></pre></td></tr></table></figure><h5 id="2-URL"><a href="#2-URL" class="headerlink" title="2.URL"></a>2.URL</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String url=<span class="string">&quot;jdbc:mysql://</span></span><br><span class="line"><span class="string">    rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com</span></span><br><span class="line"><span class="string">    :3306 //端口号</span></span><br><span class="line"><span class="string">    /saxon //用户名</span></span><br><span class="line"><span class="string">    ?useUnicode=true//</span></span><br><span class="line"><span class="string">    &amp;characterEncoding=utf8</span></span><br><span class="line"><span class="string">    &amp;useSSL=true&quot;</span>;</span><br></pre></td></tr></table></figure><h5 id="3-statement"><a href="#3-statement" class="headerlink" title="3.statement"></a>3.statement</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//statement 执行sql语句的对象 </span></span><br><span class="line">Statement statement = connection.createStatement ();</span><br><span class="line"><span class="comment">//***************************************************************</span></span><br><span class="line"><span class="comment">//sql语句</span></span><br><span class="line">String sql=<span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line"><span class="comment">//*********************************</span></span><br><span class="line"><span class="keyword">int</span> i = statement.executeUpdate (sql);<span class="comment">//执行sql语句，返回值是受影响的行数</span></span><br><span class="line">ResultSet resultSet = statement.executeQuery (sql);<span class="comment">//返回的是全部查询的结果</span></span><br><span class="line"><span class="keyword">boolean</span> execute = statement.execute (sql);<span class="comment">//返回执行语句是否成功</span></span><br></pre></td></tr></table></figure><h5 id="4-resultSet-结果集"><a href="#4-resultSet-结果集" class="headerlink" title="4.resultSet(结果集)"></a>4.resultSet(结果集)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回的是全部查询的结果，数据库查询 只有查询语言才有，返回的是一个结果集</span></span><br><span class="line">ResultSet resultSet = statement.executeQuery (sql);</span><br><span class="line"><span class="comment">//具体的数据类型</span></span><br><span class="line">        resultSet.getObject ();<span class="comment">//不知道数据类型</span></span><br><span class="line"><span class="comment">//具体你设置的数据类型 varchar=&gt;string</span></span><br><span class="line">        resultSet.getShort ();</span><br><span class="line">        resultSet.getString ();</span><br><span class="line">        resultSet.getInt ();</span><br><span class="line">        resultSet.getTime ();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于结果的处理：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resultSet.next ();<span class="comment">//跳到下一行</span></span><br><span class="line">resultSet.previous ();<span class="comment">//移动到前一行</span></span><br><span class="line">resultSet.absolute (<span class="keyword">int</span> row);<span class="comment">//移动到具体的行数</span></span><br><span class="line">resultSet.afterLast ();<span class="comment">//移动到最后面</span></span><br><span class="line">resultSet.beforeFirst ();<span class="comment">//移动到最后面</span></span><br></pre></td></tr></table></figure><h5 id="5-释放资源"><a href="#5-释放资源" class="headerlink" title="5.释放资源"></a>5.释放资源</h5><p>消耗资源，关闭节约资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resultSet.close ();</span><br><span class="line">statement.close ();</span><br><span class="line">connection.close ();</span><br></pre></td></tr></table></figure><h4 id="四、statement对象"><a href="#四、statement对象" class="headerlink" title="四、statement对象"></a>四、statement对象</h4><h5 id="1-配置文件的设置及使用"><a href="#1-配置文件的设置及使用" class="headerlink" title="1.配置文件的设置及使用"></a>1.配置文件的设置及使用</h5><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置文件不用在末尾加上句号，以行为标准 目录在src目录下</span></span><br><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/saxon?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">userName</span>=<span class="string">saxon</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">19990707</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用类加载器获得一个属性文件的输入流getResourceAsStream</span></span><br><span class="line">InputStream input = JdbcUtil.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;JDBCUTIL.properties&quot;</span>);</span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load (input);<span class="comment">//将资源加载</span></span><br><span class="line">    <span class="comment">//拿出配置文件的信息</span></span><br><span class="line">            String driver = properties.getProperty (<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            String url = properties.getProperty (<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            String userName = properties.getProperty (<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">            String password = properties.getProperty (<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="2-工具类的书写"><a href="#2-工具类的书写" class="headerlink" title="2.工具类的书写"></a>2.工具类的书写</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        InputStream input = JdbcUtil.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;JDBCUTIL.properties&quot;</span>);</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load (input);</span><br><span class="line">            String driver = properties.getProperty (<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            String url = properties.getProperty (<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            String userName = properties.getProperty (<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">            String password = properties.getProperty (<span class="string">&quot;password&quot;</span>);</span><br><span class="line">            <span class="comment">//1.加载驱动程序</span></span><br><span class="line">            Class.forName (driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得数据库的连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 连接信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回的是连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span> <span class="params">(String url, String userName, String password)</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = DriverManager.getConnection (url, userName, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对数据库的资源进行释放</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库的连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement 数据库的sql操作实体，操作增删改查的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet 如果是数据库的查询语言，那么就会产生这个对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span> <span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                connection.close ();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">                statement.close ();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">                resultSet.close ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对数据库的操作进行反馈</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库的连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql sql 语言</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isSelect 是否是数据库查询语言，如果是的话，那么就是statement.executeQuery，否则就是statement.executeUpdate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 抛出异常，太多了麻烦，一次性全部抛出</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Info</span> <span class="params">(Connection connection, String sql, <span class="keyword">boolean</span> isSelect)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        statement = connection.createStatement ();</span><br><span class="line">        <span class="keyword">if</span> (! isSelect) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = statement.executeUpdate (sql);</span><br><span class="line">            System.out.println (<span class="string">&quot;Affected rows: &quot;</span> + i);</span><br><span class="line">            statement.close ();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ResultSet resultSet = statement.executeQuery (sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                System.out.println (<span class="string">&quot;studentno:&quot;</span> + resultSet.getInt (<span class="string">&quot;studentno&quot;</span>));</span><br><span class="line">                System.out.println (<span class="string">&quot;subjectno:&quot;</span> + resultSet.getInt (<span class="string">&quot;subjectno&quot;</span>));</span><br><span class="line">                System.out.println (<span class="string">&quot;examdate:&quot;</span> + resultSet.getDate (<span class="string">&quot;examdate&quot;</span>));</span><br><span class="line">                System.out.println (<span class="string">&quot;studentresult:&quot;</span> + resultSet.getInt (<span class="string">&quot;studentresult&quot;</span>));</span><br><span class="line">                System.out.println (<span class="string">&quot;****************************************************************&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            statement.close ();</span><br><span class="line">            resultSet.close ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName = <span class="string">&quot;saxon&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;19990707&quot;</span>;</span><br><span class="line">        Connection connection = JdbcUtil.getConnection (url, userName, password);</span><br><span class="line">        String sql = <span class="string">&quot;INSERT INTO result VALUES(\&quot;1005\&quot;,\&quot;3\&quot;,\&quot;2020-05-14 16:00:00\&quot;,\&quot;100\&quot;);&quot;</span>;</span><br><span class="line">        String check=<span class="string">&quot;SELECT * FROM result&quot;</span>;</span><br><span class="line">        JdbcUtil.Info (connection,sql,<span class="keyword">false</span>);</span><br><span class="line">        JdbcUtil.release (connection,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="五、SQL的注入问题"><a href="#五、SQL的注入问题" class="headerlink" title="五、SQL的注入问题"></a>五、SQL的注入问题</h4><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判定的语句中有一些永真式，导致所有的信息都会输出，导致信息泄露</span></span><br><span class="line">String check=<span class="string">&quot;SELECT * FROM `result` WHERE `studentno`=&#x27;1000&#x27; or &#x27;1==1&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="六、PreparedStatement对象"><a href="#六、PreparedStatement对象" class="headerlink" title="六、PreparedStatement对象"></a>六、PreparedStatement对象</h4><h5 id="1、增"><a href="#1、增" class="headerlink" title="1、增"></a>1、增</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">statementTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName = <span class="string">&quot;saxon&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;19990707&quot;</span>;</span><br><span class="line">        Connection connection = JdbcUtil.getConnection (url, userName, password);</span><br><span class="line">        <span class="comment">//**********************************************************</span></span><br><span class="line">        <span class="comment">//区别1：可以利用占位符来进行一个对于数据的占位，在后面在开始设置，提高安全性</span></span><br><span class="line">        String sql = <span class="string">&quot;INSERT INTO result VALUES(?,?,?,?);&quot;</span>;</span><br><span class="line">        <span class="comment">//预编译，先编译在执行</span></span><br><span class="line">        PreparedStatement statement = connection.prepareStatement (sql);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 设置问号的位置 void setInt(int parameterIndex, int x) throws SQLException;</span></span><br><span class="line"><span class="comment">        * parameterIndex：问号的位置，从一开始</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        statement.setInt (<span class="number">1</span>,<span class="number">2000</span>);</span><br><span class="line">        statement.setInt (<span class="number">2</span>,<span class="number">10</span>);</span><br><span class="line">        statement.setDate (<span class="number">3</span>,<span class="keyword">new</span> Date (<span class="keyword">new</span> java.util.Date ().getTime ()));</span><br><span class="line">        statement.setInt (<span class="number">4</span>,<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//在执行一遍 输出改变的行</span></span><br><span class="line">        System.out.println (statement.executeUpdate ());</span><br><span class="line">        JdbcUtil.release (connection,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-改"><a href="#2-改" class="headerlink" title="2.改"></a>2.改</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">statementTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName = <span class="string">&quot;saxon&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;19990707&quot;</span>;</span><br><span class="line">        Connection connection = JdbcUtil.getConnection (url, userName, password);</span><br><span class="line">        <span class="comment">//**********************************************************</span></span><br><span class="line">        <span class="comment">//区别1：可以利用占位符来进行一个对于数据的占位，在后面在开始设置，提高安全性</span></span><br><span class="line">        String sql = <span class="string">&quot;update result set `subjectno`=?    where `studentno`=?;&quot;</span>;</span><br><span class="line">        <span class="comment">//预编译，先编译在执行</span></span><br><span class="line">        PreparedStatement statement = connection.prepareStatement (sql);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 设置问号的位置 void setInt(int parameterIndex, int x) throws SQLException;</span></span><br><span class="line"><span class="comment">        * parameterIndex：问号的位置，从一开始</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        statement.setInt (<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">        statement.setInt (<span class="number">2</span>,<span class="number">2000</span>);</span><br><span class="line">        <span class="comment">//在执行一遍 输出改变的行</span></span><br><span class="line">        System.out.println (statement.executeUpdate ());</span><br><span class="line">        JdbcUtil.release (connection,statement,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">statementTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName = <span class="string">&quot;saxon&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;19990707&quot;</span>;</span><br><span class="line">        Connection connection = JdbcUtil.getConnection (url, userName, password);</span><br><span class="line">        <span class="comment">//**********************************************************</span></span><br><span class="line">        <span class="comment">//区别1：可以利用占位符来进行一个对于数据的占位，在后面在开始设置，提高安全性</span></span><br><span class="line">        String sql = <span class="string">&quot;delete  from result where `subjectno`=?&quot;</span>;</span><br><span class="line">        <span class="comment">//预编译，先编译在执行</span></span><br><span class="line">        PreparedStatement statement = connection.prepareStatement (sql);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 设置问号的位置 void setInt(int parameterIndex, int x) throws SQLException;</span></span><br><span class="line"><span class="comment">        * parameterIndex：问号的位置，从一开始</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        statement.setInt (<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//在执行一遍 输出改变的行</span></span><br><span class="line">        System.out.println (statement.executeUpdate ());</span><br><span class="line">        JdbcUtil.release (connection,statement,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-查"><a href="#4-查" class="headerlink" title="4.查"></a>4.查</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">statementTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName = <span class="string">&quot;saxon&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;19990707&quot;</span>;</span><br><span class="line">        Connection connection = JdbcUtil.getConnection (url, userName, password);</span><br><span class="line">        <span class="comment">//**********************************************************</span></span><br><span class="line">        <span class="comment">//区别1：可以利用占位符来进行一个对于数据的占位，在后面在开始设置，提高安全性</span></span><br><span class="line">        String sql = <span class="string">&quot;select * from result where `subjectno`=?&quot;</span>;</span><br><span class="line">        <span class="comment">//预编译，先编译在执行</span></span><br><span class="line">        PreparedStatement statement = connection.prepareStatement (sql);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 设置问号的位置 void setInt(int parameterIndex, int x) throws SQLException;</span></span><br><span class="line"><span class="comment">         * parameterIndex：问号的位置，从一开始</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        statement.setInt (<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">        <span class="comment">//在执行一遍 输出改变的行</span></span><br><span class="line">        ResultSet resultSet = statement.executeQuery ();</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">            System.out.println (<span class="string">&quot;studentno:&quot;</span> + resultSet.getInt (<span class="string">&quot;studentno&quot;</span>));</span><br><span class="line">            System.out.println (<span class="string">&quot;subjectno:&quot;</span> + resultSet.getInt (<span class="string">&quot;subjectno&quot;</span>));</span><br><span class="line">            System.out.println (<span class="string">&quot;examdate:&quot;</span> + resultSet.getDate (<span class="string">&quot;examdate&quot;</span>));</span><br><span class="line">            System.out.println (<span class="string">&quot;studentresult:&quot;</span> + resultSet.getInt (<span class="string">&quot;studentresult&quot;</span>));</span><br><span class="line">            System.out.println (<span class="string">&quot;****************************************************************&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtil.release (connection, statement, resultSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>prepareStatement可以有效的防止SQL注入的问题</p><h4 id="七、ideal处理事务"><a href="#七、ideal处理事务" class="headerlink" title="七、ideal处理事务"></a>七、ideal处理事务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> saxon.util.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">transactionTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String userName = <span class="string">&quot;saxon&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;19990707&quot;</span>;</span><br><span class="line">        Connection connection = JdbcUtil.getConnection (url, userName, password);</span><br><span class="line">        PreparedStatement statement=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.setAutoCommit (<span class="keyword">false</span>);</span><br><span class="line">            String sql=<span class="string">&quot;update result set `studentresult`=`studentresult`+50 where `studentno`=1004&quot;</span>;</span><br><span class="line">            statement = connection.prepareStatement (sql);</span><br><span class="line">            statement.executeUpdate ();</span><br><span class="line">            <span class="keyword">int</span> x=<span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">            String sql2=<span class="string">&quot;update result set `studentresult`=`studentresult`-50 where `studentno`=2000&quot;</span>;</span><br><span class="line">            statement = connection.prepareStatement (sql2);</span><br><span class="line">            statement.executeUpdate ();</span><br><span class="line">            connection.commit ();</span><br><span class="line">            System.out.println (<span class="string">&quot;successful&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.rollback ();</span><br><span class="line">                System.out.println (<span class="string">&quot;失败回滚&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">            throwables.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.close ();</span><br><span class="line">            statement.close ();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>步骤：</p><ol><li>connection.setAutoCommit (false);设置自动提交</li><li>编写事务代码</li><li>connection.commit ();或者 connection.rollback ();默认失败回滚，==不用关闭自动提交，在提交后默认关闭==</li></ol><h4 id="八、数据库连接池"><a href="#八、数据库连接池" class="headerlink" title="八、数据库连接池"></a>八、数据库连接池</h4><p><strong>池化技术：使用完的数据库连接不会消失，会进入池中，等待再次被使用，可以避免重复的回收资源(connection.close)。使用和线程池差不多</strong> </p><h5 id="一-DBCP"><a href="#一-DBCP" class="headerlink" title="一.DBCP"></a>一.DBCP</h5><p>需要导入的包：commons-dbcp2-2.7.0.jar,commons-logging-1.2.jar,commons-pool2-2.8.0.jar;</p><h6 id="1-编写配置文件"><a href="#1-编写配置文件" class="headerlink" title="1.编写配置文件"></a>1.编写配置文件</h6><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#连接设置 url:一定要写对</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">saxon</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">19990707</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;!-- 初始化连接 --&gt;</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#最大连接数量</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;!-- 最大空闲连接 --&gt;</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;!-- 最小空闲连接 --&gt;</span></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --&gt;</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">6000</span></span><br><span class="line"><span class="comment">#注意：&quot;user&quot; 与 &quot;password&quot; 两个属性会被明确地传递，因此这里不需要包含他们。</span></span><br><span class="line"><span class="attr">connectionProperties</span>=<span class="string">useUnicode=true;characterEncoding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span></span><br><span class="line"><span class="attr">defaultAutoCommit</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span></span><br><span class="line"><span class="comment">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span></span><br><span class="line"><span class="attr">defaultReadOnly</span>=<span class="string"></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span></span><br><span class="line"><span class="comment">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span></span><br><span class="line"><span class="attr">defaultTransactionIsolation</span>=<span class="string">READ_COMMITTED</span></span><br></pre></td></tr></table></figure><h6 id="2-编写的工具类"><a href="#2-编写的工具类" class="headerlink" title="2.编写的工具类"></a>2.编写的工具类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp2.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">dbcpUtil</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        InputStream input = JdbcUtil.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;dbcp.properties&quot;</span>);</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load (input);</span><br><span class="line">            <span class="comment">//自动获得连接对象</span></span><br><span class="line">            dataSource = BasicDataSourceFactory.createDataSource (properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span> <span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-测试-1"><a href="#3-测试-1" class="headerlink" title="3.测试"></a>3.测试</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon;</span><br><span class="line"><span class="keyword">import</span> saxon.util.dbcpUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">dbcpTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = dbcpUtil.getConnection ();</span><br><span class="line">        Statement statement = connection.createStatement ();</span><br><span class="line">        System.out.println (statement.executeUpdate (<span class="string">&quot;INSERT INTO result VALUES(\&quot;1005\&quot;,\&quot;3\&quot;,\&quot;2020-05-14 16:00:00\&quot;,\&quot;10086\&quot;);&quot;</span>));</span><br><span class="line">        connection.close();</span><br><span class="line">        statement.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="二、C3P0"><a href="#二、C3P0" class="headerlink" title="二、C3P0"></a>二、C3P0</h5><p>需要的JAR包：mchange-commons-java-0.2.11.jar，c3p0-0.9.5.1.jar；==需要注意的是，这两个包需要把版本号进行一个匹配，如果一个版本号过高就会失败==</p><h6 id="1-配置文件；"><a href="#1-配置文件；" class="headerlink" title="1.配置文件；"></a>1.配置文件；</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用默认的配置读取连接池对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  连接参数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/test?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true</span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>saxon<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>19990707<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 连接池参数 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 最大连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 最大等待时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 最大空闲回收时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>==文件放置在src目录下，前提是src已经被设置为sources root，否则不会成功==</p><p>==文件必须用括号包起来，括号里面一定是C3P0-config，否则读不出来==</p><h6 id="2-工具类"><a href="#2-工具类" class="headerlink" title="2.工具类"></a>2.工具类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp2.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">c3p0Util</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ComboPooledDataSource dataSource=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource =<span class="keyword">new</span>  ComboPooledDataSource(<span class="string">&quot;MYSQL&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span> <span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-测试类"><a href="#3-测试类" class="headerlink" title="3.测试类"></a>3.测试类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> saxon;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span>  saxon.util.c3p0Util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">c3p0Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Connection connection = c3p0Util.getConnection ();</span><br><span class="line">            Statement statement = connection.createStatement ();</span><br><span class="line">            System.out.println (statement.executeUpdate (<span class="string">&quot;INSERT INTO result VALUES(\&quot;1005\&quot;,\&quot;3\&quot;,\&quot;2020-05-14 16:00:00\&quot;,\&quot;100861\&quot;);&quot;</span>));</span><br><span class="line">            connection.close ();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h5><p>无论是哪一种最后都实现了DataSource接口，原理不变；感觉和线程池一样；</p>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之数据库设计</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="数据库的设计"><a href="#数据库的设计" class="headerlink" title="数据库的设计"></a>数据库的设计</h3><h4 id="1、为什么需要数据库规范"><a href="#1、为什么需要数据库规范" class="headerlink" title="1、为什么需要数据库规范"></a>1、为什么需要数据库规范</h4><ul><li><strong>信息重复</strong></li><li><strong>插入错误</strong></li><li><strong>更新错误</strong></li><li><strong>删除错误</strong></li></ul><h4 id="2、三大范式"><a href="#2、三大范式" class="headerlink" title="2、三大范式"></a>2、三大范式</h4><ul><li><strong>第一范式(1NF)**：==**原子性，确保每一列不可再分</strong>==.例如下表中的数据一样，家庭信息和学校信息中的信息可以在分，每一个都可以在分为两个列</li></ul><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/1218459-20180909201651535-1215699096.png"></p><ul><li><p>**第二范式(2NF)**：     </p><ul><li><strong>前提：满足第一范式</strong></li><li>每一个表都在描述一个事情，一个信息。例如学生表中只应该有学生信息，学校的具体信息应该在另外加一个表</li></ul></li><li><p><strong>第三范式(3NF)</strong>: </p><ul><li><p><strong>前提：满足第二范式</strong></p></li><li><p>确保直接相连，例如下图的班主任信息一样，班主任信息依赖于班主任姓名，与学生姓名无关，所以要另起一个表，将班主任的信息分开。</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/1218459-20180909201651535-1215699096.png"></p></li></ul></li></ul><h4 id="3、性能和规范的问题"><a href="#3、性能和规范的问题" class="headerlink" title="3、性能和规范的问题"></a><strong>3、性能和规范的问题</strong></h4><ul><li>考虑商业化的用途的话，那么就是性能比较重要</li><li>在考虑性能的同时，要适当的考虑规范</li><li>为了尽量避免多表查询，可以适当增加数据的冗余；</li><li>故意增加一些计算列，降低数据量的查询，还可以增加索引</li></ul>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之用户权限和数据库备份</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90s%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90s%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="用户权限管理和数据库备份"><a href="#用户权限管理和数据库备份" class="headerlink" title="用户权限管理和数据库备份"></a>用户权限管理和数据库备份</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 创建一个用户</span><br><span class="line">CREATE  USER &#96;saxon1&#96; identified by &#39;123456&#39;;</span><br><span class="line">-- 更改用户的密码，但是不适用于高版本</span><br><span class="line">SET PASSWORD FOR &#96;saxon2&#96;&#x3D; PASSWORD(&#39;123456789&#39;)</span><br><span class="line">-- 更改用户的名字</span><br><span class="line">RENAME USER saxon1 TO saxon2 </span><br><span class="line">-- 显示用户的权限</span><br><span class="line">SHOW GRANTS  FOR  &#96;saxon&#96;</span><br><span class="line">-- root账户的权限</span><br><span class="line">GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON *.* TO &#96;saxon&#96;@&#96;%&#96; WITH GRANT OPTION</span><br><span class="line">-- </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之索引</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%B4%A2%E5%BC%95/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="一、索引的分类"><a href="#一、索引的分类" class="headerlink" title="一、索引的分类"></a>一、索引的分类</h4><ul><li><h4 id="主键索引-primary-key-唯一的标识，一张表只可以有一个，并且不可以重复。"><a href="#主键索引-primary-key-唯一的标识，一张表只可以有一个，并且不可以重复。" class="headerlink" title="主键索引(primary key):唯一的标识，一张表只可以有一个，并且不可以重复。"></a>主键索引(primary key):唯一的标识，一张表只可以有一个，并且不可以重复。</h4></li><li><h4 id="唯一索引-unique-key-避免同样的列名出现，可以有多个列设置为唯一索引"><a href="#唯一索引-unique-key-避免同样的列名出现，可以有多个列设置为唯一索引" class="headerlink" title="唯一索引(unique key):避免同样的列名出现，可以有多个列设置为唯一索引"></a>唯一索引(unique key):避免同样的列名出现，可以有多个列设置为唯一索引</h4></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error occur in <span class="keyword">execute</span> SQL. Caused <span class="keyword">by</span>: 执行失败:<span class="keyword">Duplicate</span> <span class="keyword">column</span> <span class="keyword">name</span> <span class="string">&#x27;examdate&#x27;</span><span class="comment">--出现重复的索引就会出这个错误</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="一般索引-key"><a href="#一般索引-key" class="headerlink" title="一般索引(key)"></a>一般索引(key)</h4></li></ul><h4 id="二、索引的使用"><a href="#二、索引的使用" class="headerlink" title="二、索引的使用"></a>二、索引的使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SHOW  INDEX  from &#96;result&#96; &#x2F;*显示表中的所有索引*&#x2F;</span><br><span class="line">alter TABLE  &#96;result&#96; add FULLTEXT  INDEX &#96;subjectno&#96;(&#96;subjectno&#96;);&#x2F;*创建一个新的全局索引*&#x2F;</span><br><span class="line">EXPLAIN  SELECT * FROM &#96;grade&#96; WHERE MATCH(&#96;gradeid&#96;) against(&#39;5&#39;);&#x2F;*查找全局索引*&#x2F;</span><br><span class="line">EXPLAIN  SELECT * FROM &#96;grade&#96; WHERE &#96;gradeid&#96; &#x3D;&#39;5&#39;&#x2F;*解释分析sql语句*&#x2F;</span><br></pre></td></tr></table></figure><h4 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*创建一个表格*&#x2F;</span><br><span class="line">CREATE TABLE &#96;app_user&#96; (</span><br><span class="line">&#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">&#96;name&#96; varchar(50) DEFAULT &#39;&#39;,</span><br><span class="line">&#96;email&#96; varchar(50) NOT NULL,</span><br><span class="line">&#96;phone&#96; varchar(20) DEFAULT &#39;&#39;,</span><br><span class="line">&#96;gender&#96; tinyint(4) unsigned DEFAULT &#39;0&#39;,</span><br><span class="line">&#96;password&#96; varchar(100) NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line">&#96;age&#96; tinyint(4) DEFAULT NULL,</span><br><span class="line">&#96;create_time&#96; datetime DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">&#96;update_time&#96; timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span><br><span class="line">PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*写一个函数，批量生成一百万条数据*&#x2F;</span><br><span class="line">DELIMITER $$</span><br><span class="line">-- 写函数之前必须要写，标志</span><br><span class="line">CREATE FUNCTION mock_data ()</span><br><span class="line">RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE num INT DEFAULT 1000000;</span><br><span class="line">DECLARE i INT DEFAULT 0;</span><br><span class="line">WHILE i&lt;num DO</span><br><span class="line">INSERT INTO &#96;app_user&#96;(&#96;name&#96;,&#96;email&#96;,&#96;phone&#96;,&#96;gender&#96;)VALUES(CONCAT(&#39;用户&#39;,i),&#39;19224305@qq.com&#39;,&#39;123456789&#39;,FLOOR(RAND()*2));</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">END WHILE;</span><br><span class="line">RETURN i;</span><br><span class="line">END;</span><br><span class="line">-- 执行函数</span><br><span class="line">SELECT mock_data() -- 执行此函数 生成一百万条数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 第一种查询方式 直接查询 </span><br><span class="line">SELECT * FROM &#96;app_user&#96; WHERE &#96;name&#96;&#x3D;&#39;用户9999&#39;-- 用时：380ms 查询的次数就是表的列数，是利用遍历查询的</span><br><span class="line">-- 第二种查询方式：建立索引来查询 直接建立一个普通索引，直接引用就可以，他会把索引用序号拍起来，下一次直接使用</span><br><span class="line">CREATE  INDEX id_app_user_name ON app_user (&#96;name&#96;);--  用时4ms ；建立普通的索引的话，查询就是查询一次</span><br><span class="line">SELECT * FROM &#96;app_user&#96; WHERE &#96;name&#96;&#x3D;&#39;用户99999&#39;</span><br><span class="line">-- 全局索引 语法：SELECT * FROM [表名] WHERE MATCH ([列名]) AGAINST ([属性值])-</span><br><span class="line">CREATE  FULLTEXT  INDEX id_app_user_name ON app_user (&#96;name&#96;);</span><br><span class="line">SELECT * FROM &#96;app_user&#96; WHERE MATCH (&#96;name&#96;) AGAINST (&#39;用户9999&#39;)-- 用时：6ms</span><br></pre></td></tr></table></figure><h4 id="四、索引原则"><a href="#四、索引原则" class="headerlink" title="四、索引原则"></a>四、索引原则</h4><ul><li><strong>索引的数量不是越多越好</strong></li><li><strong>索引应该设置在不经常更新的数据上</strong></li><li><strong>索引应该设置在经常查询的字段上</strong></li><li><strong>数据量太小就不用添加索引</strong></li></ul><h4 id="五、深入了解数据库索引的数据结构"><a href="#五、深入了解数据库索引的数据结构" class="headerlink" title="==五、深入了解数据库索引的数据结构=="></a><strong>==五、深入了解数据库索引的数据结构==</strong></h4><p>连接地址： <a href="https://blog.codinglabs.org/articles/theory-of-mysql-index.html">https://blog.codinglabs.org/articles/theory-of-mysql-index.html</a></p><h5 id="1-b-tree-m阶的b-tree"><a href="#1-b-tree-m阶的b-tree" class="headerlink" title="1.b-tree(m阶的b-tree)"></a>1.b-tree(m阶的b-tree)</h5><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/2019090109300123.png" alt="img"></p><ul><li>在第一轮中，找到关键字的话，直接输出数据，如果没有的话，那么就继续向下查找。查找按照二分查找的规则进行。比数值小的就在左边，比关键字大的就在另一边。它查找的结束位置可能是任何节点的任何位置。不一定要是叶子节点或是根节点。</li><li>每个节点最多有m个孩子节点</li><li>若根节点不是叶子节点，则至少有2个孩子。</li></ul><p>==<strong>例如</strong>：<strong>模拟查找关键字29的过程</strong>==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">模拟查找关键字29的过程：</span><br><span class="line">根据根节点找到磁盘块1，读入内存。【磁盘I&#x2F;O操作第1次】</span><br><span class="line">比较关键字29在区间（17,35），找到磁盘块1的指针P2。</span><br><span class="line">根据P2指针找到磁盘块3，读入内存。【磁盘I&#x2F;O操作第2次】</span><br><span class="line">比较关键字29在区间（26,30），找到磁盘块3的指针P2。</span><br><span class="line">根据P2指针找到磁盘块8，读入内存。【磁盘I&#x2F;O操作第3次】</span><br><span class="line">在磁盘块8中的关键字列表中找到关键字29。</span><br><span class="line"></span><br><span class="line">分析上面过程，发现需要3次磁盘I&#x2F;O操作，和3次内存查找操作。由于内存中的关键字是一个有序表结构，可以利用二分法查找提高效率。而3次磁盘I&#x2F;O操作是影响整个B-Tree查找效率的决定因素。B-Tree相对于AVLTree缩减了节点个数，使每次磁盘I&#x2F;O取到内存的数据都发挥了作用，从而提高了查询效率。</span><br></pre></td></tr></table></figure><h5 id="2-b-tree-InnoDB和MyIRam使用的都是b-Tree"><a href="#2-b-tree-InnoDB和MyIRam使用的都是b-Tree" class="headerlink" title="2.b+tree(InnoDB和MyIRam使用的都是b+Tree)"></a>2.b+tree(InnoDB和MyIRam使用的都是b+Tree)</h5><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/20190901093019761.png" alt="img"></p><ul><li>所有的<strong>叶子结点中包含了全部关键字的信息(数据)**，</strong>非叶子节点只存储键值信息(关键字)**，及指向含有这些关键字记录的指针，且叶子结点本身依关键字的大小自小而大的顺序链接，所有的非终端结点可以看成是索引部分，结点中仅含有其子树根结点中最大（或最小）关键字。 (而B树的非终节点也包含需要查找的有效信息)</li><li>所有叶子节点之间都有一个链指针。</li><li>数据记录都存放在叶子节点中。</li><li><strong>请尽量在InnoDB上采用自增字段做主键</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之事务</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E4%BA%8B%E5%8A%A1/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><h4 id="1-什么是事务"><a href="#1-什么是事务" class="headerlink" title="1.什么是事务"></a>1.什么是事务</h4><p>==数据库事务( transaction)是访问并可能操作各种数据项的一个数据库操作序列，这些操作要么全部执行,要么全部不执行，是一个不可分割的工作单位。事务由事务开始与事务结束之间执行的全部数据库操作组成==</p><h4 id="2-ACID"><a href="#2-ACID" class="headerlink" title="2.ACID"></a>2.ACID</h4><ul><li><strong>原子性（Atomicity）</strong><br>原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生</li><li><strong>一致性（Consistency）</strong><br><strong><em>表示事务结束后的数据不随着外界原因导致数据丢失</em></strong>，事务前后数据的完整性必须保持一致。例如转钱一样，两个人的总值是不会变的</li><li><strong>隔离性（Isolation）</strong><br>事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。</li><li><strong>持久性（Durability）</strong><br>持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响。<strong>没有提交就不会变，一旦提交就变不了</strong></li></ul><h4 id="3-事务的隔离级别"><a href="#3-事务的隔离级别" class="headerlink" title="3.事务的隔离级别"></a>3.事务的隔离级别</h4><ul><li><h5 id="脏读：指一个事务读取了另外一个事务未提交的数据。"><a href="#脏读：指一个事务读取了另外一个事务未提交的数据。" class="headerlink" title="脏读：指一个事务读取了另外一个事务未提交的数据。"></a>脏读：指一个事务读取了另外一个事务未提交的数据。</h5></li><li><h5 id="不可重复读：在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）"><a href="#不可重复读：在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）" class="headerlink" title="不可重复读：在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）"></a>不可重复读：在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）</h5></li><li><h5 id="虚读-幻读-是指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致。（一般是行影响，多了一行）"><a href="#虚读-幻读-是指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致。（一般是行影响，多了一行）" class="headerlink" title="虚读(幻读)是指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致。（一般是行影响，多了一行）"></a>虚读(幻读)是指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致。（一般是行影响，多了一行）</h5></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SET autocommit&#x3D;0;&#x2F;*设置自动提交，不设置的话，我们更新的数据就会自动提交*&#x2F;</span><br><span class="line">START TRANSACTION &#x2F;*开启一个事务*&#x2F;</span><br><span class="line">UPDATE &#96;user&#96; SET money&#x3D;money-500 WHERE &#96;user&#96;.&#96;name&#96;&#x3D;&#39;A&#39;;</span><br><span class="line">UPDATE &#96;user&#96; SET money&#x3D;money+500 WHERE &#96;user&#96;.&#96;name&#96;&#x3D;&#39;B&#39;;</span><br><span class="line">ROLLBACK&#x2F;*回滚。数据不会提交，会回到数据提交之前的状态*&#x2F;</span><br><span class="line">COMMIT&#x2F;*提交数据，事务的一致性*&#x2F;</span><br><span class="line">SET autocommit&#x3D;1;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之MYSQL函数</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BMYSQL%E5%87%BD%E6%95%B0/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BMYSQL%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="MySQL函数"><a href="#MySQL函数" class="headerlink" title="MySQL函数"></a>MySQL函数</h3><h5 id="1-常用函数"><a href="#1-常用函数" class="headerlink" title="1.常用函数"></a>1.常用函数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--需要的时候就去官方文档寻找</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>();</span><br></pre></td></tr></table></figure><h5 id="2-聚合函数"><a href="#2-聚合函数" class="headerlink" title="2.聚合函数"></a>2.聚合函数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--数量求和</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="string">&#x27;数量总和&#x27;</span><span class="keyword">FROM</span> <span class="string">`subject`</span><span class="comment">--求的是行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> <span class="string">&#x27;数量总和&#x27;</span><span class="keyword">FROM</span> <span class="string">`subject`</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="string">`subject`</span>.subjectno) <span class="keyword">as</span> <span class="string">&#x27;数量总和&#x27;</span><span class="keyword">FROM</span> <span class="string">`subject`</span></span><br><span class="line"><span class="comment">--聚合函数求最大最小，求和，求均值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(result.studentresult) <span class="keyword">as</span> <span class="string">&#x27;平均值&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sum</span>(result.studentresult) <span class="keyword">as</span> <span class="string">&#x27;总和&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">max</span>(result.studentresult) <span class="keyword">as</span> <span class="string">&#x27;最大值&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">min</span>(result.studentresult) <span class="keyword">as</span> <span class="string">&#x27;最小值&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">--结合</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(result.studentresult) <span class="keyword">as</span> <span class="string">&#x27;平均值&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> result.studentresult</span><br><span class="line"><span class="keyword">HAVING</span> 平均值&gt;<span class="number">70</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之DQL查询数据</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BDQL%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BDQL%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="三、DQL查询数据"><a href="#三、DQL查询数据" class="headerlink" title="三、DQL查询数据"></a>三、DQL查询数据</h3><h4 id="1-指定查询字段"><a href="#1-指定查询字段" class="headerlink" title="1.指定查询字段"></a>1.指定查询字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--选择所有的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`student`</span>;</span><br><span class="line"><span class="comment">--选择特定的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`sex`</span> <span class="keyword">FROM</span> <span class="string">`student`</span>;</span><br><span class="line"><span class="comment">--给选出来的信息数据取一个别名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span> <span class="keyword">as</span> <span class="string">`学号`</span> ,<span class="string">`sex`</span> <span class="keyword">AS</span> <span class="string">`性别`</span> <span class="keyword">FROM</span> <span class="string">`student`</span>;</span><br><span class="line"><span class="comment">--在选出的数据上加上一些自己想加上的字符串，在前面还是后面都可以添加</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="string">&quot;sno:&quot;</span>,<span class="string">`studentno`</span>) <span class="keyword">as</span> <span class="string">&quot;sno&quot;</span> <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h4 id="2-去重"><a href="#2-去重" class="headerlink" title="2.去重"></a>2.去重</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1.不显示重复的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span><span class="string">`studentno`</span> <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br></pre></td></tr></table></figure><h4 id="3-其他"><a href="#3-其他" class="headerlink" title="3.其他"></a>3.其他</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1.查询版本号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>()</span><br><span class="line"><span class="comment">--2.计算算数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span>*<span class="number">3</span><span class="number">-3</span> <span class="keyword">as</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">--3.显示自增的步长</span></span><br><span class="line"><span class="keyword">SELECT</span> @@auto_increment_increment</span><br><span class="line"><span class="comment">--4.数据运算(在每个数据上加上1)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentresult`</span>+<span class="number">1</span>  <span class="keyword">as</span> <span class="string">&quot;成绩&quot;</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br></pre></td></tr></table></figure><h4 id="4-where-语句"><a href="#4-where-语句" class="headerlink" title="4.where 语句"></a>4.where 语句</h4><h5 id="1-指定查询条件"><a href="#1-指定查询条件" class="headerlink" title="1.指定查询条件"></a>1.指定查询条件</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`result`</span> <span class="keyword">WHERE</span> <span class="string">`subjectno`</span>=<span class="number">3</span> <span class="keyword">and</span> <span class="string">`studentno`</span>=<span class="number">1002</span>;</span><br></pre></td></tr></table></figure><h5 id="2-模糊查询-运用比较运算符"><a href="#2-模糊查询-运用比较运算符" class="headerlink" title="2.模糊查询(运用比较运算符)"></a>2.模糊查询(运用比较运算符)</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`result`</span> <span class="keyword">WHERE</span> <span class="string">`subjectno`</span>&gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><strong>==运算符：is null,is not null,beetween…and….,==</strong></p><table><thead><tr><th align="center">运算符</th><th align="center">语法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><strong>Like</strong></td><td align="center">a like b</td><td align="center">SQL语句匹配，如果匹配成功就返回一个true</td></tr><tr><td align="center"><strong>In</strong></td><td align="center">a in b</td><td align="center">SQL语句匹配，数据是一个具体的值的时候匹配成功</td></tr></tbody></table><p><strong>用法</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--通配符：%：长度可能是0也可能是无限。_：就是代表一个字符这个通配符只可以在like里面使用</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="string">`studentname`</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%伟&#x27;</span>;<span class="comment">--末尾是伟字的，长度不确定，如果是下划线的话，长度就固定了</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="string">`studentname`</span> <span class="keyword">LIKE</span> <span class="string">&#x27;_伟&#x27;</span>;</span><br><span class="line"><span class="comment">----------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="string">`studentname`</span> <span class="keyword">IN</span> (<span class="string">&quot;张伟&quot;</span>);<span class="comment">--只有确定的才可以被选出来</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="string">`studentname`</span> <span class="keyword">IN</span> (<span class="string">&quot;张伟&quot;</span>，<span class="string">&quot;saxon&quot;</span>);<span class="comment">--多个用，隔开</span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="string">`studentname`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>; </span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="string">`studentname`</span> <span class="keyword">is</span>  <span class="literal">NULL</span> <span class="keyword">or</span> <span class="string">`studentname`</span>=<span class="string">&quot;&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="5-联表查询"><a href="#5-联表查询" class="headerlink" title="5.联表查询"></a>5.联表查询</h4><h5 id="1-3种联表操作"><a href="#1-3种联表操作" class="headerlink" title="1.3种联表操作"></a>1.3种联表操作</h5><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>Inner join</td><td>查询两张表共同的部分</td></tr><tr><td>left join</td><td>以左边的表为基准，查询左表的字段，哪怕链接的表没有也会显示出来</td></tr><tr><td>right join</td><td>以右边的表为基准，查询右表的字段，哪怕左边的表没有也会显示出来</td></tr></tbody></table><p>就是会匹配字段，以左右为主，匹配出字段就显示，在一个表没有数据的时候也会显示出来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--inner join</span></span><br><span class="line"><span class="keyword">SELECT</span> student.studentno,<span class="string">`studentname`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">ON</span> student.studentno=result.studentno</span><br><span class="line"><span class="comment">--left join</span></span><br><span class="line"><span class="keyword">SELECT</span> student.studentno,<span class="string">`studentname`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">ON</span> student.studentno=result.studentno</span><br><span class="line"><span class="comment">--right join</span></span><br><span class="line"><span class="keyword">SELECT</span> student.studentno,<span class="string">`studentname`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">ON</span> student.studentno=result.studentno</span><br></pre></td></tr></table></figure><h5 id="2-匹配语句间可以连接实现多表查询"><a href="#2-匹配语句间可以连接实现多表查询" class="headerlink" title="2.匹配语句间可以连接实现多表查询"></a>2.匹配语句间可以连接实现多表查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student.studentno,<span class="string">`studentname`</span>,<span class="string">`studentresult`</span>,subjectname</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">ON</span> student.studentno=result.studentno<span class="comment">--查询结果在向下查询</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span></span><br><span class="line"><span class="keyword">ON</span> result.subjectno=<span class="string">`subject`</span>.subjectno</span><br></pre></td></tr></table></figure><h5 id="3-自联查询（把一张表看成两张表查询）"><a href="#3-自联查询（把一张表看成两张表查询）" class="headerlink" title="3.自联查询（把一张表看成两张表查询）"></a>3.自联查询（把一张表看成两张表查询）</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--可以查询一些所属关系</span></span><br><span class="line"><span class="keyword">SELECT</span> a.studentno,s.<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> student a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> student s</span><br><span class="line"><span class="keyword">ON</span> a.studentno=s.studentno</span><br></pre></td></tr></table></figure><h4 id="6-分页和排序"><a href="#6-分页和排序" class="headerlink" title="6.分页和排序"></a>6.分页和排序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`subject`</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> subjectno <span class="keyword">ASC</span><span class="comment">--排序    ASC升序 Desc降序</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span><span class="comment">--分页   页面起始页和页面大小组成</span></span><br><span class="line"><span class="comment">--页面起始页=页面大小*(页面序号-1)；</span></span><br><span class="line"><span class="comment">--数据总数/页数=页面大小</span></span><br></pre></td></tr></table></figure><h4 id="7-子查询和嵌套查询"><a href="#7-子查询和嵌套查询" class="headerlink" title="7.子查询和嵌套查询"></a>7.子查询和嵌套查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--子查询：分为对两个表的查询结果筛选</span></span><br><span class="line"><span class="keyword">SELECT</span> subjectname <span class="keyword">FROM</span> <span class="string">`subject`</span> <span class="keyword">WHERE</span> subjectno <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> result.studentresult&gt;<span class="number">80</span>)</span><br><span class="line"><span class="comment">--嵌套查询：逐步向下进行筛查</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">WHERE</span> studentno <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> result.studentno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> result.subjectno <span class="keyword">IN</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="string">`subject`</span>.subjectno <span class="keyword">FROM</span> <span class="string">`subject`</span> <span class="keyword">WHERE</span> subjectname=<span class="string">&#x27;高等数学-1&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="8-分组和过滤"><a href="#8-分组和过滤" class="headerlink" title="8.分组和过滤"></a>8.分组和过滤</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一个语句内只可以有一个where循环</span></span><br><span class="line"><span class="comment">--group by 顾名思义就是按照xxx进行分组，它必须有“聚合函数”来配合才能使用，使用时至少需要一个分组标识字段。</span></span><br><span class="line"><span class="comment">--having必须在group by 后面</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(result.studentresult) <span class="keyword">as</span> <span class="string">&#x27;平均值&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> result.studentresult</span><br><span class="line"><span class="keyword">HAVING</span> 平均值&gt;<span class="number">70</span>;<span class="comment">--过滤</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之MYSQL数据管理</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BMYSQL%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BMYSQL%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="MySQL数据管理"><a href="#MySQL数据管理" class="headerlink" title="MySQL数据管理"></a>MySQL数据管理</h3><h4 id="1、外键"><a href="#1、外键" class="headerlink" title="1、外键"></a>1、外键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`grade`</span><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  <span class="string">`FK_id`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(<span class="string">`GradeID`</span>) <span class="keyword">REFERENCES</span> <span class="string">`student`</span>(<span class="string">`id`</span>);</span><br><span class="line"><span class="comment">--ALTER TABLE `表名`ADD  CONSTRAINT  `约束名` FOREIGN KEY(`属性的列名`) REFERENCES 引用（要引用的列名）;</span></span><br></pre></td></tr></table></figure><ul><li>外键一旦生成，就与其他的表建立联系，不可随意删除被外键连接的表，要先删除引用这张表的数据表,尽量避免使用外键连接过多的表</li><li>我们的数据表，我们只希望它是一个单纯的由字段（列）和数据组（行）成的东西</li><li>可以使用程序的外键</li></ul><h4 id="2-DML"><a href="#2-DML" class="headerlink" title="2.DML"></a>2.DML</h4><h5 id="1-插入"><a href="#1-插入" class="headerlink" title="1.插入"></a>1.插入</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`grade`</span>(<span class="string">`GradeID`</span>) <span class="keyword">VALUES</span>(<span class="number">2</span>);<span class="comment">--添加某一项的值或者某几项的值</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`grade`</span> <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&quot;a&quot;</span>)<span class="comment">--可以忽略字段名，但是后面的值要一一对应</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`grade`</span> <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&quot;a&quot;</span>),(<span class="number">3</span>,<span class="string">&quot;a&quot;</span>),(<span class="number">4</span>,<span class="string">&quot;a&quot;</span>)<span class="comment">--添加多条记录，用括号分开</span></span><br></pre></td></tr></table></figure><h5 id="2-更新数据"><a href="#2-更新数据" class="headerlink" title="2.更新数据"></a>2.更新数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="string">`学校开始安排表`</span> <span class="keyword">SET</span> <span class="string">`班级`</span>=<span class="string">&#x27;20181431&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">ID</span>=<span class="string">&#x27;2&#x27;</span>;<span class="comment">--判定条件，没有判定条件就会全部修改</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`学校开始安排表`</span> <span class="keyword">SET</span> <span class="string">`班级`</span>=<span class="string">&#x27;20181431&#x27;</span>,<span class="string">`考试人数`</span>=<span class="number">0</span> <span class="keyword">WHERE</span> <span class="keyword">ID</span>=<span class="string">&#x27;2&#x27;</span>;<span class="comment">--多个条件判断就用逗号隔开</span></span><br><span class="line"><span class="comment">/*多个条件判断修改数据 可以用AND 或者 OR 等逻辑运算符*/</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`学校开始安排表`</span> <span class="keyword">SET</span> <span class="string">`班级`</span>=<span class="string">&#x27;20181431&#x27;</span>,<span class="string">`考试人数`</span>=<span class="number">2</span> <span class="keyword">WHERE</span> <span class="keyword">ID</span>=<span class="string">&#x27;2&#x27;</span> <span class="keyword">and</span> <span class="string">`学号字段`</span>=<span class="string">&quot;双号&quot;</span>;</span><br></pre></td></tr></table></figure><h5 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3.删除数据"></a>3.删除数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1.用delete删除的话，那么自增的数据就会在下次添加数据时，从上一次数据的最后一个序号开始自增</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span>  student</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="string">`sname`</span>) <span class="keyword">VALUES</span>(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"><span class="comment">--2.用truncate删除的话，也会把自增变量进行归零</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="string">`student`</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="string">`sname`</span>) <span class="keyword">VALUES</span>(<span class="string">&quot;1&quot;</span>)</span><br></pre></td></tr></table></figure><p>==<strong>delete删除数据库重启对应的两种数据库引擎现象</strong>==</p><ul><li>InnoDB:自增列会从一开始，断电即失的存储，存在内存中；</li><li>MyISAM：继续从上一个自增列开始，存储在文件中；</li></ul>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之操作数据库</title>
      <link href="2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>2020/12/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h3><h4 id="一-数据库的连接（命令行）"><a href="#一-数据库的连接（命令行）" class="headerlink" title="一. 数据库的连接（命令行）"></a>一. 数据库的连接（命令行）</h4><h5 id="1-连接"><a href="#1-连接" class="headerlink" title="1.连接"></a>1.连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p+password <span class="comment">--直接输入密码可以，或者回车输入都可以</span></span><br></pre></td></tr></table></figure><h5 id="2-修改密码"><a href="#2-修改密码" class="headerlink" title="2.修改密码"></a>2.修改密码</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> anthentication_string=<span class="keyword">password</span>(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> Host=<span class="string">&#x27;localhost&#x27;</span>; <span class="comment">--修改用户密码</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>; <span class="comment">--刷新权限</span></span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment">--查看现在所有的数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> mysql;<span class="comment">--使用数据库中的表</span></span><br><span class="line">Database changed;<span class="comment">--表示表已经切换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">--显示该数据库下面的所有的表</span></span><br><span class="line">31 rows in <span class="keyword">set</span> (<span class="number">0.05</span> sec)；<span class="comment">--数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">describe</span> <span class="keyword">user</span>;<span class="comment">--查看表中数据</span></span><br><span class="line">45 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)<span class="comment">--数据</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">create</span> ....<span class="comment">--创建数据库或者建表</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h5 id="3-数据库的四种语言"><a href="#3-数据库的四种语言" class="headerlink" title="3.==数据库的四种语言=="></a>3.<strong>==数据库的四种语言==</strong></h5><p>DDL： 数据库定义语言</p><p>DQL:    数据查询语言</p><p>DML： 数据操纵语言</p><p>DCL：  数据控制语言</p><h4 id="二-操作数据库"><a href="#二-操作数据库" class="headerlink" title="二. 操作数据库"></a>二. 操作数据库</h4><h5 id="sql语言关键字不区分大小写"><a href="#sql语言关键字不区分大小写" class="headerlink" title="==sql语言关键字不区分大小写=="></a>==<strong>sql语言关键字不区分大小写</strong>==</h5><h6 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [if not EXISTS] saxon;--[]内部的可写可不写，如果在创建的数据库已经有了，那么就报错。</span><br><span class="line">CREATE DATABASE saxon  CHARACTER SET utf8 COLLATE utf8_general_ci</span><br><span class="line">&#x2F;*CHARACTER SET 字符集 utf-8</span><br><span class="line">COLLATE utf8_general_ci：排序规则</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><h6 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2.删除数据库"></a>2.删除数据库</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] saxon;</span><br></pre></td></tr></table></figure><h6 id="3-使用数据库"><a href="#3-使用数据库" class="headerlink" title="3.使用数据库"></a>3.使用数据库</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> saxon;</span><br></pre></td></tr></table></figure><h6 id="4-查看数据库"><a href="#4-查看数据库" class="headerlink" title="4.查看数据库"></a>4.查看数据库</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">DATABASES</span>;</span><br></pre></td></tr></table></figure><h4 id="三-数据库表创建时的类型属性说明"><a href="#三-数据库表创建时的类型属性说明" class="headerlink" title="三. 数据库表创建时的类型属性说明"></a>三. 数据库表创建时的类型属性说明</h4><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200709144310424.png" alt="image-20200709144310424"></p><h5 id="1-整数数值类"><a href="#1-整数数值类" class="headerlink" title="1.整数数值类"></a>1.整数数值类</h5><ul><li><p>tinyint  :tinyint数据类型存储从0 到255 之间的所有正整数。<strong>每个tinyint类型的数据占用1 个字节的存储空间</strong></p></li><li><p>smallint  :SMALLINT 数据类型存储从-2的15次方（ -32， 768） 到2的15次方-1（ 32 ，767 ）之间的所有正负整数。每个<strong>SMALLINT 类型的数据占用2 个字节的存储空间，</strong>其中1 位表示整数值的正负号，其它15 位表示整数值的长度和大小。</p></li><li><p>==int :数据类型存储从-2的31次方 （-2 ，147 ，483 ，648） 到2的31次方-1 （2 ，147 ，483，647） 之间的所有正负整数。<strong>每个INT 类型的数据按4 个字节存储</strong>，其中1 位表示整数值的正负号，其它31 位表示整数值的长度和大小。==</p></li><li><p>bigint:BIGINT 数据类型存储从-2^63 （-9 ，223， 372， 036， 854， 775， 807） 到2^63-1（ 9， 223， 372， 036 ，854 ，775， 807） 之间的所有正负整数。<strong>每个BIGINT 类型的数据占用8个字节的存储空间</strong>。</p></li></ul><h5 id="2-浮点数数值类型"><a href="#2-浮点数数值类型" class="headerlink" title="2.浮点数数值类型"></a>2.浮点数数值类型</h5><ul><li>real： <strong>每个REAL类型的数据占用4 个字节的存储空间</strong>。</li><li>float： <strong>每个FLOAT 类型的数据占用4 个字节的存储空间.</strong></li><li>double: <strong>每个double 类型的数据占用8 个字节的存储空间.</strong></li><li>decimal：<strong>字符串类型的小数</strong></li></ul><h5 id="3-字符串"><a href="#3-字符串" class="headerlink" title="3.字符串"></a>3.字符串</h5><ul><li>char:定长字符串。0-255；</li><li>==varchar:可变字符串。0-65535；==</li><li>tinytext:微型文本； 2^8-1；</li><li>==text：保存文本；==</li><li>longtext:极大文本数据；</li></ul><h5 id="4-日期类"><a href="#4-日期类" class="headerlink" title="4.日期类"></a>4.日期类</h5><ul><li>date: 格式：YYYY-MM-DD；</li><li>time：格式：HH:mm:ss;</li><li>year：格式：YYYY</li><li>==datetime:格式：YYYY-MM-DD HH:mm:ss；最常用的数据库日期格式；==</li><li>==timestamp：时间戳，与Java一样，自1970年1月1日0时0分0秒到现在的时间的毫秒数==</li></ul><h4 id="四、数据库的字段属性（重点）"><a href="#四、数据库的字段属性（重点）" class="headerlink" title="四、数据库的字段属性（重点）"></a>四、数据库的字段属性（重点）</h4><h5 id="1-unsigned（无符号）"><a href="#1-unsigned（无符号）" class="headerlink" title="1.unsigned（无符号）"></a>1.unsigned（无符号）</h5><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200709144416140.png" alt="image-20200709144416140" style="zoom:80%;" /><ul><li>无符号整数</li><li>不可以为负数</li></ul><h5 id="2-zerofill（填充零）"><a href="#2-zerofill（填充零）" class="headerlink" title="2.zerofill（填充零）"></a>2.zerofill（填充零）</h5><ul><li>位数不足，用0来填充。navicat中有一个填充0的操作就是这个意思！</li></ul><h5 id="3-自增（自动递增）"><a href="#3-自增（自动递增）" class="headerlink" title="3.自增（自动递增）"></a>3.自增（自动递增）</h5><ul><li>通常理解为自增，在上一条记录上默认加上一</li><li>一般用于设置主键，设置递增长度可以确保一次增加值的多少</li></ul><h5 id="4-非空（不是null）"><a href="#4-非空（不是null）" class="headerlink" title="4.非空（不是null）"></a>4.非空（不是null）</h5><ul><li>设置为该属性不设置值的话，就会报错；不填写默认就是null;</li></ul><h5 id="5-default-默认"><a href="#5-default-默认" class="headerlink" title="5.default(默认)"></a>5.default(默认)</h5><ul><li>如果输入该列的值，就会有默认值填入</li></ul><p><strong>每一个表都必须有下面的几个字段</strong></p><ul><li><strong>ID 就是主键，用来唯一辨识它的东西，不可以重复</strong></li><li><strong><code>version</code> 乐观锁</strong></li><li><strong>is_delete  伪删除，只是为了在查询的时候设置的一个标志位</strong></li><li><strong>gmt_create 创建时间</strong></li><li><strong>gmt_update 修改时间</strong></li></ul><h4 id="五、创建数据库表"><a href="#五、创建数据库表" class="headerlink" title="五、创建数据库表"></a>五、创建数据库表</h4><h5 id="1-创建数据库表"><a href="#1-创建数据库表" class="headerlink" title="1.创建数据库表"></a>1.创建数据库表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--格式</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">CREATE TABLE [IF not EXISTS] `表名`(</span></span><br><span class="line"><span class="comment">`字段名` 类型  [字段属性]+[字段属性]+[字段属性]...   ,</span></span><br><span class="line"><span class="comment">`字段名` 类型  [字段属性]+[字段属性]+[字段属性]...   ,</span></span><br><span class="line"><span class="comment">`字段名` 类型  [字段属性]+[字段属性]+[字段属性]...   ,</span></span><br><span class="line"><span class="comment">PRIMARY KEY(`字段名`)</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">1.前两个必须加上，后面的属性可以自由选择，但是记住所有的符号括号均是英语的</span></span><br><span class="line"><span class="comment">2.设置了默认not null，那么在写默认值的时候就不要默认设置为null；</span></span><br><span class="line"><span class="comment">3.字段名用的是tab键上的飘，comment(解释)：用的是单引号</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">not</span> <span class="keyword">EXISTS</span> <span class="string">`student`</span>( </span><br><span class="line"><span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="literal">null</span>   <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">comment</span> <span class="string">&#x27;student number&#x27;</span>,</span><br><span class="line"><span class="string">`NAME`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>  <span class="keyword">DEFAULT</span> <span class="string">&#x27;NULL&#x27;</span>,</span><br><span class="line"><span class="string">`sex`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>  <span class="keyword">DEFAULT</span> <span class="string">&#x27;Woman&#x27;</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span>(<span class="string">`id`</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure><h5 id="2-查看其他的数据库或者数据库表的创建语句"><a href="#2-查看其他的数据库或者数据库表的创建语句" class="headerlink" title="2.查看其他的数据库或者数据库表的创建语句"></a>2.查看其他的数据库或者数据库表的创建语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> show CREATE DATABASE &#96;saxon&#96;</span><br><span class="line"> show CREATE TABLE &#96;学校开始安排表&#96;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> -- 结果</span><br><span class="line"> -- 学校开始安排表:</span><br><span class="line"> CREATE TABLE &#96;学校开始安排表&#96; (</span><br><span class="line">  &#96;ID&#96; int(2) NOT NULL auto_increment ,</span><br><span class="line">  &#96;学院&#96; varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line">  &#96;考试科目&#96; varchar(255) NOT NULL,</span><br><span class="line">  &#96;班级&#96; varchar(255) NOT NULL,</span><br><span class="line">  &#96;考试人数&#96; varchar(255) NOT NULL,</span><br><span class="line">  &#96;学号字段&#96; varchar(255) NOT NULL,</span><br><span class="line">  &#96;教室&#96; varchar(255) NOT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;ID&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8</span><br><span class="line">&#x2F;*</span><br><span class="line">ENGINE&#x3D;InnoDB:数据库引擎</span><br><span class="line">CHARSET&#x3D;utf8：字符集</span><br><span class="line">auto_increment：自增列</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-两种数据库引擎（innodb和myisam）"><a href="#3-两种数据库引擎（innodb和myisam）" class="headerlink" title="3.两种数据库引擎（innodb和myisam）"></a>3.两种数据库引擎（innodb和myisam）</h5><table><thead><tr><th align="left"></th><th align="left">InnoDB</th><th align="left">MyISAM</th></tr></thead><tbody><tr><td align="left">事务的支持</td><td align="left">支持</td><td align="left">不支持</td></tr><tr><td align="left">外键</td><td align="left">支持</td><td align="left">不支持</td></tr><tr><td align="left">适用范围</td><td align="left">InnoDB适合频繁修改以及涉及到安全性较高的应用</td><td align="left">MyISAM适合查询以及插入为主的应用</td></tr><tr><td align="left">是否支持行锁</td><td align="left">支持</td><td align="left">不支持</td></tr><tr><td align="left">删除整个表</td><td align="left">一行一行删除</td><td align="left">重新建立</td></tr><tr><td align="left">查询数据</td><td align="left">不会保存行数，查找需要先知道有几行</td><td align="left">会保存行数，下次直接读出保存的行数</td></tr></tbody></table><p>1.mysql下的user的表（引擎为MyISAM）</p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200709160606057.png" alt="image-20200709160606057" style="zoom: 67%;" /><img src="C:\Users\莫松\AppData\Roaming\Typora\typora-user-images\image-20200709160648098.png" alt="image-20200709160648098" style="zoom:67%;" /><p>2.mysql下的time_zone_transition_typer的表（引擎为InnoDB）</p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200709161529559.png" alt="image-20200709161529559" style="zoom: 67%;" /><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200709161611751.png" alt="image-20200709161611751" style="zoom:67%;" /><p>==<strong>具体的细节：<a href="https://blog.csdn.net/qq_35642036/article/details/82820178">https://blog.csdn.net/qq_35642036/article/details/82820178</a></strong>==</p><h5 id="4-数据库的字符编码"><a href="#4-数据库的字符编码" class="headerlink" title="4.数据库的字符编码"></a>4.数据库的字符编码</h5><ul><li>不修改的话默认的就是lanti-,为了保证一致性，我们要在创建时就用上utf-8的字符编码</li></ul><h4 id="六、修改和删除表结构"><a href="#六、修改和删除表结构" class="headerlink" title="六、修改和删除表结构"></a>六、修改和删除表结构</h4><h5 id="1-修改表名"><a href="#1-修改表名" class="headerlink" title="1.修改表名"></a>1.修改表名</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`student`</span> <span class="keyword">RENAME</span> <span class="string">`student1`</span></span><br></pre></td></tr></table></figure><h5 id="2-增加表的字段"><a href="#2-增加表的字段" class="headerlink" title="2.增加表的字段"></a>2.增加表的字段</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">result</span> <span class="keyword">ADD</span> <span class="string">`sno`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">COMMENT</span><span class="string">&#x27;编号&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="3-修改表的字段"><a href="#3-修改表的字段" class="headerlink" title="3.修改表的字段"></a>3.修改表的字段</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`student1`</span> <span class="keyword">MODIFY</span> <span class="string">`hobby`</span> <span class="built_in">INT</span>(<span class="number">10</span>);<span class="comment">--修改表的字段数值类型，不改变字段的名字</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`student1`</span> <span class="keyword">CHANGE</span> <span class="string">`hobby`</span> lover <span class="built_in">INT</span>(<span class="number">1</span>);<span class="comment">--修改表名的同时可以改变数值类型</span></span><br></pre></td></tr></table></figure><h5 id="4-删除表及字段"><a href="#4-删除表及字段" class="headerlink" title="4.删除表及字段"></a>4.删除表及字段</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`student1`</span> <span class="keyword">DROP</span> lover<span class="comment">--删除字段</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`student1`</span> <span class="comment">--删除表格</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MYSQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之单例模式</title>
      <link href="2020/12/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
      <url>2020/12/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><p>饿汉式单例模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">LazyMan</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyMan</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> LazyMan LAZYMAN=<span class="keyword">new</span> LazyMan();</span><br><span class="line">  <span class="function"><span class="keyword">public</span> LazyMan <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> LAZYMAN;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>==盲目的没有条件的新建对象，会造成内存的浪费==</strong></p><p>懒汉式单例模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">LazyMan</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyMan</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> LazyMan LAZYMAN;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> LazyMan <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> LazyMan();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是上面的程序在多线程情况下没有安全性可言，于是有了DSL(双锁单例模式)，实际上更像是一个三🔒的模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * DCL（Double Check Lock）单例模式，简而言之就是双锁问题，用两个锁来让对象实现原子操作。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SigleTon</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SigleTon</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (SigleTon.class) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag ==<span class="keyword">true</span>) &#123;</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException (<span class="string">&quot;?????&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println (Thread.currentThread ().getName () + <span class="string">&quot;\tOK&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> SigleTon singleton;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.分配内存空间</span></span><br><span class="line"><span class="comment">     * 2.执行构造方法</span></span><br><span class="line"><span class="comment">     * 3.将空间地址复制给变量</span></span><br><span class="line"><span class="comment">     * 以上3步执行完成之后，才创建完整的一个实例。</span></span><br><span class="line"><span class="comment">     * 因此执行顺序可能会有不同，比如123就是正常，但是由于CPU，jvm具有重排指令的功能，所以可能会导致132，一旦空间分配完成，</span></span><br><span class="line"><span class="comment">     * 我们就认为一个对象的实例化完成，那么另一个进程进入的时候就会以为已经完成了对韵对象的获取，那么返回的就是一个空的对象。</span></span><br><span class="line"><span class="comment">     * 加上volatile及时的进行可见性的使用,拒绝代码的重排</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SigleTon <span class="title">getInstance</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//只有一个类就可以使用这个代码块，:在任何时候,最多允许一个线程拥有同步锁,谁拿到锁就进入代码块,其他的线程只能在外等着.</span></span><br><span class="line">            <span class="comment">//在这里，synchronized 加在这里的话，可以尽可能的减少系统开销，提高速度</span></span><br><span class="line">            <span class="keyword">synchronized</span> (SigleTon.class) &#123;<span class="comment">//第一个锁</span></span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;<span class="comment">//第二个锁，起到判定</span></span><br><span class="line">                    singleton = <span class="keyword">new</span> SigleTon ();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> singleton;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部类实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Single</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Single</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Single <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inner.SINGLE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">inner</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span>  <span class="keyword">static</span>  Single SINGLE=<span class="keyword">new</span> Single ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个也不是很安全，我们可以利用反射破坏结构；</p><p>所以使用枚举来实行单例模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JUC.Sigle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 枚举类实现单例模式是安全的，无法破坏原子性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span>  <span class="title">EnumSigle</span>  </span>&#123;</span><br><span class="line"></span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    EnumSigle () &#123;</span><br><span class="line">        System.out.println (Thread.currentThread ().getName ());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EnumSigle <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println (<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread (()-&gt; EnumSigle.getInstance ()).start ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis主从复制</title>
      <link href="2020/12/11/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
      <url>2020/12/11/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Redis的主从复制"><a href="#Redis的主从复制" class="headerlink" title="Redis的主从复制"></a>Redis的主从复制</h2><p><a href="https://www.cnblogs.com/kismetv/p/9236731.html">主从复制</a></p><blockquote><p>主从复制,读写分离! 80% 的情况下都是在进行读操作!减缓服务器的压力! 架构中经常使用! |</p></blockquote><h5 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h5><p>主从复制，是指将一台<code>Redis</code>服务器的数据，复制到其他的Redis服务器。前者称为主节点(<code>master</code>)，后者称为从节点(<code>slave</code>)；数据的复制是单向的，只能由主节点到从节点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 默认情况下,每台Redis服务器都是主节点;且-个主节点可以有多个从节点(或没有从节点) ,但一个从节点只能有一个主节点。</span><br></pre></td></tr></table></figure><h5 id="2、主从复制的作用"><a href="#2、主从复制的作用" class="headerlink" title="2、主从复制的作用"></a>2、主从复制的作用</h5><ol><li>数据冗余：主从复制实现了数据的热备份，是持久化之外的一种数据冗余方式。</li><li>故障恢复：当主节点出现问题时，可以由从节点提供服务，实现快速的故障恢复；实际上是一种服务的冗余。</li><li>负载均衡：在主从复制的基础上，配合读写分离，可以由主节点提供写服务，由从节点提供读服务（即写Redis数据时应用连接主节点，读Redis数据时应用连接从节点），分担服务器负载；尤其是在写少读多的场景下，通过多个从节点分担读负载，可以大大提高Redis服务器的并发量。</li><li>高可用基石：除了上述作用以外，主从复制还是哨兵和集群能够实施的基础，因此说主从复制是Redis高可用的基础。</li></ol><blockquote><p>一般来说 ,要将<code>Redis</code>运用于工程项目中，只使用一台<code>Redis</code>是万万不能的(宕机) 。</p></blockquote><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200515081634651.png" alt="image-20200515081634651"></p><h5 id="3、主从复制的操作"><a href="#3、主从复制的操作" class="headerlink" title="3、主从复制的操作"></a>3、主从复制的操作</h5><p><strong>配置</strong>——只配置从库,不用配置主库!</p><hr><p>查看<code>Redis</code>主从复制信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">192.168.200.40:6379&gt; INFO replication</span><br><span class="line"># Replication</span><br><span class="line">role:master#角色</span><br><span class="line">connected_slaves:0#从机数</span><br><span class="line">master_replid:d4957089f7f69cf42f77d5de4fd7d8b4270165c3</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:0</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:0</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:0</span><br><span class="line">repl_backlog_histlen:0</span><br></pre></td></tr></table></figure><blockquote><p>方便起见，实验所使用的主从节点是在一台机器上的不同<code>Redis</code>实例，其中主节点监听<code>6379</code>端口，从节点监听<code>6380</code>和<code>6381</code>端口；</p></blockquote><p>创建三个配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- redis79.conf  </span><br><span class="line">- redis80.conf  </span><br><span class="line">- redis81.conf </span><br></pre></td></tr></table></figure><p>修改配置文件（三个配置文件分别修改成对应的）</p><p>1、端口 2、pid 名字 3、log文件名字 4、dump.rdb 名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># redis81.conf </span><br><span class="line"></span><br><span class="line">port 6381</span><br><span class="line"></span><br><span class="line">pidfile &#x2F;var&#x2F;run&#x2F;redis_6381.pid</span><br><span class="line"></span><br><span class="line">logfile &quot;6381.log&quot;</span><br><span class="line"></span><br><span class="line">dbfilename dump6381.rdb</span><br></pre></td></tr></table></figure><p>启动连接<code>Redis</code></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200515084325723.png" alt="image-20200515084325723"></p><p>==一主( 79)二从(80, 81 )==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 从节点配置</span><br><span class="line">192.168.200.40:6380&gt; SLAVEOF 127.0.0.1 6379</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><blockquote><p>真实的从主配置应该在配置文件中配置, 这样的话是永久的,我们这里使用的是命令,暂时!</p></blockquote><p>配置文件配置，启动即生效。</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200515091558111.png" alt="image-20200515091558111"></p><p>测试</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200515091847813.png" alt="image-20200515091847813"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200515091916054.png" alt="image-20200515091916054"></p><p>==主机写，从机只能读==</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200515091955934.png" alt="image-20200515091955934"></p><p>复制原理</p><ul><li>Slave启动成功连接到master后会发送一个sync同步命令，Master接到命令,启动后台的存盘进程,同时收集所有接收到的用于修改数据集命令,在后台进程执行完毕之后, master将传送整个数据文件到slave ,并完成一次完全同步。</li><li>全量复制:而slave服务在接收到数据库文件数据后, 将其存盘并加载到内存中。</li><li>增量复制: Master继续将新的所有收集到的修改命令依次传给slave ,完成同步</li><li>但是只要是重新连接master , 一次完全同步(全量复制)将被自动执行!我们的数据-定可以在从机中看到! |</li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis发布订阅</title>
      <link href="2020/12/11/Redis%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/"/>
      <url>2020/12/11/Redis%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Redis发布订阅"><a href="#Redis发布订阅" class="headerlink" title="Redis发布订阅"></a>Redis发布订阅</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/pubsub1.png"></p><p>Redis 发布订阅 (pub/sub) 是一种消息通信模式：发送者 (pub) 发送消息，订阅者 (sub) 接收消息。</p><p>Redis 客户端可以订阅任意数量的频道。</p><p>下图展示了频道 channel1 ， 以及订阅这个频道的三个客户端 —— client2 、 client5 和 client1 之间的关系：</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/pubsub1.png" alt="img"></p><p>当有新消息通过 PUBLISH 命令发送给频道 channel1 时， 这个消息就会被发送给订阅它的三个客户端：</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/pubsub1.png" alt="img"></p><h3 id="Redis-发布订阅命令"><a href="#Redis-发布订阅命令" class="headerlink" title="Redis 发布订阅命令"></a>Redis 发布订阅命令</h3><p>下表列出了 redis 发布订阅常用命令：</p><table><thead><tr><th align="left">序号</th><th align="left">命令及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">[PSUBSCRIBE pattern <a href="https://www.runoob.com/redis/pub-sub-psubscribe.html">pattern …]</a> 订阅一个或多个符合给定模式的频道。</td></tr><tr><td align="left">2</td><td align="left">[PUBSUB subcommand [argument [argument …]]]( 查看订阅与发布系统状态。</td></tr><tr><td align="left">3</td><td align="left">[PUBLISH channel message] 将信息发送到指定的频道。</td></tr><tr><td align="left">4</td><td align="left">[PUNSUBSCRIBE [pattern [pattern …]]] 退订所有给定模式的频道。</td></tr><tr><td align="left">5</td><td align="left">[SUBSCRIBE channel [channel …]] 订阅给定的一个或多个频道的信息。</td></tr><tr><td align="left">6</td><td align="left">[UNSUBSCRIBE [channel [channel …]]] 指退订给定的频道。</td></tr></tbody></table><p>实例页面：</p><p><strong>订阅者</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PSUBSCRIBE saxon</span><br><span class="line">Reading messages... (press Ctrl-C to quit)</span><br><span class="line">1) <span class="string">&quot;psubscribe&quot;</span></span><br><span class="line">2) <span class="string">&quot;saxon&quot;</span></span><br><span class="line">3) (<span class="built_in">integer</span>) 1</span><br><span class="line">1) <span class="string">&quot;pmessage&quot;</span></span><br><span class="line">2) <span class="string">&quot;saxon&quot;</span></span><br><span class="line">3) <span class="string">&quot;saxon&quot;</span></span><br><span class="line">4) <span class="string">&quot;i am you father&quot;</span></span><br></pre></td></tr></table></figure><p><strong>发布者</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PUBLISH saxon <span class="string">&quot;i am you father&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><p>可以实现一些动态的聊天室等功能</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis持久化</title>
      <link href="2020/12/11/Redis%E6%8C%81%E4%B9%85%E5%8C%96/"/>
      <url>2020/12/11/Redis%E6%8C%81%E4%B9%85%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redis持久化"><a href="#redis持久化" class="headerlink" title="redis持久化"></a>redis持久化</h2><h3 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h3><p>redis是内存型数据库，如果不持久化，根据内存断电即失的特点，我们就会失去我们保存好的数据</p><p>在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的Snapshot快照，它恢复时是将快 照文件直接读到内存里。 Redis会单独创建（fork）一个子进程来进行持久化，会先将数据写入到一个临时文件中，待持久化过程 都结束了，再用这个临时文件替换上次持久化好的文件。整个过程中，主进程是不进行任何IO操作的。 这就确保了极高的性能。如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那 RDB方式要比AOF方式更加的高效。RDB的缺点是最后一次持久化后的数据可能丢失。</p><p> <strong>如何触发RDB快照</strong></p><p><strong>1、配置文件中默认的快照配置，建议多用一台机子作为备份，复制一份 dump.rdb</strong> </p><p><strong>2、命令save或者是bgsave save 时只管保存，其他不管，全部阻塞 bgsave，Redis 会在后台异步进行快照操作，快照同时还可以响应客户端请求。可以通过lastsave 命令获取最后一次成功执行快照的时间。</strong></p><p><strong>3、执行flushall命令，也会产生 dump.rdb 文件，但里面是空的，无意义 !</strong></p><p><strong>4、退出的时候也会产生 dump.rdb 文件！</strong></p><p><strong>如何恢复</strong></p><p><strong>1、将备份文件（dump.rdb）移动到redis安装目录并启动服务即可</strong> </p><p><strong>2、CONFIG GET dir 获取目录</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config get dir </span><br><span class="line"></span><br><span class="line">dir /usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure><p>**优点： **</p><p><strong>1、适合大规模的数据恢复 2、对数据完整性和一致性要求不高</strong> </p><p> **缺点： **</p><p>**1、在一定间隔时间做一次备份，所以如果redis意外down掉的话，就会丢失最后一次快照后的所有修改 **</p><p><strong>2、Fork的时候，内存中的数据被克隆了一份，大致2倍的膨胀性需要考虑。</strong></p><h3 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h3><p>以日志的形式来记录每个写操作，将Redis执行过的所有指令记录下来（读操作不记录），只许追加文件 但不可以改写文件，redis启动之初会读取该文件重新构建数据，换言之，redis重启的话就根据日志文件 的内容将写指令从前到后执行一次以完成数据的恢复工作</p><h4 id="恢复步骤"><a href="#恢复步骤" class="headerlink" title="恢复步骤"></a>恢复步骤</h4><p><strong>正常恢复：</strong> 启动：设置Yes，修改默认的appendonly no，改为yes 将有数据的aof文件复制一份保存到对应目录（config get dir） 恢复：重启redis然后重新加载</p><p> <strong>异常恢复：</strong> 启动：设置Yes 故意破坏 appendonly.aof 文件！ 修复： <strong>redis-check-aof –fix appendonly.aof</strong> 进行修复 恢复：重启 redis 然后重新加载</p><h4 id="重写机制"><a href="#重写机制" class="headerlink" title="重写机制"></a>重写机制</h4><p>AOF 采用文件追加方式，文件会越来越大，为避免出现此种情况，新增了重写机制，当AOF文件的大小 超过所设定的阈值时，Redis 就会启动AOF 文件的内容压缩，只保留可以恢复数据的最小指令集，可以 使用命令 bgrewriteaof ！ </p><p><strong>重写原理：</strong> AOF 文件持续增长而过大时，会fork出一条新进程来将文件重写（也是先写临时文件最后再 rename），遍历新进程的内存中数据，每条记录有一条的Set语句。重写aof文件的操作，并没有读取旧 的aof文件，这点和快照有点类似！ </p><p><strong>触发机制：</strong> Redis会记录上次重写时的AOF大小，默认配置是当AOF文件大小是上次rewrite后大小的已被且文件大 于64M的触发。</p><h4 id="优点和缺点"><a href="#优点和缺点" class="headerlink" title="优点和缺点"></a>优点和缺点</h4><p><strong>优点：</strong></p><p> 1、每修改同步：appendfsync always 同步持久化，每次发生数据变更会被立即记录到磁盘，性能较差 但数据完整性比较好 </p><p>2、每秒同步： appendfsync everysec 异步操作，每秒记录 ，如果一秒内宕机，有数据丢失 </p><p>3、不同步： appendfsync no 从不同步</p><p> <strong>缺点：</strong> </p><p>1、相同数据集的数据而言，aof 文件要远大于 rdb文件，恢复速度慢于 rdb。 </p><p>2、Aof 运行效率要慢于 rdb，每秒同步策略效率较好，不同步效率和rdb相同。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p> 1、RDB 持久化方式能够在指定的时间间隔内对你的数据进行快照存储 </p><p>2、AOF 持久化方式记录每次对服务器写的操作，当服务器重启的时候会重新执行这些命令来恢复原始 的数据，AOF命令以Redis 协议追加保存每次写的操作到文件末尾，Redis还能对AOF文件进行后台重 写，使得AOF文件的体积不至于过大。 </p><p>3、只做缓存，如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化 </p><p>4、同时开启两种持久化方式 在这种情况下，当redis重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF 文件保存的数据集要比RDB文件保存的数据集要完整。 RDB 的数据不实时，同时使用两者时服务器重启也只会找AOF文件，那要不要只使用AOF呢？作者 建议不要，因为RDB更适合用于备份数据库（AOF在不断变化不好备份），快速重启，而且不会有 AOF可能潜在的Bug，留着作为一个万一的手段。</p><p>5、<strong>性能建议</strong> 因为RDB文件只用作后备用途，建议只在Slave上持久化RDB文件，而且只要15分钟备份一次就够 了，只保留 save 900 1 这条规则。 如果Enable AOF ，好处是在最恶劣情况下也只会丢失不超过两秒数据，启动脚本较简单只load自 己的AOF文件就可以了，代价一是带来了持续的IO，二是AOF rewrite 的最后将 rewrite 过程中产 生的新数据写到新文件造成的阻塞几乎是不可避免的。只要硬盘许可，应该尽量减少AOF rewrite 的频率，AOF重写的基础大小默认值64M太小了，可以设到5G以上，默认超过原大小100%大小重 写可以改到适当的数值。 如果不Enable AOF ，仅靠 Master-Slave Repllcation 实现高可用性也可以，能省掉一大笔IO，也 减少了rewrite时带来的系统波动。代价是如果Master/Slave 同时倒掉，会丢失十几分钟的数据， 启动脚本也要比较两个 Master/Slave 中的 RDB文件，载入较新的那个，微博就是这种架构。</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis配置文件</title>
      <link href="2020/12/11/Redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>2020/12/11/Redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Redis-conf"><a href="#Redis-conf" class="headerlink" title="Redis.conf"></a>Redis.conf</h2><h3 id="单位"><a href="#单位" class="headerlink" title="单位"></a>单位</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Note on units: when memory size is needed, it is possible to specifiy</span></span><br><span class="line"><span class="comment"># it in the usual form of 1k 5GB 4M and so forth:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 1k =&gt; 1000 bytes</span></span><br><span class="line"><span class="comment"># 1kb =&gt; 1024 bytes</span></span><br><span class="line"><span class="comment"># 1m =&gt; 1000000 bytes</span></span><br><span class="line"><span class="comment"># 1mb =&gt; 1024*1024 bytes</span></span><br><span class="line"><span class="comment"># 1g =&gt; 1000000000 bytes</span></span><br><span class="line"><span class="comment"># 1gb =&gt; 1024*1024*1024 bytes</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># units are case insensitive so 1GB 1Gb 1gB are all the same.</span></span><br></pre></td></tr></table></figure><p>可以使用的单位，不区分大小写</p><h3 id="包含"><a href="#包含" class="headerlink" title="包含"></a>包含</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Include one or more other config files here.  This is useful if you</span></span><br><span class="line"><span class="comment"># have a standard template that goes to all Redis servers but also need</span></span><br><span class="line"><span class="comment"># to customize a few per-server settings.  Include files can include</span></span><br><span class="line"><span class="comment"># other files, so use this wisely.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note that option &quot;include&quot; won&#x27;t be rewritten by command &quot;CONFIG REWRITE&quot;</span></span><br><span class="line"><span class="comment"># from admin or Redis Sentinel. Since Redis always uses the last processed</span></span><br><span class="line"><span class="comment"># line as value of a configuration directive, you&#x27;d better put includes</span></span><br><span class="line"><span class="comment"># at the beginning of this file to avoid overwriting config change at runtime.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If instead you are interested in using includes to override configuration</span></span><br><span class="line"><span class="comment"># options, it is better to use include as the last line.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include /path/to/local.conf</span></span><br><span class="line"><span class="comment"># include /path/to/other.conf</span></span><br></pre></td></tr></table></figure><p>类似于我们的mybatis和其他的类似于jsp的include标签，目的就是把他们连在一起；</p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1 </span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br></pre></td></tr></table></figure><h3 id="通用配置"><a href="#通用配置" class="headerlink" title="通用配置"></a>通用配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">daemonize no <span class="comment">#是否是守护进程</span></span><br><span class="line">pidfile /var/run/redis_6379.pid <span class="comment">#如果是后台进程，那么就需要有这个配置文件</span></span><br></pre></td></tr></table></figure><h3 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Specify the server verbosity level.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This can be one of:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># debug (a lot of information, useful for development/testing)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># verbose (many rarely useful info, but not a mess like the debug level)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># notice (moderately verbose, what you want in production probably)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># warning (only very important / critical messages are logged)</span></span><br></pre></td></tr></table></figure><h3 id="loglevel-notice-日志的类型"><a href="#loglevel-notice-日志的类型" class="headerlink" title="loglevel notice 日志的类型"></a>loglevel notice 日志的类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Specify the log file name. Also the empty string can be used to force</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Redis to log on the standard output. Note that if you use standard</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># output for logging but daemonize, logs will be sent to /dev/null</span></span><br><span class="line"></span><br><span class="line">logfile <span class="string">&quot;&quot;</span> 日志生成的文件位置，如果是空，就默认输出</span><br><span class="line">database 16 默认的数据库数量</span><br><span class="line">always-show-logo yes 是否显示logo</span><br></pre></td></tr></table></figure><h3 id="SNAPSHOTTING-快照"><a href="#SNAPSHOTTING-快照" class="headerlink" title="SNAPSHOTTING 快照"></a>SNAPSHOTTING 快照</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">对数据进行持久化的一种策略防止数据丢失</span><br><span class="line">save 900 1 <span class="comment">#如果再900s内至少有一个key被修改，那么就保存到持久化</span></span><br><span class="line">save 300 10 <span class="comment">#如果再300s内，至少有10个key被修改，他就会进行持久化操作</span></span><br><span class="line">save 60 10000 <span class="comment">#如果再60s内，有10000个key被修改，那么就是进行持久化操作</span></span><br><span class="line"></span><br><span class="line">stop-writes-on-bgsave-error yes <span class="comment">#持久化操作失败以后，是否再继续工作</span></span><br><span class="line">rdbcompression yes <span class="comment">#是否压缩我们的rdb文件</span></span><br><span class="line">rdbchecksum yes <span class="comment">#出错时，对rdb进行校验和修复</span></span><br><span class="line">dir ./ <span class="comment">#rdb文件保存的一个目录</span></span><br></pre></td></tr></table></figure><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># requirepass foobared 密码，设置访问数据库的密码一般使用命令行进行配置</span></span><br><span class="line"></span><br><span class="line">requirepass <span class="built_in">set</span> password 设置密码</span><br><span class="line">auth password 认证</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># maxclients 10000 最大的客户端连接数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt; 配置最大的内存容量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># maxmemory-policy noeviction 内存满了的处理策略</span></span><br></pre></td></tr></table></figure><h3 id="APPEND-ONLY-MODE-aof"><a href="#APPEND-ONLY-MODE-aof" class="headerlink" title="APPEND ONLY MODE aof"></a>APPEND ONLY MODE aof</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">appendonly no 默认不开启aof 在大部分不使用，使用rdb就够用了</span><br><span class="line">appendfilename <span class="string">&quot;appendonly.aof&quot;</span> 持久化文件的名字</span><br><span class="line"></span><br><span class="line"><span class="comment"># appendfsync always 每一次修改都会同步，速度比较慢</span></span><br><span class="line"></span><br><span class="line">appendfsync everysec 每一秒执行一次同步操作，可能会丢失一秒的数据</span><br><span class="line"></span><br><span class="line"><span class="comment"># appendfsync no 不同步 不执行同步操作</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis事务和SprintBoot集成</title>
      <link href="2020/12/11/Redis%E4%BA%8B%E5%8A%A1%E5%92%8CSprintBoot%E9%9B%86%E6%88%90/"/>
      <url>2020/12/11/Redis%E4%BA%8B%E5%8A%A1%E5%92%8CSprintBoot%E9%9B%86%E6%88%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p><strong>==redis的命令保证原子性但是事务不保证原子性==</strong></p><p>Redis 事务可以一次执行多个命令， 并且带有以下三个重要的保证：</p><ul><li>批量操作在发送 EXEC 命令前被放入队列缓存（顺序性）。</li><li>收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余的命令依然被执行（一次性）。</li><li>在事务执行过程，其他客户端提交的命令请求不会插入到事务执行命令序列中（排他性）。</li></ul><p>一个事务从开始到执行会经历以下三个阶段：</p><ul><li><p><strong>开始事务(multi)</strong></p></li><li><p><strong>命令入队(其他命令)。</strong></p></li><li><p><strong>执行事务(exec)。</strong></p><p><strong>==所有的命令在事务中，并没有直接被执行！只有发起执行命令才会执行 EXEC==</strong></p></li></ul><p><img src="%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/img/image-20201119223209077.png" alt="image-20201119223209077"></p><p><strong>放弃事务，discard</strong></p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>multi</strong></td><td><strong>开启事务</strong></td></tr><tr><td><strong>exec</strong></td><td><strong>执行事务</strong></td></tr><tr><td><strong>discard</strong></td><td><strong>放弃事务</strong></td></tr></tbody></table><h4 id="异常的种类"><a href="#异常的种类" class="headerlink" title="异常的种类"></a>异常的种类</h4><ul><li><strong>编译异常，就是代码错误，没有这命令，这个事务会全部失败</strong></li><li><strong>运行时异常，语法没有错误，但是执行时出错，除了有异常的语句，其他的都可以继续执行</strong></li></ul><h4 id="redis实现乐观锁"><a href="#redis实现乐观锁" class="headerlink" title="redis实现乐观锁"></a>redis实现乐观锁</h4><p>[ WATCH key <a href="https://www.runoob.com/redis/transactions-watch.html">key …]</a> 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</p><p>类似于我们的version一样，在监视的时候就会获得当前的值，如果后面执行事务的时候，这个值被修改了，那么整个事务就会失败。如果修改失败，使用 <strong>unwatch</strong>取消监视，然后再使用watch获得最新的数据，在执行事务</p><h2 id="Jedis"><a href="#Jedis" class="headerlink" title="Jedis"></a>Jedis</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.74<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisPing</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis (<span class="string">&quot;localhost&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.select (<span class="number">2</span>);</span><br><span class="line">        System.out.println (jedis.lpop (<span class="string">&quot;set&quot;</span>));</span><br><span class="line">        System.out.println (jedis.ping ());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令完全相同</p><h2 id="redis集合springboot"><a href="#redis集合springboot" class="headerlink" title="redis集合springboot"></a>redis集合springboot</h2><p>依赖：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.redis02.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span> (<span class="string">&quot;all&quot;</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisTemplateConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span> <span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置具体的序列化方式</span></span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;String,</span><br><span class="line">                Object&gt; ();</span><br><span class="line">        template.setConnectionFactory (factory);</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span></span><br><span class="line">                Jackson2JsonRedisSerializer (Object.class);</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper ();</span><br><span class="line">        om.setVisibility (PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping (ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper (om);</span><br><span class="line">        StringRedisSerializer stringRedisSerializer = <span class="keyword">new</span></span><br><span class="line">                StringRedisSerializer ();</span><br><span class="line">        <span class="comment">// key采用String的序列化方式</span></span><br><span class="line">        template.setKeySerializer (stringRedisSerializer);</span><br><span class="line">        <span class="comment">// hash的key也采用String的序列化方式</span></span><br><span class="line">        template.setHashKeySerializer (stringRedisSerializer);</span><br><span class="line">        <span class="comment">// value序列化方式采用jackson</span></span><br><span class="line">        template.setValueSerializer (jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">// hash的value序列化方式采用jackson</span></span><br><span class="line">        template.setHashValueSerializer (jackson2JsonRedisSerializer);</span><br><span class="line">        template.afterPropertiesSet ();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这样处理后我们就可以再客户端看到正常的key和value</strong></p><p>变化之后：</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201119223209077.png" alt="image-20201121145501830"></p><p><strong>为了方便我们更好更快捷的使用再命令行里面的指令，我们进一步把方法进行封装：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.redis02.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// =============================common============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定缓存失效时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间(秒)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">expire</span> <span class="params">(String key, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.expire (key, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据key 获取过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 时间(秒) 返回0代表为永久有效</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getExpire</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire (key, TimeUnit.SECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断key是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasKey</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.hasKey (key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 可以传一个值 或多个</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span> (<span class="string">&quot;unchecked&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span> <span class="params">(String... key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (key != <span class="keyword">null</span> &amp;&amp; key.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (key.length == <span class="number">1</span>) &#123;</span><br><span class="line">                redisTemplate.delete (key[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                redisTemplate.delete (Arrays.asList(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// ============================String=============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> key == <span class="keyword">null</span> ? <span class="keyword">null</span> : redisTemplate.opsForValue ().get (key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存放入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span> <span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForValue ().set (key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存放入并设置时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒) time要大于0 如果time小于等于0 将设置无限期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false 失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span> <span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.opsForValue ().set (key, value, time,</span><br><span class="line">                        TimeUnit.SECONDS);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                set (key, value);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递增</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta 要增加几(大于0)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">incr</span> <span class="params">(String key, <span class="keyword">long</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException (<span class="string">&quot;递增因子必须大于0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue ().increment (key, delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递减</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta 要减少几(小于0)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">decr</span> <span class="params">(String key, <span class="keyword">long</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException (<span class="string">&quot;递减因子必须大于0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue ().increment (key, - delta);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// ================================Map=================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashGet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 不能为null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">hget</span> <span class="params">(String key, String item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash ().get (key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取hashKey对应的所有键值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对应的多个键值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;Object, Object&gt; <span class="title">hmget</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash ().entries (key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashSet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map 对应多个键值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span> <span class="params">(String key, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash ().putAll (key, map);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashSet 并设置时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map  对应多个键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span> <span class="params">(String key, Map&lt;String, Object&gt; map, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash ().putAll (key, map);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire (key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item  项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span> <span class="params">(String key, String item, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash ().put (key, item, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item  项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span> <span class="params">(String key, String item, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash ().put (key, item, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire (key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除hash表中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 可以使多个 不能为null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hdel</span> <span class="params">(String key, Object... item)</span> </span>&#123;</span><br><span class="line">        redisTemplate.opsForHash ().delete (key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断hash表中是否有该项的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hHasKey</span> <span class="params">(String key, String item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash ().hasKey (key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hash递增 如果不存在,就会创建一个 并把新增后的值返回</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by   要增加几(大于0)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hincr</span> <span class="params">(String key, String item, <span class="keyword">double</span> by)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash ().increment (key, item, by);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hash递减</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by   要减少记(小于0)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hdecr</span> <span class="params">(String key, String item, <span class="keyword">double</span> by)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash ().increment (key, item, - by);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// ============================set=============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据key获取Set中的所有值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">sGet</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet ().members (key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据value从一个set中查询,是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sHasKey</span> <span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet ().isMember (key, value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将数据放入set缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSet</span> <span class="params">(String key, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet ().add (key, values);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将set数据放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time   时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSetAndTime</span> <span class="params">(String key, <span class="keyword">long</span> time, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet ().add (key, values);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">                expire (key, time);</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取set缓存的长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sGetSetSize</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet ().size (key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除值为value的</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 移除的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">setRemove</span> <span class="params">(String key, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet ().remove (key, values);</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// ===============================list=================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取list缓存的内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 开始</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end   结束 0 到 -1代表所有值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">lGet</span> <span class="params">(String key, <span class="keyword">long</span> start, <span class="keyword">long</span> end)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList ().range (key, start, end);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取list缓存的长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lGetListSize</span> <span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList ().size (key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过索引 获取list中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引 index&gt;=0时， 0 表头，1 第二个元素，依次类推；index&lt;0</span></span><br><span class="line"><span class="comment">     *              时，-1，表尾，-2倒数第二个元素，依次类推</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">lGetIndex</span> <span class="params">(String key, <span class="keyword">long</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList ().index (key, index);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span> <span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList ().rightPush (key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span> <span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList ().rightPush (key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">                expire (key, time);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span> <span class="params">(String key, List&lt;Object&gt; value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList ().rightPushAll (key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span> <span class="params">(String key, List&lt;Object&gt; value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList ().rightPushAll (key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">                expire (key, time);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据索引修改list中的某条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lUpdateIndex</span> <span class="params">(String key, <span class="keyword">long</span> index, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList ().set (key, index, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除N个值为value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> count 移除多少个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 移除的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lRemove</span> <span class="params">(String key, <span class="keyword">long</span> count, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long remove = redisTemplate.opsForList ().remove (key, count,</span><br><span class="line">                    value);</span><br><span class="line">            <span class="keyword">return</span> remove;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> set = redisUtil.set (<span class="string">&quot;user&quot;</span>, <span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        System.out.println (redisUtil.get (<span class="string">&quot;user&quot;</span>));</span><br></pre></td></tr></table></figure><p>##</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis八大数据类型</title>
      <link href="2020/12/11/Redis%E5%85%AB%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>2020/12/11/Redis%E5%85%AB%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="redisd的五大数据类型"><a href="#redisd的五大数据类型" class="headerlink" title="redisd的五大数据类型"></a>redisd的五大数据类型</h2><h3 id="一、string"><a href="#一、string" class="headerlink" title="一、string"></a>一、string</h3><table><thead><tr><th><strong>命令</strong></th><th align="left"><strong>作用</strong></th></tr></thead><tbody><tr><td><strong>append</strong></td><td align="left"><strong>在字符串数据后面追加一个字符串，如果当前字符串不存在就新建</strong></td></tr><tr><td><strong>strlen</strong></td><td align="left"><strong>获得字符串的长度</strong></td></tr><tr><td><strong>incr[key]/decr[key]</strong></td><td align="left"><strong>自增/自减，如果字段不存在就新建一个，里面如果有其他字符就报错</strong></td></tr><tr><td><strong>incrby [key] [step]/decrby [key] [step]</strong></td><td align="left"><strong>自增/自减,但是具有步长</strong></td></tr><tr><td><strong>getrange [key] [start] [end]</strong></td><td align="left"><strong>截取字符串 使用开始和结束的索引，包括开始和结束，如果要读取一整个的话，就使用end=-1</strong></td></tr><tr><td><strong>setrange [key] [index] [replace]</strong></td><td align="left"><strong>从索引后面开始替换，有几个替换几个例如 123456789=》setrange name 1 xx=&gt;1xx456789</strong></td></tr><tr><td><strong>setnx [key] [value]</strong></td><td align="left"><strong>如果不存在才设置，存在就设置不了</strong></td></tr><tr><td><strong>setex [key] [time] [value]</strong></td><td align="left"><strong>设置一个值，在time秒后过期</strong></td></tr><tr><td><strong>mset [key1] [value] [key2] [value]</strong></td><td align="left"><strong>批量设置key的值</strong></td></tr><tr><td><strong>mget [key1] [key2] [key3]</strong></td><td align="left"><strong>批量获得key的值</strong></td></tr><tr><td><strong>msetnx [key1] [value] [key2] [value]</strong></td><td align="left"><strong>批量设置值，如果不存在的话才设置，不然都会失败，是一个原子性操作</strong></td></tr><tr><td><strong>mset [class] :[属性]:[属性] [value]</strong></td><td align="left">**批量设置对象的属性，实现同一个key的复用   mset user:1:name  saxon user:1:age 18 **</td></tr><tr><td><strong>getset [key] [value]</strong></td><td align="left"><strong>先得到值，在把值进行一个新的设置</strong></td></tr></tbody></table><p><strong>String的应用场景：</strong></p><ul><li>计数器</li><li>统计多单位的数量</li></ul><h3 id="二、List"><a href="#二、List" class="headerlink" title="二、List"></a>二、List</h3><p>基本命令</p><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left"><strong>Lpush [key] [value] [value]</strong></td><td align="left"><strong>在集合中里面设置值，采用堆的方法，先进的排在后面</strong></td></tr><tr><td align="left"><strong>Lrange [key] [start] [end]</strong></td><td align="left"><strong>获得指定集合，start与end之间的元素，包括末尾元素</strong></td></tr><tr><td align="left"><strong>Rpush [key] [value] [value]</strong></td><td align="left"><strong>从右边插入值，关于右边和左边的区别在后面解释</strong></td></tr><tr><td align="left"><strong>Lpop/Rpop [key]</strong></td><td align="left"><strong>从左边或者右边弹出第一个属性值</strong></td></tr><tr><td align="left"><strong>Lindex [key] [index]</strong></td><td align="left"><strong>获得位于index处的元素值</strong></td></tr><tr><td align="left"><strong>Llen [key]</strong></td><td align="left"><strong>获得key的list长度</strong></td></tr><tr><td align="left"><strong>Lrem [key] [count] [value]</strong></td><td align="left"><strong>移除key里面的count个value</strong></td></tr><tr><td align="left"><strong>Ltrim [key] [start] [end]</strong></td><td align="left"><strong>只留下start与end里面的值，包括头（start）和尾（end）所在的地方</strong></td></tr><tr><td align="left"><strong>RpopLpush [source] [other]</strong></td><td align="left"><strong>先把源里面的第一个元素（队首）弹出到另一个队列的队尾</strong></td></tr><tr><td align="left"><strong>Lset  [key] [index] [value]</strong></td><td align="left"><strong>修改index位置上的元素，如果不存在list或者index超出范围就会报错</strong></td></tr><tr><td align="left"><strong>Linsert [key] after|before [value] [new value]</strong></td><td align="left"><strong>在key里面指定的value的后面或者前面插入想要插入的值</strong></td></tr></tbody></table><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201117230607607.png" alt="image-20201117230607607"></p><h3 id="三、set"><a href="#三、set" class="headerlink" title="三、set"></a>三、set</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>Sadd [key] [value] [value] vaule[]</strong></td><td><strong>向set里面添加一个元素，添加重复的会失败</strong></td></tr><tr><td><strong>sismember [key]  [value]</strong></td><td><strong>set集合里面是否存在value</strong></td></tr><tr><td><strong>Scard [key]</strong></td><td><strong>获得集合里面元素的个数</strong></td></tr><tr><td><strong>Srem [key] [value] [value]</strong></td><td><strong>批量移除集合里面的元素</strong></td></tr><tr><td><strong>Smembers [key]</strong></td><td><strong>获得集合里面的所有元素</strong></td></tr><tr><td><strong>Srandmember [key] [count]</strong></td><td><strong>从集合key里面随机选择出[count]个元素 默认是抽取一个元素</strong></td></tr><tr><td><strong>Smove [key] [other key] [value]</strong></td><td><strong>把一个元素移动到另一个集合里面</strong></td></tr><tr><td><strong>Sdiff [key1] [key2] [key3]</strong></td><td><strong>第一个集合里面与其他集合不同的元素</strong></td></tr><tr><td><strong>Sinter [key] [key]</strong></td><td><strong>查询集合之间的共同元素</strong></td></tr><tr><td><strong>Sunion [key] [key] [key]</strong></td><td><strong>求出集合里面的所有元素；</strong></td></tr></tbody></table><p><strong>集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)</strong><br><strong>使用场景：</strong></p><p>1**.共同好友、二度好友** </p><p><strong>2.利用唯一性，可以统计访问网站的所有独立 IP</strong></p><p> <strong>3.好友推荐的时候，根据 tag 求交集，大于某个 threshold 就可以推荐</strong></p><h3 id="四、Hash（map）"><a href="#四、Hash（map）" class="headerlink" title="四、Hash（map）"></a>四、Hash（map）</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>Hset [key] [field] [value]</strong></td><td><strong>向集合里面添加map，添加一个问field的属性</strong></td></tr><tr><td><strong>hget [key] [field]</strong></td><td><strong>获得集合里面具体的属性值</strong></td></tr><tr><td><strong>Hmset [key] [field1] [value1] [field2] [value2]</strong></td><td><strong>批量添加属性和值,没有属性就添加，有就覆盖</strong></td></tr><tr><td><strong>Hmget [key] [field] [field] [field]</strong></td><td><strong>批量获得属性值</strong></td></tr><tr><td><strong>Hgetall [key]</strong></td><td><strong>获得全部的键值对</strong></td></tr><tr><td><strong>Hdel [key] [field] [field]</strong></td><td><strong>删除多个属性值，删除多个键值对</strong></td></tr><tr><td><strong>Hlen [key]</strong></td><td><strong>获得长度</strong></td></tr><tr><td><strong>Hexists [key] [field]</strong></td><td><strong>判断是否有某一个元素</strong></td></tr><tr><td><strong>Hkeys [key]</strong></td><td><strong>获得map所有的key</strong></td></tr><tr><td><strong>Hvals  [key]</strong></td><td><strong>获得map里面所有的field</strong></td></tr><tr><td><strong>Hincrby [key] [field] [stepment]</strong></td><td><strong>属性自增有步长默认是一</strong></td></tr></tbody></table><p><strong>更加适合于对象的存储</strong></p><h3 id="五、Zset-有序集合"><a href="#五、Zset-有序集合" class="headerlink" title="五、Zset(有序集合)"></a>五、Zset(有序集合)</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>zadd [key] [index] [value] [index] [value]</strong></td><td><strong>通过序号和值来添加集合</strong></td></tr><tr><td><strong>Zrange [key] [start] [end]</strong></td><td><strong>获得指定区间的元素</strong></td></tr><tr><td><strong>Zrangebyscore [key] [min] [max] [withscores]</strong></td><td><strong>排序通过score，在区间之间,最后一个属性可以添加也可以不添加，添加就会在输出的时候加上score</strong></td></tr><tr><td><strong>Zrevrange [key] [start] [end]</strong></td><td><strong>由大到小排序元素</strong></td></tr><tr><td><strong>Zcard [key]</strong></td><td><strong>获得元素的个数</strong></td></tr><tr><td><strong>Zcount [key] [start] [end]</strong></td><td><strong>获得区间里面的元素个数</strong></td></tr></tbody></table><h2 id="三大特殊数据类型"><a href="#三大特殊数据类型" class="headerlink" title="三大特殊数据类型"></a>三大特殊数据类型</h2><h3 id="一、geospatial-地理位置"><a href="#一、geospatial-地理位置" class="headerlink" title="一、geospatial 地理位置"></a>一、geospatial 地理位置</h3><h4 id="1、geoadd添加一个地理位置，可以添加多个"><a href="#1、geoadd添加一个地理位置，可以添加多个" class="headerlink" title="1、geoadd添加一个地理位置，可以添加多个"></a>1、geoadd添加一个地理位置，可以添加多个</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">geoadd china:city  103.82 25.60  qujing</span><br><span class="line">geoadd [key] [经度] [纬度] [cityname]</span><br></pre></td></tr></table></figure><p><strong>位置是经度和纬度</strong></p><h4 id="2-geopos-key-city-获得地理位置的经纬度"><a href="#2-geopos-key-city-获得地理位置的经纬度" class="headerlink" title="2.geopos [key] [city] 获得地理位置的经纬度"></a>2.geopos [key] [city] 获得地理位置的经纬度</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">geopos china:city qujing</span><br><span class="line">geopos [key] [cityname]</span><br></pre></td></tr></table></figure><h4 id="3-geodist获得两个地理位置之间的直线距离"><a href="#3-geodist获得两个地理位置之间的直线距离" class="headerlink" title="3.geodist获得两个地理位置之间的直线距离"></a>3.geodist获得两个地理位置之间的直线距离</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">geodist china:city qujing kunming km</span><br><span class="line">geodist [key] [city1] [city2] [单位]</span><br><span class="line">结果：<span class="string">&quot;128.5878&quot;</span></span><br></pre></td></tr></table></figure><p>最后一个地方填写的是单位</p><h4 id="4-georadius-获得给定坐标范围距离内的城市"><a href="#4-georadius-获得给定坐标范围距离内的城市" class="headerlink" title="4.georadius 获得给定坐标范围距离内的城市"></a>4.georadius 获得给定坐标范围距离内的城市</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">georadius china:city 102 25 1000 km count [number]</span><br><span class="line">georadius [key] [location] [范围] [单位] count [显示几个结果]</span><br></pre></td></tr></table></figure><h4 id="5-georadiusbymember-使用元素作为中心"><a href="#5-georadiusbymember-使用元素作为中心" class="headerlink" title="5.georadiusbymember 使用元素作为中心"></a>5.georadiusbymember 使用元素作为中心</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">georadiusbymember china:city qujing 100 km</span><br><span class="line">georadiusbymember [key] [member] [距离] [单位]</span><br></pre></td></tr></table></figure><p><strong>包括中心</strong></p><p><strong>由于这个其实是一个Zset集合所以我们可以使用srem来移除我们存在数据库里面的地理位置信息</strong></p><h3 id="二、hyperloglog"><a href="#二、hyperloglog" class="headerlink" title="二、hyperloglog"></a>二、hyperloglog</h3><p>Redis 在 2.8.9 版本添加了 HyperLogLog 结构。 Redis HyperLogLog 是用来做基数统计的算法，</p><p>HyperLogLog 的优点是，在输入元素的数量或者体积 非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。</p><p>在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。 HyperLogLog则是一种算法，它提供了不精确的去重计数方案。 </p><p>举个栗子：假如我要统计网页的UV（浏览用户数量，一天内同一个用户多次访问只能算一次），传统的 解决方案是使用Set来保存用户id，然后统计Set中的元素数量来获取页面UV。但这种方案只能承载少量 用户，一旦用户数量大起来就需要消耗大量的空间来存储用户id。我的目的是统计用户数量而不是保存 用户，这简直是个吃力不讨好的方案！而使用Redis的HyperLogLog最多需要12k就可以统计大量的用户 数，尽管它大概有0.81%的错误率，但对于统计UV这种不需要很精确的数据是可以忽略不计的。 什么是基数？ 比如数据集 {1, 3, 5, 7, 5, 7, 8}， 那么这个数据集的基数集为 {1, 3, 5 ,7, 8}, 基数(不重复元素)为5。 基数估计就是在误差可接受的范围内，快速计算基数。</p><table><thead><tr><th><strong>命令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td><strong>pfadd  [key] [value] [value]</strong></td><td><strong>向集合里面添加元素</strong></td></tr><tr><td><strong>pfcount  [key]</strong></td><td><strong>统计集合里面的元素</strong></td></tr><tr><td><strong>pfmerge [source] [key] [key]</strong></td><td><strong>将两个集合的统计结果并到一个新的集合里面去，计算基数</strong></td></tr></tbody></table><p><strong>一般使用来进行人流量的统计</strong></p><h3 id="三、bitmaps"><a href="#三、bitmaps" class="headerlink" title="三、bitmaps"></a>三、bitmaps</h3><p><strong>在开发中，可能会遇到这种情况：需要统计用户的某些信息，如活跃或不活跃，登录或者不登录；又如 需要记录用户一年的打卡情况，打卡了是1， 没有打卡是0，如果使用普通的 key/value存储，则要记录 365条记录，如果用户量很大，需要的空间也会很大，所以 Redis 提供了 Bitmap 位图这中数据结构， Bitmap 就是通过操作二进制位来进行记录，即为 0 和 1；如果要记录 365 天的打卡情况，使用 Bitmap 表示的形式大概如下：0101000111000111………………………，这样有什么好处呢？当然就是节约内存 了，365 天相当于 365 bit，又 1 字节 = 8 bit , 所以相当于使用 46 个字节即可。</strong></p><p><strong>BitMap 就是通过一个 bit 位来表示某个元素对应的值或者状态, 其中的 key 就是对应元素本身，实际上 底层也是通过对字符串的操作来实现。Redis 从 2.2 版本之后新增了setbit, getbit, bitcount 等几个 bitmap 相关命令。</strong></p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>setbit [key] [field] [value]</strong></td><td><strong>给一个元素设置属性，只可以设置0和1</strong></td></tr><tr><td><strong>getbit [key]</strong></td><td><strong>可以获得存在里面的元素值</strong></td></tr><tr><td><strong>bitcount [key]</strong></td><td><strong>统计里面值为1的个数</strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis基本介绍</title>
      <link href="2020/12/11/Redis%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/"/>
      <url>2020/12/11/Redis%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、为啥要使用NoSQL"><a href="#一、为啥要使用NoSQL" class="headerlink" title="一、为啥要使用NoSQL"></a>一、为啥要使用NoSQL</h2><p>在90年代，一个网站的访问量一般不大，使用单个的数据库完全可以轻松应对，在那个时候，更多的是静态网页，动态交互的网站其实不多。</p><h3 id="1-单机sql"><a href="#1-单机sql" class="headerlink" title="1.单机sql"></a>1.单机sql</h3><p>上述架构下，我们来看一下数据存储的瓶颈是什么；</p><ol><li>数据量的总大小，一个机器放不下时</li><li>数据的索引，一个机器的内存放不下时</li><li>访问量，一个实例不能承受</li></ol><h3 id="2-memcache-mysql-垂直分布"><a href="#2-memcache-mysql-垂直分布" class="headerlink" title="2.memcache+mysql+垂直分布"></a>2.memcache+mysql+垂直分布</h3><p>后来，随着访问量的上升，几乎大部分使用MySQL架构的网站在数据库上都开始出现了性能问题，web 程序不再仅仅专注在功能上，同时也在追求性能。程序猿们开始大量使用缓存技术来缓解数据库的压 力，优化数据库的结构和索引，开始比较流行的是通过文件缓存来缓解数据库压力，但是当访问量继续 增大的时候，多台web机器通过文件缓存不能共享，大量的小文件缓存也带了比较高的IO压力，在这个 时候，Memcached就自然的成为一个非常时尚的技术产品。</p><h3 id="3-MySQL主从读写分离"><a href="#3-MySQL主从读写分离" class="headerlink" title="3.MySQL主从读写分离"></a>3.MySQL主从读写分离</h3><p>由于数据库的写入压力增加，Memcached只能缓解数据库的读取压力，读写集中在一个数据库上让数 据库不堪重负，大部分网站开始使用主从复制技术来达到读写分离，以提高读写性能和读库的可扩展 性，MySQL的master-slave模式成为这个时候的网站标配了</p><h3 id="4-分表分库-水平拆分-MySQL集群"><a href="#4-分表分库-水平拆分-MySQL集群" class="headerlink" title="4.分表分库+水平拆分+MySQL集群"></a>4.分表分库+水平拆分+MySQL集群</h3><p>在Memcached的高速缓存，MySQL的主从复制，读写分离的基础之上，这时MySQL主库的写压力开始 出现瓶颈，而数据量的持续猛增，由于MyISAM使用表锁，在高并发下会出现严重的锁问题，大量的高 并发MySQL应用开始使用InnoDB引擎代替MyISAM。 同时，开始流行使用分表分库来缓解写压力和数据增长的扩展问题，这个时候，分表分库成了一个热门 技术，是面试的热门问题，也是业界讨论的热门技术问题。也就是在这个时候，MySQL推出了还不太稳 定的表分区，这也给技术实力一般的公司带来了希望。虽然MySQL推出了MySQL Cluster集群，但性能 也不能很好满足互联网的需求，只是在高可靠性上提供了非常大的保证。</p><h3 id="5-MySQL的扩展性瓶颈"><a href="#5-MySQL的扩展性瓶颈" class="headerlink" title="5.MySQL的扩展性瓶颈"></a>5.MySQL的扩展性瓶颈</h3><p>MySQL数据库也经常存储一些大文本的字段，导致数据库表非常的大，在做数据库恢复的时候就导致非 常的慢，不容易快速恢复数据库，比如1000万4KB大小的文本就接近40GB的大小，如果能把这些数据 从MySQL省去，MySQL将变的非常的小，关系数据库很强大，但是它并不能很好的应付所有的应用场 景，MySQL的扩展性差（需要复杂的技术来实现），大数据下IO压力大，表结构更改困难，正是当前使 用MySQL的开发人员面临的问题。</p><h2 id="二、Redis入门"><a href="#二、Redis入门" class="headerlink" title="二、Redis入门"></a>二、Redis入门</h2><h3 id="一、Redis为什么这么快？"><a href="#一、Redis为什么这么快？" class="headerlink" title="一、Redis为什么这么快？"></a>一、Redis为什么这么快？</h3><p> 1）以前一直有个误区，以为：高性能服务器 一定是多线程来实现的 原因很简单因为误区二导致的：多线程 一定比 单线程 效率高，其实不然！ 在说这个事前希望大家都能对 CPU 、 内存 、 硬盘的速度都有了解了！</p><p>2）redis 核心就是 如果我的数据全都在内存里，我单线程的去操作 就是效率最高的，为什么呢，因为 多线程的本质就是 CPU 模拟出来多个线程的情况，这种模拟出来的情况就有一个代价，就是上下文的切 换，对于一个内存的系统来说，它没有上下文的切换就是效率最高的。redis 用 单个CPU 绑定一块内存 的数据，然后针对这块内存的数据进行多次读写的时候，都是在一个CPU上完成的，所以它是单线程处 理这个事。在内存的情况下，这个方案就是最佳方案。 因为一次CPU上下文的切换大概在 1500ns 左右。从内存中读取 1MB 的连续数据，耗时大约为 250us， 假设1MB的数据由多个线程读取了1000次，那么就有1000次时间上下文的切换，那么就有1500ns * 1000 = 1500us ，我单线程的读完1MB数据才250us ,你光时间上下文的切换就用了1500us了，我还不 算你每次读一点数据 的时间。</p><h3 id="二、redis的key"><a href="#二、redis的key" class="headerlink" title="二、redis的key"></a>二、redis的key</h3><h4 id="一、一些基本的命令："><a href="#一、一些基本的命令：" class="headerlink" title="一、一些基本的命令："></a>一、一些基本的命令：</h4><p><strong>性能测试：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ redis-benchmark -n 10000  -q</span><br><span class="line"></span><br><span class="line">PING_INLINE: 141043.72 requests per second</span><br><span class="line">PING_BULK: 142857.14 requests per second</span><br><span class="line">SET: 141442.72 requests per second</span><br><span class="line">GET: 145348.83 requests per second</span><br><span class="line">INCR: 137362.64 requests per second</span><br><span class="line">LPUSH: 145348.83 requests per second</span><br><span class="line">LPOP: 146198.83 requests per second</span><br><span class="line">SADD: 146198.83 requests per second</span><br><span class="line">SPOP: 149253.73 requests per second</span><br><span class="line">LPUSH (needed to benchmark LRANGE): 148588.42 requests per second</span><br><span class="line">LRANGE_100 (first 100 elements): 58411.21 requests per second</span><br><span class="line">LRANGE_300 (first 300 elements): 21195.42 requests per second</span><br><span class="line">LRANGE_500 (first 450 elements): 14539.11 requests per second</span><br><span class="line">LRANGE_600 (first 600 elements): 10504.20 requests per second</span><br><span class="line">MSET (10 keys): 93283.58 requests per second</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>1</td><td><strong>-h</strong></td><td>指定服务器主机名</td><td>127.0.0.1</td></tr><tr><td>2</td><td><strong>-p</strong></td><td>指定服务器端口</td><td>6379</td></tr><tr><td>3</td><td><strong>-s</strong></td><td>指定服务器 socket</td><td></td></tr><tr><td>4</td><td><strong>-c</strong></td><td>指定并发连接数</td><td>50</td></tr><tr><td>5</td><td><strong>-n</strong></td><td>指定请求数</td><td>10000</td></tr><tr><td>6</td><td><strong>-d</strong></td><td>以字节的形式指定 SET/GET 值的数据大小</td><td>2</td></tr><tr><td>7</td><td><strong>-k</strong></td><td>1=keep alive 0=reconnect</td><td>1</td></tr><tr><td>8</td><td><strong>-r</strong></td><td>SET/GET/INCR 使用随机 key, SADD 使用随机值</td><td></td></tr><tr><td>9</td><td><strong>-P</strong></td><td>通过管道传输 <numreq> 请求</td><td>1</td></tr><tr><td>10</td><td><strong>-q</strong></td><td>强制退出 redis。仅显示 query/sec 值</td><td></td></tr><tr><td>11</td><td><strong>–csv</strong></td><td>以 CSV 格式输出</td><td></td></tr><tr><td>12</td><td><strong>-l</strong></td><td>生成循环，永久执行测试</td><td></td></tr><tr><td>13</td><td><strong>-t</strong></td><td>仅运行以逗号分隔的测试命令列表。</td><td></td></tr><tr><td>14</td><td><strong>-I</strong></td><td>Idle 模式。仅打开 N 个 idle 连接并等待。</td><td></td></tr></tbody></table><h4 id="二、一些基本的命令"><a href="#二、一些基本的命令" class="headerlink" title="二、一些基本的命令"></a>二、一些基本的命令</h4><ul><li><strong>set；设置数据，键值对</strong></li><li><strong>get [key] 获得对应的数据key-value</strong></li><li><strong>select [num] 选择数据库</strong></li><li><strong>flushdb清除当前的数据库</strong></li><li><strong>flushall 消除全部数据</strong></li><li><strong>dbsize获得数据库的大小</strong></li><li><strong>Linux使用redis的步骤:1. redis-server redis.conf:启动服务2.redis-cli 启动客户端</strong></li><li><strong>EXISTS [key] 查询某一个键是否存在</strong></li><li><strong>move [key] [数据库]  移除当前数据库的字段到另一个数据里面</strong></li><li>**expire [key]  [seconds] 设置字段的过期时间 **</li><li><strong>ttl[key]  获得距离过期的时间</strong></li><li><strong>del [key] 删除key</strong></li><li><strong>type [key ] 查看数据的类型</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose集群搭建</title>
      <link href="2020/12/11/DockerCompose%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>2020/12/11/DockerCompose%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><p>简介：</p><p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。一键配置所有的服务，启动所有服务；</p><p>使用步骤：</p><p>第一步、下载Docker Compose</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>第二步、更改文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>第三步、按照官网准备文件</p><ol><li><p><strong>Create a directory for the project:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir composetest</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> composetest</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Create a file called <code>app.py</code> in your project directory and paste this in:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">cache = redis.Redis(host=<span class="string">&#x27;redis&#x27;</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hit_count</span>():</span></span><br><span class="line">    retries = <span class="number">5</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> cache.incr(<span class="string">&#x27;hits&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> redis.exceptions.ConnectionError <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="keyword">if</span> retries == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">raise</span> exc</span><br><span class="line">            retries -= <span class="number">1</span></span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line">    count = get_hit_count()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World! I have been seen &#123;&#125; times.\n&#x27;</span>.<span class="built_in">format</span>(count)</span><br></pre></td></tr></table></figure><p>In this example, <code>redis</code> is the hostname of the redis container on the application’s network. We use the default port for Redis, <code>6379</code>.</p><blockquote><p>Handling transient errors</p><p>Note the way the <code>get_hit_count</code> function is written. This basic retry loop lets us attempt our request multiple times if the redis service is not available. This is useful at startup while the application comes online, but also makes our application more resilient if the Redis service needs to be restarted anytime during the app’s lifetime. In a cluster, this also helps handling momentary connection drops between nodes.</p></blockquote></li><li><p>Create another file called <code>requirements.txt</code> in your project directory and paste this in:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flask</span><br><span class="line">redis</span><br></pre></td></tr></table></figure></li></ol><p><strong>Step 2: Create a Dockerfile</strong></p><p>In this step, you write a Dockerfile that builds a Docker image. The image contains all the dependencies the Python application requires, including Python itself.</p><p>In your project directory, create a file named <code>Dockerfile</code> and paste the following:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.7</span>-alpine</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /code</span></span><br><span class="line"><span class="keyword">ENV</span> FLASK_APP=app.py</span><br><span class="line"><span class="keyword">ENV</span> FLASK_RUN_HOST=<span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk add --no-cache gcc musl-dev linux-headers</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> requirements.txt requirements.txt</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install -r requirements.txt</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">5000</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . .</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;flask&quot;</span>, <span class="string">&quot;run&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>This tells Docker to:</p><ul><li>Build an image starting with the Python 3.7 image.</li><li>Set the working directory to <code>/code</code>.</li><li>Set environment variables used by the <code>flask</code> command.</li><li>Install gcc and other dependencies</li><li>Copy <code>requirements.txt</code> and install the Python dependencies.</li><li>Add metadata to the image to describe that the container is listening on port 5000</li><li>Copy the current directory <code>.</code> in the project to the workdir <code>.</code> in the image.</li><li>Set the default command for the container to <code>flask run</code>.</li></ul><p>For more information on how to write Dockerfiles, see the <a href="https://docs.docker.com/develop/">Docker user guide</a> and the <a href="https://docs.docker.com/engine/reference/builder/">Dockerfile reference</a>.</p><p> <strong>Step 3: Define services in a Compose file</strong></p><p>Create a file called <code>docker-compose.yml</code> in your project directory and paste the following:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5000:5000&quot;</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:alpine&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker网络</title>
      <link href="2020/12/11/Docker%E7%BD%91%E7%BB%9C/"/>
      <url>2020/12/11/Docker%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Docker网络"><a href="#Docker网络" class="headerlink" title="Docker网络"></a>Docker网络</h2><h3 id="Docker0-Docker-容器间互通"><a href="#Docker0-Docker-容器间互通" class="headerlink" title="Docker0 Docker 容器间互通"></a>Docker0 Docker 容器间互通</h3><p>Docker使用Linux桥接（参考<a href="https://www.jianshu.com/p/f86d4b88777d">《Linux虚拟网络技术》</a>），在宿主机虚拟一个Docker容器网桥(docker0)，Docker启动一个容器时会根据Docker网桥的网段分配给容器一个IP地址，称为Container-IP，同时Docker网桥是每个容器的默认网关。因为在同一宿主机内的容器都接入同一个网桥，这样容器之间就能够通过容器的Container-IP直接通信。</p><p>Docker网桥是宿主机虚拟出来的，并不是真实存在的网络设备，外部网络是无法寻址到的，这也意味着外部网络无法通过直接Container-IP访问到容器。如果容器希望外部访问能够访问到，可以通过映射容器端口到宿主主机（端口映射），即docker run创建容器时候通过 -p 或 -P 参数来启用，访问容器的时候就通过[宿主机IP]:[容器端口]访问容器。</p><p>我们在容器内部创建的服务，网络可以互相访问，类似于局域网；</p><p>测试：</p><p><strong>使用tomcat01—-&gt;ping tomcat02</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec tomcat01 ping tomcat02</span><br><span class="line">PING tomcat02 (172.17.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from tomcat02 (172.17.0.2): icmp_seq=1 ttl=64 time=0.107 ms</span><br><span class="line">64 bytes from tomcat02 (172.17.0.2): icmp_seq=2 ttl=64 time=0.096 ms</span><br><span class="line">64 bytes from tomcat02 (172.17.0.2): icmp_seq=3 ttl=64 time=0.094 ms</span><br><span class="line">^C</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec tomcat01 ping 172.17.0.2</span><br><span class="line">PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.100 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.108 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.099 ms</span><br><span class="line">^C</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec tomcat01 ping 172.17.0.3</span><br><span class="line">PING 172.17.0.3 (172.17.0.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=1 ttl=64 time=0.027 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=2 ttl=64 time=0.039 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=3 ttl=64 time=0.038 ms</span><br><span class="line">^C</span><br></pre></td></tr></table></figure><p><strong>使用tomcat2—-&gt;ping tomcat1</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec tomcat02 ping 172.17.0.2</span><br><span class="line">PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.028 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.033 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.041 ms</span><br><span class="line">^C</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec tomcat02 ping 172.17.0.3</span><br><span class="line">PING 172.17.0.3 (172.17.0.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=1 ttl=64 time=0.122 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=2 ttl=64 time=0.114 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=3 ttl=64 time=0.068 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=4 ttl=64 time=0.065 ms</span><br><span class="line">^C</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们可以知道，这两个是通的；但是我们不可以使用容器名ping，所以我们需要使用 <strong>–link</strong>来实现我们的使用容器名字来ping</p><h3 id="–link"><a href="#–link" class="headerlink" title="–link"></a>–link</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it --name tomcat01 --link tomcat02 tomcat</span><br></pre></td></tr></table></figure><p>在启动的时候，我们就指定我们要链接的模式，实现二者的互通；</p><p><strong>原理：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec -it  tomcat01 /bin/bash</span><br><span class="line">root@1754afecd1bc:/usr/local/tomcat# lll</span><br><span class="line">bash: lll: command not found</span><br><span class="line">root@1754afecd1bc:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt LICENSE  README.md RUNNING.txt  conf  logs    temp     webapps.dist</span><br><span class="line">CONTRIBUTING.md  NOTICE   RELEASE-NOTES  bin      lib   native-jni-lib  webapps  work</span><br><span class="line">root@1754afecd1bc:/usr/local/tomcat# cd </span><br><span class="line">root@1754afecd1bc:~# cd ..</span><br><span class="line">root@1754afecd1bc:/# cd etc</span><br><span class="line">root@1754afecd1bc:/etc# cat hosts</span><br><span class="line">127.0.0.1localhost</span><br><span class="line">::1localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0ip6-localnet</span><br><span class="line">ff00::0ip6-mcastprefix</span><br><span class="line">ff02::1ip6-allnodes</span><br><span class="line">ff02::2ip6-allrouters</span><br><span class="line">172.17.0.2tomcat02 7c064e4efced</span><br><span class="line">172.17.0.31754afecd1bc</span><br><span class="line">root@1754afecd1bc:/etc# </span><br></pre></td></tr></table></figure><p><strong>就是类似于我们修改windows下面的etc/host一样，当我们使用名字ping的时候，他会自动转到我们的ip地址；</strong></p><p><strong>–link早都过时了，我们不推荐使用！我们可以使用自定义网络的方式</strong></p><h3 id="自定义网络"><a href="#自定义网络" class="headerlink" title="自定义网络"></a>自定义网络</h3><p>我们先查看我们刚刚部署的网络：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker network ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">792301ca29a4        bridge              bridge              local</span><br><span class="line">ab45058093b3        host                host                local</span><br><span class="line">30427e45134c        none                null                local</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker network inspect 792301ca29a4</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Name&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;792301ca29a4b692a35d56dd094e39641569fd9eb45272e8dc1e9d0ea387617d&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2020-11-30T21:53:10.295778567+08:00&quot;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;EnableIPv6&quot;: false,</span><br><span class="line">        &quot;IPAM&quot;: &#123;</span><br><span class="line">            &quot;Driver&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;Options&quot;: null,</span><br><span class="line">            &quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;172.17.0.0/16&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Internal&quot;: false,</span><br><span class="line">        &quot;Attachable&quot;: false,</span><br><span class="line">        &quot;Ingress&quot;: false,</span><br><span class="line">        &quot;ConfigFrom&quot;: &#123;</span><br><span class="line">            &quot;Network&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ConfigOnly&quot;: false,</span><br><span class="line">        &quot;Containers&quot;: &#123;</span><br><span class="line">            &quot;1754afecd1bc8ca03257a622dc25bdb8cb52de8b10fc4f1aa39206ff809d97f4&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;tomcat01&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;a7738d2aee7d6c32be2959621bbb773d8b06356acdd2030ded082e5c3a8a4b1b&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:ac:11:00:03&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;172.17.0.3/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;7c064e4efced691f955fa9c4a2bfbd24bdc69212e572b5f228020f565ada7948&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;tomcat02&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;601b92a9d09b78e65eb1551bd3d3b7ff8d0689c81e16dc0cdd1eb35bda0bb6a0&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;172.17.0.2/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Options&quot;: &#123;</span><br><span class="line">            &quot;com.docker.network.bridge.default_bridge&quot;: &quot;true&quot;,</span><br><span class="line">            &quot;com.docker.network.bridge.enable_icc&quot;: &quot;true&quot;,</span><br><span class="line">            &quot;com.docker.network.bridge.enable_ip_masquerade&quot;: &quot;true&quot;,</span><br><span class="line">            &quot;com.docker.network.bridge.host_binding_ipv4&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">            &quot;com.docker.network.bridge.name&quot;: &quot;docker0&quot;,</span><br><span class="line">            &quot;com.docker.network.driver.mtu&quot;: &quot;1500&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>网络配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;172.17.0.0&#x2F;16&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>容器的网络连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&quot;Containers&quot;: &#123;</span><br><span class="line">           &quot;1754afecd1bc8ca03257a622dc25bdb8cb52de8b10fc4f1aa39206ff809d97f4&quot;: &#123;</span><br><span class="line">               &quot;Name&quot;: &quot;tomcat01&quot;,</span><br><span class="line">               &quot;EndpointID&quot;: &quot;a7738d2aee7d6c32be2959621bbb773d8b06356acdd2030ded082e5c3a8a4b1b&quot;,</span><br><span class="line">               &quot;MacAddress&quot;: &quot;02:42:ac:11:00:03&quot;,</span><br><span class="line">               &quot;IPv4Address&quot;: &quot;172.17.0.3/16&quot;,</span><br><span class="line">               &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">           &#125;,</span><br><span class="line">           &quot;7c064e4efced691f955fa9c4a2bfbd24bdc69212e572b5f228020f565ada7948&quot;: &#123;</span><br><span class="line">               &quot;Name&quot;: &quot;tomcat02&quot;,</span><br><span class="line">               &quot;EndpointID&quot;: &quot;601b92a9d09b78e65eb1551bd3d3b7ff8d0689c81e16dc0cdd1eb35bda0bb6a0&quot;,</span><br><span class="line">               &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">               &quot;IPv4Address&quot;: &quot;172.17.0.2/16&quot;,</span><br><span class="line">               &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>发现在这个网络下面有一个名为tomcat01和tomcat02的容器的网络的IP地址；所以，我们要自己创建一个网络的话，如果在后面的container里面显示了我们的网络，子网，我们就部署成功；</p><p>第一步，先创建一个属于自己的网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create --driver bridge --subnet 192.168.0.0/16 --gateway 192.168.0.1 mynet</span><br></pre></td></tr></table></figure><p>第二步、启动容器服务时使用 –net +网络名绑定网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it --net saxon --name tomcat01 tomcat</span><br><span class="line">docker run -d -it --net saxon --name tomcat02 tomcat</span><br></pre></td></tr></table></figure><p>第三步查看网络状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ docker]# docker network inspect saxon</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Name&quot;: &quot;saxon&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;ae4d1b67843db37b2b257228148ae45badf5874c72ed677673eac90b3ab7200b&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2020-12-01T13:41:52.55206052+08:00&quot;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;EnableIPv6&quot;: false,</span><br><span class="line">        &quot;IPAM&quot;: &#123;</span><br><span class="line">            &quot;Driver&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">            &quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;192.168.0.0/16&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;192.168.0.1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Internal&quot;: false,</span><br><span class="line">        &quot;Attachable&quot;: false,</span><br><span class="line">        &quot;Ingress&quot;: false,</span><br><span class="line">        &quot;ConfigFrom&quot;: &#123;</span><br><span class="line">            &quot;Network&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ConfigOnly&quot;: false,</span><br><span class="line">        &quot;Containers&quot;: &#123;</span><br><span class="line">            &quot;5e5d7b74d8bd426e151f6af2fb6aca8330077894be5385faa118b7a9c34f278b&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;tomcat01&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;e96e3d6a90310960972d569613d19ab97422e13fd55ac5c8847780538df40f49&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:c0:a8:00:03&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;192.168.0.3/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;c438c62aa2dafa22619f712d69c95a09c95dd3c93fac74b7348897c794620f04&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;tomcat02&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;2780e88e6ff8244c72747294326004d5688049d9be28163d75872e4eb21916d0&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:c0:a8:00:02&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;192.168.0.2/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>发现和我们的Docker0属性一样，我们再在容器内部ping一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Tomcat1 ping tomcat2 测试通过</span></span><br><span class="line">[root@iZwz94khotag1q066igytrZ docker]# docker exec -it tomcat01 ping 192.168.0.2</span><br><span class="line">PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.0.2: icmp_seq=1 ttl=64 time=0.157 ms</span><br><span class="line">64 bytes from 192.168.0.2: icmp_seq=2 ttl=64 time=0.108 ms</span><br><span class="line">64 bytes from 192.168.0.2: icmp_seq=3 ttl=64 time=0.106 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.0.2 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 35ms</span><br><span class="line">rtt min/avg/max/mdev = 0.106/0.123/0.157/0.026 ms</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">tomcat2 ping tomcat1 测试通过</span></span><br><span class="line">[root@iZwz94khotag1q066igytrZ docker]# docker exec -it tomcat02 ping 192.168.0.3</span><br><span class="line">PING 192.168.0.3 (192.168.0.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.0.3: icmp_seq=1 ttl=64 time=0.115 ms</span><br><span class="line">64 bytes from 192.168.0.3: icmp_seq=2 ttl=64 time=0.111 ms</span><br><span class="line">64 bytes from 192.168.0.3: icmp_seq=3 ttl=64 time=0.113 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.0.3 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 50ms</span><br><span class="line">rtt min/avg/max/mdev = 0.111/0.113/0.115/0.001 ms</span><br></pre></td></tr></table></figure><p>到此，我们自己新建的网络成功使用；</p><h3 id="实战：搭建redis集群"><a href="#实战：搭建redis集群" class="headerlink" title="实战：搭建redis集群"></a>实战：搭建redis集群</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">for port in $(seq 1 6); \</span><br><span class="line">do \</span><br><span class="line">mkdir -p /mydata/redis/node-$&#123;port&#125;/conf</span><br><span class="line">touch /mydata/redis/node-$&#123;port&#125;/conf/redis.conf</span><br><span class="line">cat &lt;&lt; EOF &gt;/mydata/redis/node-$&#123;port&#125;/conf/redis.conf</span><br><span class="line">port 6379</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">cluster-announce-ip 172.38.0.1$&#123;port&#125;</span><br><span class="line">cluster-announce-port 6379</span><br><span class="line">cluster-announce-bus-port 16379</span><br><span class="line">appendonly yes</span><br><span class="line">EOF</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">逐一启动镜像</span></span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                                              NAMES</span><br><span class="line">01994e162878        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   8 seconds ago       Up 7 seconds        0.0.0.0:6371-&gt;6379/tcp, 0.0.0.0:16371-&gt;16379/tcp   redis-1</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6371:6379 -p 16371:16379 --name redis-1     -v /mydata/redis/node-1/data:/data     -v /mydata/redis/node-1/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.11 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">e8f73a2f5b6955842c2c293d06c38da046049fb736d1a39ab3d440cd0739700d</span><br><span class="line">docker: Error response from daemon: Address already in use.</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6372:6379 -p 16372:16379 --name redis-2     -v /mydata/redis/node-2/data:/data     -v /mydata/redis/node-2/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.12 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">docker: Error response from daemon: Conflict. The container name &quot;/redis-2&quot; is already in use by container &quot;e8f73a2f5b6955842c2c293d06c38da046049fb736d1a39ab3d440cd0739700d&quot;. You have to remove (or rename) that container to be able to reuse that name.</span><br><span class="line">See &#x27;docker run --help&#x27;.</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]# docker rm -f redis-2</span><br><span class="line">redis-2</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6372:6379 -p 16372:16379 --name redis-2     -v /mydata/redis/node-2/data:/data     -v /mydata/redis/node-2/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.12 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">efab199dc4d9abfdc0ba37e100894c50cdd4ec470b5a3b61b7184070ccb1036d</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6373:6379 -p 16373:16379 --name redis-3     -v /mydata/redis/node-3/data:/data     -v /mydata/redis/node-3/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.13 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">c579a0b63d04a874758a7309c8187c248b3a6383d2a76b90d2f2acbe2fc3fdfd</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6374:6379 -p 16374:16379 --name redis-4     -v /mydata/redis/node-4/data:/data     -v /mydata/redis/node-4/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.14 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">3e33d8a8b1eb767f1eb0a8bc2b9ca4c6c4f7e65303f7ba18c3baf769b3185b10</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6375:6379 -p 16375:16379 --name redis-5     -v /mydata/redis/node-5/data:/data     -v /mydata/redis/node-5/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.15 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">1e2080f42235f1b134714f82f7b5555336cb4e87777781bba02e653282018bb3</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]#  docker run -p 6376:6379 -p 16376:16379 --name redis-6     -v /mydata/redis/node-6/data:/data     -v /mydata/redis/node-6/conf/redis.conf:/etc/redis/redis.conf     -d --net redis --ip 172.38.0.16 redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf</span><br><span class="line">35c59360d6fde0b51b0a72d8a4eae5660df75739b43356423b842454455a3288</span><br><span class="line">[root@iZwz94khotag1q066igytrZ redis]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                    COMMAND                  CREATED              STATUS              PORTS                                              NAMES</span><br><span class="line">35c59360d6fd        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   3 seconds ago        Up 2 seconds        0.0.0.0:6376-&gt;6379/tcp, 0.0.0.0:16376-&gt;16379/tcp   redis-6</span><br><span class="line">1e2080f42235        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   32 seconds ago       Up 31 seconds       0.0.0.0:6375-&gt;6379/tcp, 0.0.0.0:16375-&gt;16379/tcp   redis-5</span><br><span class="line">3e33d8a8b1eb        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   About a minute ago   Up About a minute   0.0.0.0:6374-&gt;6379/tcp, 0.0.0.0:16374-&gt;16379/tcp   redis-4</span><br><span class="line">c579a0b63d04        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   About a minute ago   Up About a minute   0.0.0.0:6373-&gt;6379/tcp, 0.0.0.0:16373-&gt;16379/tcp   redis-3</span><br><span class="line">efab199dc4d9        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   2 minutes ago        Up 2 minutes        0.0.0.0:6372-&gt;6379/tcp, 0.0.0.0:16372-&gt;16379/tcp   redis-2</span><br><span class="line">01994e162878        redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 minutes ago        Up 5 minutes        0.0.0.0:6371-&gt;6379/tcp, 0.0.0.0:16371-&gt;16379/tcp   redis-1</span><br></pre></td></tr></table></figure><p>搭建集群：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster create 172.38.0.11:6379 172.38.0.12:6379</span><br><span class="line">172.38.0.13:6379 172.38.0.14:6379 172.38.0.15:6379 172.38.0.16:6379 --</span><br><span class="line">cluster-replicas 1</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ redis-6.0.9]# redis-cli --cluster create 172.38.0.11:6379 172.38.0.12:6379 172.38.0.13:6379 172.38.0.14:6379 172.38.0.15:6379 172.38.0.16:6379 --cluster-replicas 1</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Performing <span class="built_in">hash</span> slots allocation on 6 nodes...</span></span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 172.38.0.15:6379 to 172.38.0.11:6379</span><br><span class="line">Adding replica 172.38.0.16:6379 to 172.38.0.12:6379</span><br><span class="line">Adding replica 172.38.0.14:6379 to 172.38.0.13:6379</span><br><span class="line">M: 98d2901b86c5d11dddcd0134a9932b34f0c73f71 172.38.0.11:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">M: ae4526fbe1ead0860de11af4ceb505090545c7df 172.38.0.12:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">M: c013d07adf4956f0d97a88933ea81daa92ce27c2 172.38.0.13:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: 112777ebdd54a7899c5316f0e037378b827dbee7 172.38.0.14:6379</span><br><span class="line">   replicates c013d07adf4956f0d97a88933ea81daa92ce27c2</span><br><span class="line">S: 8ca411149d57455bee0d1f2480195b96e75e9dab 172.38.0.15:6379</span><br><span class="line">   replicates 98d2901b86c5d11dddcd0134a9932b34f0c73f71</span><br><span class="line">S: 92d1fb43542e1f7d0a869a57da757d5aaf051079 172.38.0.16:6379</span><br><span class="line">   replicates ae4526fbe1ead0860de11af4ceb505090545c7df</span><br><span class="line">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Nodes configuration updated</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Assign a different config epoch to each node</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span></span><br><span class="line">Waiting for the cluster to join</span><br><span class="line">....</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Performing Cluster Check (using node 172.38.0.11:6379)</span></span><br><span class="line">M: 98d2901b86c5d11dddcd0134a9932b34f0c73f71 172.38.0.11:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: ae4526fbe1ead0860de11af4ceb505090545c7df 172.38.0.12:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: c013d07adf4956f0d97a88933ea81daa92ce27c2 172.38.0.13:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 112777ebdd54a7899c5316f0e037378b827dbee7 172.38.0.14:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates c013d07adf4956f0d97a88933ea81daa92ce27c2</span><br><span class="line">S: 92d1fb43542e1f7d0a869a57da757d5aaf051079 172.38.0.16:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates ae4526fbe1ead0860de11af4ceb505090545c7df</span><br><span class="line">S: 8ca411149d57455bee0d1f2480195b96e75e9dab 172.38.0.15:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 98d2901b86c5d11dddcd0134a9932b34f0c73f71</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Check <span class="keyword">for</span> open slots...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Check slots coverage...</span></span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure><p>查看一个客户端里面的集群信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"><span class="meta">#</span><span class="bash"> Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=172.38.0.1,port=6379,state=online,offset=140,lag=1</span><br><span class="line">master_replid:975f974a938905b155fa316b0d0f57e795e57cca</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:140</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:140</span><br></pre></td></tr></table></figure><p>发现创建集群成功；</p><p>这个集群于哨兵模式不一样的是，一个主机对应一个从机，但是我们的从机也具有写的权限；</p><p>我们在设置值的时候：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set k1 v1</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> Redirected to slot [12706] located at 172.38.0.13:6379</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>同样的，当主机挂掉以后，我们的从机会变成主机，主机也会变成从机；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ redis-6.0.9]# docker exec -it redis-3 /bin/sh</span><br><span class="line">/data # redis-cli</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"><span class="meta">#</span><span class="bash"> Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:172.38.0.14</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:7</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:1173</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:b5c59e51eb3cd20d10b4eddc83dd3fb444501479</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:1173</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1104</span><br><span class="line">repl_backlog_histlen:70</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure><p>我们把原来的主机挂掉，然后在创建一个容器，再用同样的办法创建一个主机，发现主机变成从机；</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DockerFile</title>
      <link href="2020/12/11/DockerFile/"/>
      <url>2020/12/11/DockerFile/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><h4 id="DockerFile介绍"><a href="#DockerFile介绍" class="headerlink" title="DockerFile介绍"></a>DockerFile介绍</h4><p><strong>我们写好一个项目以后，以前发布是打包成一个jar，或者是一个war包，但是现在有Docker以后，我们只需要把我们项目，写成一个DockerFile镜像交给别人，或者上传到远程仓库直接使用pull就可以直接运行</strong></p><p><strong>构建步骤：</strong></p><ol><li><strong>编写 DockerFile</strong></li><li><strong>build DockerFile</strong></li><li><strong>运行</strong></li></ol><h4 id="DockerFile的编写"><a href="#DockerFile的编写" class="headerlink" title="DockerFile的编写"></a>DockerFile的编写</h4><p><strong>基础知识：</strong><br>1、每条保留字指令都必须为大写字母且后面要跟随至少一个参数<br>2、指令按照从上到下，顺序执行<br>3、# 表示注释<br>4、每条指令都会创建一个新的镜像层，并对镜像进行提交<br><strong>流程：</strong><br>1、docker从基础镜像运行一个容器<br>2、执行一条指令并对容器做出修改<br>3、执行类似 docker commit 的操作提交一个新的镜像层<br>4、Docker再基于刚提交的镜像运行一个新容器<br>5、执行dockerfile中的下一条指令直到所有指令都执行完成！<br><strong>说明：</strong><br>从应用软件的角度来看，DockerFile，docker镜像与docker容器分别代表软件的三个不同阶段。<br>DockerFile 是软件的原材料 （代码）<br>Docker 镜像则是软件的交付品 （.apk）<br>Docker 容器则是软件的运行状态 （客户下载安装执行）<br>DockerFile 面向开发，Docker镜像成为交付标准，Docker容器则涉及部署与运维，三者缺一不可！</p><h4 id="DockerFile-关键字"><a href="#DockerFile-关键字" class="headerlink" title="DockerFile 关键字"></a>DockerFile 关键字</h4><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130205308510.png" alt="image-20201130205308510"></p><h4 id="实战：写一个centos"><a href="#实战：写一个centos" class="headerlink" title="实战：写一个centos"></a>实战：写一个centos</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos7</span><br><span class="line"><span class="keyword">MAINTAINER</span> saxon&lt;<span class="number">2433027822</span>@qq.com&gt;</span><br><span class="line"><span class="keyword">ENV</span> MYPATH /usr/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install net-tools</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;----------end--------&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><p><strong>这里有一个BUG centos 8的无法联网，无法使用 RUN yum -y insatll vim等命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f Dockfile -t saxon_centos:1.0 .</span><br></pre></td></tr></table></figure><p>我们一定要在最后面加上一个==.==,不然会报错</p><p>由于是我们自己写的镜像，所以在运行是我们要带上版本号，这样才会让我们的容器精准找到镜像</p><p>运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ docker_file_test]# docker run -it saxon_centos:1.0</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130221936971.png" alt="image-20201130221936971"></p><p>我们发现，我们一进入就会在我们配置的那个地方</p><h4 id="关于CMD和ENTRYPOINT的区别"><a href="#关于CMD和ENTRYPOINT的区别" class="headerlink" title="关于CMD和ENTRYPOINT的区别"></a>关于CMD和ENTRYPOINT的区别</h4><p>我们之前说过，两个命令都是指定一个容器启动时要运行的命令<br><strong>CMD：Dockerfile 中可以有多个CMD 指令，但只有最后一个生效，CMD 会被 docker run 之后的参数</strong><br><strong>替换！</strong><br><strong>ENTRYPOINT： docker run 之后的参数会被当做参数传递给 ENTRYPOINT，之后形成新的命令组合</strong>！</p><p>例如：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、构建dockerfile</span></span><br><span class="line">[root@kuangshen home]<span class="comment"># vim dockerfile-cmd-test</span></span><br><span class="line">[root@kuangshen home]<span class="comment"># cat dockerfile-cmd-test</span></span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [ <span class="string">&quot;ls&quot;</span>, <span class="string">&quot;-a&quot;</span> ]</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 问题：我们可以看到可执行文件找不到的报错，executable file not found。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 之前我们说过，跟在镜像名后面的是 <span class="built_in">command</span>，运行时会替换 CMD 的默认值。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 因此这里的 -l 替换了原来的 CMD，而不是添加在原来的 ls -a 后面。而 -l 根本不是命令，所以自然找不到。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 那么如果我们希望加入 -l 这参数，我们就必须重新完整的输入这个命令：</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1、构建dockerfile</span></span><br><span class="line">[root@kuangshen home]# vim dockerfile-entrypoint-test</span><br><span class="line">[root@kuangshen home]# cat dockerfile-entrypoint-test</span><br><span class="line">FROM centos</span><br><span class="line">ENTRYPOINT [ &quot;ls&quot;, &quot;-a&quot; ]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2、build 镜像</span></span><br><span class="line">[root@kuangshen home]# docker build -f dockerfile-entrypoint-test -t</span><br><span class="line">entrypointtest .</span><br><span class="line">Sending build context to Docker daemon 23.04kB</span><br><span class="line">Step 1/2 : FROM centos</span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> 470671670cac</span></span><br><span class="line">Step 2/2 : ENTRYPOINT [ &quot;ls&quot;, &quot;-a&quot; ]</span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Running <span class="keyword">in</span> bac4ae055630</span></span><br><span class="line">Removing intermediate container bac4ae055630</span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> ae07199f9144</span></span><br><span class="line">Successfully built ae07199f9144</span><br><span class="line">Successfully tagged entrypointtest:latest</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3、执行</span></span><br><span class="line">[root@kuangshen home]# docker run ae07199f9144</span><br><span class="line">.dockerenv</span><br><span class="line">bin</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">lib64</span><br><span class="line">......</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4、测试-l参数，发现可以直接使用，这里就是一种追加，我们可以明显的知道 CMD 和</span></span><br><span class="line">ENTRYPOINT 的区别了</span><br><span class="line">[root@kuangshen home]# docker run entrypointtest -l</span><br></pre></td></tr></table></figure><p>如果使用的是我们的ENTRYPOINT那么在我们的使用容器服务的时候吗，我们后面加的命令会自动补充在后面，不会像原来的ｃｍｄ需要我们自己写全，不然就无法使用；</p><h4 id="实战-部署一个tomcat"><a href="#实战-部署一个tomcat" class="headerlink" title="实战:部署一个tomcat"></a>实战:部署一个tomcat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">FROM centos:7</span><br><span class="line">MAINTAINER saxon&lt;2433027822@qq.com&gt;</span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line">ADD jdk-9.0.4_linux-x64_bin.tar.gz /usr/local</span><br><span class="line">ADD apache-tomcat-9.0.38.tar.gz /usr/local</span><br><span class="line"><span class="meta">#</span><span class="bash">配置Java</span></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk-9.0.4</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta">#</span><span class="bash">配置tomcat</span></span><br><span class="line"></span><br><span class="line">ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.38</span><br><span class="line">ENV CATALINA_BASE /usr/local/apache-tomcat-9.0.38</span><br><span class="line">ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">容器运行时监听的端口</span></span><br><span class="line">EXPOSE 8080</span><br><span class="line"><span class="meta">#</span><span class="bash">启动时运行tomcat</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ENTRYPOINT [<span class="string">&quot;/usr/local/apache-tomcat-9.0.38/bin/startup.sh&quot;</span> ]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CMD [<span class="string">&quot;/usr/local/apache-tomcat-9.0.38/bin/catalina.sh&quot;</span>,<span class="string">&quot;run&quot;</span>]</span></span><br><span class="line">CMD /usr/local/apache-tomcat-9.0.38/bin/startup.sh</span><br><span class="line"></span><br><span class="line">RUN yum -y install vim</span><br></pre></td></tr></table></figure><p>使用下面的命令运行我们的镜像：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d -p 3333:8080 saxon_centos:1.0 /bin/bash</span><br></pre></td></tr></table></figure><p>没有实现挂载，如果你想要实现挂载，你可以加上-v，这样你就可以在宿主机上面定向修改应用代码；这样可以简便开发；</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130230920098.png" alt="image-20201130230920098"></p><h4 id="上传自己的镜像到远程服务器"><a href="#上传自己的镜像到远程服务器" class="headerlink" title="上传自己的镜像到远程服务器"></a>上传自己的镜像到远程服务器</h4><h5 id="Docker-HUB"><a href="#Docker-HUB" class="headerlink" title="Docker HUB"></a>Docker HUB</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">第一步，登录</span></span><br><span class="line">docker login -u username -p password</span><br><span class="line"><span class="meta">#</span><span class="bash">第二步，上传</span></span><br><span class="line">....</span><br></pre></td></tr></table></figure><h5 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h5><p>官网上直接有步骤按照那个来就可以了；</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker数据卷技术</title>
      <link href="2020/12/11/Docker%E6%95%B0%E6%8D%AE%E5%8D%B7%E6%8A%80%E6%9C%AF/"/>
      <url>2020/12/11/Docker%E6%95%B0%E6%8D%AE%E5%8D%B7%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Docker数据卷技术"><a href="#Docker数据卷技术" class="headerlink" title="Docker数据卷技术"></a>Docker数据卷技术</h2><h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4><p>体验以下，类似于双向绑定的一种数据同步技术：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /home/ceshi:/home centos /bin/bash</span><br></pre></td></tr></table></figure><p><strong>-v 代表挂载，宿主机文件地址：容器地址</strong></p><p>我在centos的/home目录下创建了一个test.java，结果在我自己的服务器上的/home/ceshi里面找到了我新建的文件；</p><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><h5 id="第一种：使用-v"><a href="#第一种：使用-v" class="headerlink" title="第一种：使用-v"></a>第一种：使用-v</h5><p>复制数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3333:3306 -v /home/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql</span><br></pre></td></tr></table></figure><p>我们把数据放在本地，使用 <strong>docker inspect 容器ID</strong>查询容器的挂载情况</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130153525831.png" alt="image-20201130153525831"></p><ul><li><strong>source代表的是本地目录，下面的那个菜单代表的是我们的容器地址</strong></li></ul><p>我们无论在哪里修改数据，在服务器或者在容器内，这样都会改变两边的数据；</p><h5 id="第二种-使用DockerFile"><a href="#第二种-使用DockerFile" class="headerlink" title="第二种:使用DockerFile"></a>第二种:<strong>使用DockerFile</strong></h5><p>DockerFile 是用来构建Docker镜像的构建文件，是由一些列命令和参数构成的脚本。</p><p>编写脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim dockerfile1</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##################</span></span></span><br><span class="line">FROM centos</span><br><span class="line">VOLUME [&quot;/dataVolumeContainer1&quot;,&quot;/dataVolumeContainer2&quot;]</span><br><span class="line">CMD echo &quot;-------end------&quot;</span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#####################</span></span></span><br></pre></td></tr></table></figure><p>使用脚本生成镜像 挂载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f /home/Docker_test/dockerfile1 -t centos .</span><br></pre></td></tr></table></figure><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130155003708.png" alt="image-20201130155003708"></p><p>进入容器，发现多了两个文件夹，于是我们在里面添加和修改文件，看一下宿主机的情况如何；</p><p>使用 **docker inspect **发现挂载的文件所在地方，我们去到那个文件地址并添加一些数据，查看变化</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130155221946.png" alt="image-20201130155221946"></p><p>我在宿主机和容器里面添加了数据发现，两边都会定向修改，达到我们的目的，实现了在两个地方修改数据，数据都会同步</p><h4 id="匿名和具名挂载"><a href="#匿名和具名挂载" class="headerlink" title="匿名和具名挂载"></a>匿名和具名挂载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 匿名挂载</span></span><br><span class="line">-v 容器内路径</span><br><span class="line">docker run -d -P --name nginx01 -v /etc/nginx nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 匿名挂载的缺点，就是不好维护，通常使用命令 docker volume维护</span></span><br><span class="line">docker volume ls</span><br><span class="line"><span class="meta">#</span><span class="bash"> 具名挂载</span></span><br><span class="line">-v 卷名:/容器内路径</span><br><span class="line">docker run -d -P --name nginx02 -v nginxconfig:/etc/nginx nginx</span><br></pre></td></tr></table></figure><p>上面的两种挂载方式都没有指明挂载的所在位置；</p><h4 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h4><p>命名的容器挂载数据卷，其他容器通过挂载这个（父容器）实现数据共享，挂载数据卷的容器，称之为 数据卷容器。 我们使用上一步的镜像：centos 为模板，运行容器 saxon01，saxon02他 们都会具有容器卷</p><p>实现的目的是，docker内部的容器的数据统一，数据之间可以互用；</p><p>第一步，先建立一个根容器，里面已经挂载数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d -v </span><br></pre></td></tr></table></figure><p>第二步，使用–volumes-from name 关联一个我们已经创建的容器</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130165446082.png" alt="image-20201130165446082"></p><p>第三步，在主容器里面添加记录</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130165859908.png" alt="image-20201130165859908"></p><p>接着查看副容器里面的数据；</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130165809665.png" alt="image-20201130165809665"></p><p>最后查看宿主机上的数据，查看二号机的数据 在查看刚才添加的数据：</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130170431804.png" alt="image-20201130170431804"></p><p><strong>得出结论： 容器之间配置信息的传递是一种双向绑定关系，数据卷的生命周期一直持续到没有容器使用它为止。 存储在本机的文件则会一直保留！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker镜像</title>
      <link href="2020/12/11/Docker%E9%95%9C%E5%83%8F/"/>
      <url>2020/12/11/Docker%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Docker镜像理解"><a href="#Docker镜像理解" class="headerlink" title="Docker镜像理解"></a>Docker镜像理解</h2><h3 id="什么是镜像"><a href="#什么是镜像" class="headerlink" title="什么是镜像"></a>什么是镜像</h3><p>镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含 运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。</p><h3 id="Docker镜像加载原理"><a href="#Docker镜像加载原理" class="headerlink" title="Docker镜像加载原理"></a>Docker镜像加载原理</h3><h4 id="联合文件系统"><a href="#联合文件系统" class="headerlink" title="联合文件系统"></a>联合文件系统</h4><p>UnionFS（联合文件系统）：Union文件系统（UnionFS）是一种分层、轻量级并且高性能的文件系统， 它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系 统下(unite several directories into a single virtual filesystem)。Union 文件系统是 Docker 镜像的基 础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。 特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件 系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录</p><p>简单来说，就是实现文件的复用实现对空间的额节约；相同的文件他会直接使用；</p><h3 id="Docker镜像加载原理-1"><a href="#Docker镜像加载原理-1" class="headerlink" title="Docker镜像加载原理"></a><a href="https://blog.csdn.net/pjsdsg/article/details/90445128">Docker镜像加载原理</a></h3><p>docker的镜像实际上由一层一层的文件系统组成，这种层级的文件系统UnionFS。</p><p><strong>bootfs(boot file system)**主要包含bootloader和kernel，bootloader主要是引导加载kernel，Linux刚启动时会加载bootfs文件系统，</strong>在Docker镜像的最底层是bootfs<strong>。这一层与我们典型的Linux/Unix系统是一样的, 包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已由bootfs转交给内核，此时系统也会卸载bootfs。**<em>对应我们的Windows来说就是当我们的Windows开机以后，他的开机动画就没有用了，所以就卸载我们的开机动画；</em></strong></p><p><strong>rootfs(root file system)</strong>, 在bootfs之上。包含的就是典型Linux系统中的/dev, /proc, /bin, /etc等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。</p><h3 id="上传一个镜像"><a href="#上传一个镜像" class="headerlink" title="上传一个镜像"></a>上传一个镜像</h3><p>原因：每一次我们使用类似于tomcat的镜像的时候，我们就会发现他的 <strong>webapps</strong>里面没有文件，所以我们想要使用一个我们自己操作过后的镜像，更加方便的使用镜像；</p><p>操作如下：</p><p><strong>主要使用命令==docker commit -a=”author” -m=”message” name:[TGA]==</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec -it  e6a3adfeeb48 /bin/bash </span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt LICENSE  README.md RUNNING.txt  conf  logs    temp     webapps.dist</span><br><span class="line">CONTRIBUTING.md  NOTICE   RELEASE-NOTES  bin      lib   native-jni-lib  webapps  work</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# cd webapps</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat/webapps# ls</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat/webapps# cd ..</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# ll</span><br><span class="line">bash: ll: command not found</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# cp -r webapps.dist/* webapps</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# cd webapps</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat/webapps# ls</span><br><span class="line">ROOT  docs  examples  host-manager  manager</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat/webapps# exit</span><br><span class="line">exit</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker exec -it  e6a3adfeeb48 /bin/bash </span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# c wbapps</span><br><span class="line">bash: c: command not found</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat# cd webapps</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat/webapps# ls</span><br><span class="line">ROOT  docs  examples  host-manager  manager</span><br><span class="line">root@e6a3adfeeb48:/usr/local/tomcat/webapps# exit</span><br><span class="line">exit</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e6a3adfeeb48        tomcat              &quot;catalina.sh run&quot;   2 minutes ago       Up 2 minutes        8080/tcp            quizzical_chandrasekhar</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker commit e6a3adfeeb48</span><br><span class="line">sha256:0183409589d19364a3352895f109032b965d4d2d9e14c9247aa14e978942c46c</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e6a3adfeeb48        tomcat              &quot;catalina.sh run&quot;   2 minutes ago       Up 2 minutes        8080/tcp            quizzical_chandrasekhar</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              0183409589d1        14 seconds ago      653MB</span><br><span class="line">nginx               latest              bc9a0695f571        5 days ago          133MB</span><br><span class="line">tomcat              latest              e0bd8b34b4ea        10 days ago         649MB</span><br><span class="line">centos              latest              0d120b6ccaa8        3 months ago        215MB</span><br><span class="line">elasticsearch       7.6.2               f29a1ee41030        8 months ago        791MB</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# docker run -it 0183409589d1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker基本命令</title>
      <link href="2020/12/11/Docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
      <url>2020/12/11/Docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Docker基本的命令"><a href="#Docker基本的命令" class="headerlink" title="Docker基本的命令"></a>Docker基本的命令</h2><h3 id="一、镜像命令"><a href="#一、镜像命令" class="headerlink" title="一、镜像命令"></a>一、镜像命令</h3><h4 id="1-查看仓库镜像"><a href="#1-查看仓库镜像" class="headerlink" title="1.查看仓库镜像"></a>1.查看仓库镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查询所有的镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="meta">#</span><span class="bash">可以使用的参数</span></span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images) #显示所有信息</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided #过滤请求</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br><span class="line">  -q, --quiet           Only show numeric IDs #只显示ID</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">image的属性</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              bf756fb1ae65        11 months ago       13.3kB</span><br><span class="line"><span class="meta">#</span><span class="bash">REPOSITORY  仓库的名字，我们可以通过这个在dockerhub里面获得镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash">TAG 版本号</span></span><br><span class="line"><span class="meta">#</span><span class="bash">IMAGE ID 镜像ID</span></span><br><span class="line"><span class="meta">#</span><span class="bash">CREATED  创建时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SIZE 大小</span></span><br></pre></td></tr></table></figure><h4 id="2-搜索仓库镜像"><a href="#2-搜索仓库镜像" class="headerlink" title="2.搜索仓库镜像"></a>2.搜索仓库镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">命令解释 docker search --<span class="built_in">help</span></span></span><br><span class="line">Search the Docker Hub for images #从docker Hub里面搜索镜像</span><br><span class="line"><span class="meta">#</span><span class="bash">按照条件搜索镜像</span></span><br><span class="line">docker search mysql --filter=STARs=3000 #搜索镜像stars大于3000的镜像</span><br></pre></td></tr></table></figure><h4 id="3-下载镜像"><a href="#3-下载镜像" class="headerlink" title="3.下载镜像"></a>3.下载镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">docker pull --<span class="built_in">help</span> 解释</span></span><br><span class="line">Pull an image or a repository from a registry</span><br><span class="line"><span class="meta">#</span><span class="bash">下载 mysql</span></span><br><span class="line">docker pull mysql #默认版本为最新</span><br><span class="line"><span class="meta">#</span><span class="bash">最新版下载信息如下：</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/mysql</span><br><span class="line">852e50cd189d: Pull complete </span><br><span class="line">29969ddb0ffb: Pull complete </span><br><span class="line">a43f41a44c48: Pull complete </span><br><span class="line">5cdd802543a3: Pull complete </span><br><span class="line">b79b040de953: Pull complete </span><br><span class="line">938c64119969: Pull complete </span><br><span class="line">7689ec51a0d9: Pull complete </span><br><span class="line">a880ba7c411f: Pull complete </span><br><span class="line">984f656ec6ca: Pull complete </span><br><span class="line">9f497bce458a: Pull complete </span><br><span class="line">b9940f97694b: Pull complete </span><br><span class="line">2f069358dc96: Pull complete </span><br><span class="line">Digest: sha256:4bb2e81a40e9d0d59bd8e3dc2ba5e1f2197696f6de39a91e90798dd27299b093</span><br><span class="line">Status: Downloaded newer image for mysql:latest</span><br><span class="line">docker.io/library/mysql:latest</span><br><span class="line"><span class="meta">#</span><span class="bash">接下来再下载其他版本的，看一下区别</span></span><br><span class="line">docker pull mysql:5.7#指定的版本只可以是仓库里面已经有的东西</span><br><span class="line">5.7: Pulling from library/mysql</span><br><span class="line">852e50cd189d: Already exists </span><br><span class="line">29969ddb0ffb: Already exists </span><br><span class="line">a43f41a44c48: Already exists </span><br><span class="line">5cdd802543a3: Already exists </span><br><span class="line">b79b040de953: Already exists </span><br><span class="line">938c64119969: Already exists </span><br><span class="line">7689ec51a0d9: Already exists </span><br><span class="line">36bd6224d58f: Pull complete </span><br><span class="line">cab9d3fa4c8c: Pull complete </span><br><span class="line">1b741e1c47de: Pull complete </span><br><span class="line">aac9d11987ac: Pull complete </span><br><span class="line">Digest: sha256:8e2004f9fe43df06c3030090f593021a5f283d028b5ed5765cc24236c2c4d88e #签名信息</span><br><span class="line">Status: Downloaded newer image for mysql:5.7 </span><br><span class="line">docker.io/library/mysql:5.7 #仓库地址</span><br></pre></td></tr></table></figure><p>从上面我们可以看出来，有的文件实现了复用，这样的好处就是使我们的文件大小更加小，更加节约空间</p><h4 id="4-删除镜像"><a href="#4-删除镜像" class="headerlink" title="4.删除镜像"></a>4.删除镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">命令解释 docker rmi --<span class="built_in">help</span></span></span><br><span class="line">Remove one or more images</span><br><span class="line"><span class="meta">#</span><span class="bash">根据名字删除镜像</span></span><br><span class="line">docker rmi mysql:5.7</span><br><span class="line"><span class="meta">#</span><span class="bash">根据ID删除镜像</span></span><br><span class="line">docker rmi -f bf756fb1ae65</span><br><span class="line"><span class="meta">#</span><span class="bash">删除全部镜像 使用$取值，这里的就是我们所有的镜像编号</span></span><br><span class="line">docker rmi $(docker images -aq)</span><br></pre></td></tr></table></figure><h3 id="二、仓库命令"><a href="#二、仓库命令" class="headerlink" title="二、仓库命令"></a>二、仓库命令</h3><h4 id="1-运行命令"><a href="#1-运行命令" class="headerlink" title="1.运行命令"></a>1.运行命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker run [OPTIONS] IMAGE [COMMAND][ARG...]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 常用参数说明</span></span><br><span class="line">--name=&quot;Name&quot; # 给容器指定一个名字</span><br><span class="line">-d # 后台方式运行容器，并返回容器的id！</span><br><span class="line">-i # 以交互模式运行容器，通过和 -t 一起使用</span><br><span class="line">-t # 给容器重新分配一个终端，通常和 -i 一起使用</span><br><span class="line">-P # 随机端口映射（大写）</span><br><span class="line">-p # 指定端口映射（小结），一般可以有四种写法</span><br><span class="line">ip:hostPort:containerPort</span><br><span class="line">ip::containerPort</span><br><span class="line">hostPort:containerPort (常用)</span><br><span class="line">containerPort</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">[root@kuangshen ~]# docker images</span><br><span class="line">REPOSITORY TAG IMAGE ID CREATED</span><br><span class="line">SIZE</span><br><span class="line">centos latest 470671670cac 3 months ago</span><br><span class="line">237MB</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用centos进行用交互模式启动容器，在容器内执行/bin/bash命令！</span></span><br><span class="line">[root@kuangshen ~]# docker run -it centos /bin/bash</span><br><span class="line">[root@dc8f24dd06d0 /]# ls # 注意地址，已经切换到容器内部了！</span><br><span class="line">bin etc lib lost+found mnt proc run srv tmp var</span><br><span class="line">dev home lib64 media opt root sbin sys usr</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-退出命令"><a href="#2-退出命令" class="headerlink" title="2.退出命令"></a>2.退出命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit # 容器停止退出</span><br><span class="line">ctrl+P+Q # 容器不停止退出</span><br></pre></td></tr></table></figure><h4 id="3-启动和停止容器"><a href="#3-启动和停止容器" class="headerlink" title="3.启动和停止容器"></a>3.启动和停止容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start (容器id or 容器名) # 启动容器</span><br><span class="line">docker restart (容器id or 容器名) # 重启容器</span><br><span class="line">docker stop (容器id or 容器名) # 停止容器</span><br><span class="line">docker kill (容器id or 容器名) # 强制停止容器</span><br></pre></td></tr></table></figure><h4 id="4-删除容器"><a href="#4-删除容器" class="headerlink" title="4.删除容器"></a>4.删除容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id # 删除指定容器</span><br><span class="line">docker rm -f $(docker ps -a -q) # 删除所有容器</span><br><span class="line">docker ps -a -q|xargs docker rm # 删除所有容器</span><br></pre></td></tr></table></figure><h4 id="5-列出所有的容器"><a href="#5-列出所有的容器" class="headerlink" title="5.列出所有的容器"></a>5.列出所有的容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker ps [OPTIONS]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 常用参数说明</span></span><br><span class="line">-a # 列出当前所有正在运行的容器 + 历史运行过的容器</span><br><span class="line">-l # 显示最近创建的容器</span><br><span class="line">-n=? # 显示最近n个创建的容器</span><br><span class="line">-q # 静默模式，只显示容器编号。</span><br></pre></td></tr></table></figure><h3 id="三、其他的常用命令"><a href="#三、其他的常用命令" class="headerlink" title="三、其他的常用命令"></a>三、其他的常用命令</h3><h4 id="后台启动容器"><a href="#后台启动容器" class="headerlink" title="后台启动容器"></a>后台启动容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker run -d 容器名</span><br><span class="line"><span class="meta">#</span><span class="bash"> 例子</span></span><br><span class="line">docker run -d centos # 启动centos，使用后台方式启动</span><br><span class="line"><span class="meta">#</span><span class="bash"> 问题： 使用docker ps 查看，发现容器已经退出了！</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解释：Docker容器后台运行，就必须有一个前台进程，容器运行的命令如果不是那些一直挂起的命</span></span><br><span class="line">令，就会自动退出。</span><br><span class="line"><span class="meta">#</span><span class="bash"> 比如，你运行了nginx服务，但是docker前台没有运行应用，这种情况下，容器启动后，会立即自杀，因为他觉得没有程序了，所以最好的情况是，将你的应用使用前台进程的方式运行启动。</span></span><br></pre></td></tr></table></figure><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker logs -f -t --tail 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 例子：我们启动 centos，并编写一段脚本来测试玩玩！最后查看日志</span></span><br><span class="line">[root@kuangshen ~]# docker run -d centos /bin/sh -c &quot;while true;do echo</span><br><span class="line">kuangshen;sleep 1;done&quot;</span><br><span class="line">[root@kuangshen ~]# docker ps</span><br><span class="line">CONTAINER ID IMAGE</span><br><span class="line">c8530dbbe3b4 centos</span><br><span class="line"><span class="meta">#</span><span class="bash"> -t 显示时间戳</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -f 打印最新的日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --tail 数字 显示多少条！</span></span><br><span class="line">[root@kuangshen ~]# docker logs -tf --tail 10 c8530dbbe3b4</span><br></pre></td></tr></table></figure><p>在实际测试中，我遇到bug他会一直卡在界面上，看不见日志，所以我也在找原因</p><h4 id="查看docker里面的进程信息"><a href="#查看docker里面的进程信息" class="headerlink" title="查看docker里面的进程信息"></a>查看docker里面的进程信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker top 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">[root@kuangshen ~]# docker top c8530dbbe3b4</span><br><span class="line">UID PID PPID C STIME TTY TIME CMD</span><br><span class="line">root 27437 27421 0 16:43 ? 00:00:00 /bin/sh -c ....</span><br></pre></td></tr></table></figure><p>与docker里面的 <strong>docker ps</strong>对比</p><p>信息比较如下：</p><p><strong>docker top 容器id</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                47937               47921               0                   20:52               pts/0               00:00:00            /bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>docker ps</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e5f4d5207c7a        centos              &quot;/bin/bash&quot;         8 minutes ago       Up 8 minutes                            agitated_wing</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>docker top 容器id 里面显示的PPID指的是容器里面的pid的值，但是docker ps里面却无法显示这一个数据</p><h4 id="进入正在运行的进程"><a href="#进入正在运行的进程" class="headerlink" title="进入正在运行的进程"></a>进入正在运行的进程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令1</span></span><br><span class="line">docker exec -it 容器id bashShell+命令  可以在后面加上一些类似于touch 的命令</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试1</span></span><br><span class="line">[root@kuangshen ~]# docker ps</span><br><span class="line">CONTAINER ID IMAGE COMMAND CREATED</span><br><span class="line">STATUS PORTS NAMES</span><br><span class="line">c8530dbbe3b4 centos &quot;/bin/sh -c &#x27;while t…&quot; 12 minutes</span><br><span class="line">ago Up 12 minutes happy_chaum</span><br><span class="line"></span><br><span class="line">[root@kuangshen ~]# docker exec -it c8530dbbe3b4 /bin/bash</span><br><span class="line">[root@c8530dbbe3b4 /]# ps -ef</span><br><span class="line">UID PID PPID C STIME TTY TIME CMD</span><br><span class="line">root 1 0 0 08:43 ? 00:00:00 /bin/sh -c while true;do</span><br><span class="line">echo kuangshen;sleep</span><br><span class="line">root 751 0 0 08:56 pts/0 00:00:00 /bin/bash</span><br><span class="line">root 769 1 0 08:56 ? 00:00:00 /usr/bin/coreutils --</span><br><span class="line">coreutils-prog-shebang=s</span><br><span class="line">root 770 751 0 08:56 pts/0 00:00:00 ps -ef</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令2</span></span><br><span class="line">docker attach 容器id</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试2</span></span><br><span class="line">[root@kuangshen ~]# docker exec -it c8530dbbe3b4 /bin/bash</span><br><span class="line">[root@c8530dbbe3b4 /]# ps -ef</span><br><span class="line">UID PID PPID C STIME TTY TIME CMD</span><br><span class="line">root 1 0 0 08:43 ? 00:00:00 /bin/sh -c while true;do</span><br><span class="line">echo kuangshen;sleep</span><br><span class="line">root 856 0 0 08:57 pts/0 00:00:00 /bin/bash</span><br><span class="line">root 874 1 0 08:57 ? 00:00:00 /usr/bin/coreutils --</span><br><span class="line">coreutils-prog-shebang=s</span><br><span class="line">root 875 856 0 08:57 pts/0 00:00:00 ps -ef</span><br><span class="line"><span class="meta">#</span><span class="bash"> 区别</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exec</span> 是在容器中打开新的终端，并且可以启动新的进程</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> attach 直接进入容器启动命令的终端，不会启动新的进程</span></span><br></pre></td></tr></table></figure><p>理解上面的两个命令：</p><p><strong>使用exec，那么每一次都是打开一个新的终端，那么他的每一次的bash 的pid 都是不一样的，并且直接使用 exit 容器不会直接退出；</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130173300051.png" alt="image-20201130173300051"></p><p><strong>使用attach，每次打开都是同一个Bash，并且你所在位置就在你上一次推出时候的位置，也代表了这个命令不会产生新的进程，使用exit 直接关闭容器</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201130173451272.png" alt="image-20201130173451272"></p><h4 id="查看容器-镜像的元数据"><a href="#查看容器-镜像的元数据" class="headerlink" title="查看容器/镜像的元数据"></a>查看容器/镜像的元数据</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker inspect 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">[root@kuangshen ~]# docker inspect c8530dbbe3b4</span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 完整的id，有意思啊，这里上面的容器id，就是截取的这个id前几位！</span></span><br><span class="line">&quot;Id&quot;:</span><br><span class="line">&quot;c8530dbbe3b44a0c873f2566442df6543ed653c1319753e34b400efa05f77cf8&quot;,</span><br><span class="line">&quot;Created&quot;: &quot;2020-05-11T08:43:45.096892382Z&quot;,</span><br><span class="line">&quot;Path&quot;: &quot;/bin/sh&quot;,</span><br><span class="line">&quot;Args&quot;: [</span><br><span class="line">&quot;-c&quot;,</span><br><span class="line">&quot;while true;do echo kuangshen;sleep 1;done&quot;</span><br><span class="line">],</span><br><span class="line"><span class="meta">#</span><span class="bash"> 状态</span></span><br><span class="line">&quot;State&quot;: &#123;</span><br><span class="line">&quot;Status&quot;: &quot;running&quot;,</span><br><span class="line">&quot;Running&quot;: true,</span><br><span class="line">&quot;Paused&quot;: false,</span><br><span class="line">&quot;Restarting&quot;: false,</span><br><span class="line">&quot;OOMKilled&quot;: false,</span><br><span class="line">&quot;Dead&quot;: false,</span><br><span class="line">&quot;Pid&quot;: 27437,</span><br><span class="line">&quot;ExitCode&quot;: 0,</span><br><span class="line">&quot;Error&quot;: &quot;&quot;,</span><br><span class="line">&quot;StartedAt&quot;: &quot;2020-05-11T08:43:45.324474622Z&quot;,</span><br><span class="line">&quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;</span><br><span class="line">&#125;,</span><br><span class="line">// ...........</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="把容器里面的数据拷贝到宿主机里面"><a href="#把容器里面的数据拷贝到宿主机里面" class="headerlink" title="把容器里面的数据拷贝到宿主机里面"></a>把容器里面的数据拷贝到宿主机里面</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令</span></span><br><span class="line">docker cp 容器id:容器内路径 目的主机路径</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器内执行，创建一个文件测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash">环境在容器类，当前在容器里面</span></span><br><span class="line">[root@c8530dbbe3b4 /]# cd /home</span><br><span class="line">[root@c8530dbbe3b4 home]# touch f1</span><br><span class="line">[root@c8530dbbe3b4 home]# ls</span><br><span class="line">f1</span><br><span class="line">[root@c8530dbbe3b4 home]# exit</span><br><span class="line">exit</span><br><span class="line"><span class="meta">#</span><span class="bash"> linux复制查看，是否复制成功</span></span><br><span class="line">[root@kuangshen ~]# docker cp c8530dbbe3b4:/home/f1 /home</span><br><span class="line">[root@kuangshen ~]# cd /home</span><br><span class="line">[root@kuangshen home]# ls</span><br><span class="line">f1</span><br></pre></td></tr></table></figure><h3 id="四、相关练习"><a href="#四、相关练习" class="headerlink" title="四、相关练习"></a>四、相关练习</h3><h4 id="在Docker里面部署nginx"><a href="#在Docker里面部署nginx" class="headerlink" title="在Docker里面部署nginx"></a>在Docker里面部署nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">docker search nginx</span><br><span class="line">docker pull nginx</span><br><span class="line"></span><br><span class="line">docker run -d -p 3333:80 nginx #宿主机端口:容器内端口 后台运行</span><br><span class="line"><span class="meta">#</span><span class="bash">测试</span></span><br><span class="line">curl localhost:3333</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="在Docker里面部署tomcat"><a href="#在Docker里面部署tomcat" class="headerlink" title="在Docker里面部署tomcat"></a>在Docker里面部署tomcat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载</span></span><br><span class="line">docker pull tomcat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 官方文档解释</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -it ：交互模式</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --rm：容器启动成功并退出以后容器就自动移除，一般在测试情况下使用！</span></span><br><span class="line">docker run -it --rm tomcat:9.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 1、下载tomcat镜像</span></span><br><span class="line">docker pull tomcat</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2、启动</span></span><br><span class="line">docker run -d -p 8080:8080 --name tomcat9 tomcat</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3、进入tomcat</span></span><br><span class="line">docker exec -it tomcat9 /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4、思考：我们以后要部署项目，还需要进入容器中，是不是十分麻烦，要是有一种技术，可以将容器</span></span><br><span class="line"><span class="meta">#</span><span class="bash">内和我们Linux进行映射挂载就好了？我们后面会将数据卷技术来进行挂载操作，也是一个核心内容，这</span></span><br><span class="line"><span class="meta">#</span><span class="bash">里大家先听听名词就好，我们很快就会讲到！</span></span><br></pre></td></tr></table></figure><p>布置好上面的配置以后，我们发现页面是404 ，就是代表我们的webapps里面没有相应的项目，所以我们要把webapps.dist里面的项目移动到webapps目录下面；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ home]# docker restart tomcat</span><br><span class="line">tomcat</span><br><span class="line">[root@iZwz94khotag1q066igytrZ home]# docker exec -it tomcat /bin/bash</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt LICENSE  README.md RUNNING.txt  conf  logs    temp     webapps.dist</span><br><span class="line">CONTRIBUTING.md  NOTICE   RELEASE-NOTES  bin      lib   native-jni-lib  webapps  work</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# cd webapps</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat/webapps# ls</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat/webapps# cd ..</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# cp webapps.dist/* webapp</span><br><span class="line">cp: target &#x27;webapp&#x27; is not a directory</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# cp webapps.dist/* webapps</span><br><span class="line">cp: -r not specified; omitting directory &#x27;webapps.dist/ROOT&#x27;</span><br><span class="line">cp: -r not specified; omitting directory &#x27;webapps.dist/docs&#x27;</span><br><span class="line">cp: -r not specified; omitting directory &#x27;webapps.dist/examples&#x27;</span><br><span class="line">cp: -r not specified; omitting directory &#x27;webapps.dist/host-manager&#x27;</span><br><span class="line">cp: -r not specified; omitting directory &#x27;webapps.dist/manager&#x27;</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# cp -r webapps.dist/* webapps</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# cp -r webapps.dist/* webapps</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat# cd webapps</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat/webapps# ls</span><br><span class="line">ROOT  docs  examples  host-manager  manager</span><br><span class="line">root@81e095d08b23:/usr/local/tomcat/webapps# </span><br></pre></td></tr></table></figure><p>然后再次访问 ip地址+端口号，就会出现下面的图，表示我们部署成功</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201129225520388.png" alt="image-20201129225520388"></p><h4 id="使用docker-部署-es-kibana"><a href="#使用docker-部署-es-kibana" class="headerlink" title="使用docker 部署 es + kibana"></a>使用docker 部署 es + kibana</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 4、增加上内存限制启动</span></span><br><span class="line">docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e#配置端口号</span><br><span class="line">&quot;discovery.type=single-node&quot; -e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot;#配置最大的请求内存</span><br><span class="line">elasticsearch:7.6.2 #版本号</span><br></pre></td></tr></table></figure><p>部署成功后出现下面的数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;902795f9120d&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cluster_name&quot;</span> : <span class="string">&quot;docker-cluster&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;KvuZMGwwRgq2PFaAqcS0zg&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;number&quot;</span> : <span class="string">&quot;7.6.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_flavor&quot;</span> : <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_type&quot;</span> : <span class="string">&quot;docker&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_hash&quot;</span> : <span class="string">&quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_date&quot;</span> : <span class="string">&quot;2020-03-26T06:34:37.794943Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;lucene_version&quot;</span> : <span class="string">&quot;8.4.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;6.8.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>内存占用情况</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">902795f9120d        elegant_hertz       0.52%               353.2MiB / 1.787GiB   19.31%              6.9kB / 3.63kB      14.5MB / 928kB      43</span><br></pre></td></tr></table></figure><p><strong>如果不使用上面的语句的话，docker里面部署elastic search 会占用很大的内存，就会浪费资源。使用以后，资源得到充分的利用</strong></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker基本介绍</title>
      <link href="2020/12/11/Docker%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/"/>
      <url>2020/12/11/Docker%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Docker的安装和第一个镜像hello-docker"><a href="#Docker的安装和第一个镜像hello-docker" class="headerlink" title="Docker的安装和第一个镜像hello-docker"></a>Docker的安装和第一个镜像hello-docker</h2><h3 id="一、安装使用docker"><a href="#一、安装使用docker" class="headerlink" title="一、安装使用docker"></a>一、安装使用docker</h3><p>来源自官方文档</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">第一步，如果有旧版本就要先卸载旧版本才可以使用</span></span><br><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">第二步 下载相应的依赖和配置仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y yum-utils</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager \</span></span><br><span class="line"><span class="bash">    --add-repo \</span></span><br><span class="line"><span class="bash">    https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta">#</span><span class="bash">这里我们使用的镜像改成阿里云的镜像</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">第三步，下载相应的客户端及其他文件，这里的ce代表的是社区版，官网也推荐我们使用社区版，其他的还有的版本叫做ee，企业版</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install docker-ce docker-ce-cli containerd.io</span></span><br><span class="line"><span class="meta">#</span><span class="bash">在这里我自己的下载出现问题，按照提示在后面加上 --nobest 就可以运行了；</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">第四步，开始使用docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run hello-world</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">一切就绪以后，出现以下代码就代表安装成功</span></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $</span><span class="bash"> docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">出现一个hello from docker就代表我们的使用成功了</span></span><br></pre></td></tr></table></figure><h4 id="配置阿里云镜像加速"><a href="#配置阿里云镜像加速" class="headerlink" title="配置阿里云镜像加速"></a>配置阿里云镜像加速</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://qiyb9988.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>这样配置以后我们的下载速度更快</p><h3 id="二、hello-world的运行步骤"><a href="#二、hello-world的运行步骤" class="headerlink" title="二、hello_world的运行步骤"></a>二、hello_world的运行步骤</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201129142722307.png" alt="image-20201129142722307"></p><h3 id="三、底层原理"><a href="#三、底层原理" class="headerlink" title="三、底层原理"></a>三、底层原理</h3><h4 id="Docker底层原理"><a href="#Docker底层原理" class="headerlink" title="Docker底层原理"></a>Docker底层原理</h4><ul><li>Docker Engine是一个客户端-服务器应用程序，具有以下主要组件:<br>一个服务器，它是一种长期运行的程序，称为守护进程(dockerd命令)。<br>一个REST API，它指定程序可以用来与守护进程对话并指示它做什么的接口。<br>命令行接口(CLI)客户端(docker命令)。</li><li>Docker是一个<strong>Client Server结构的系统</strong>，Docker守护进程运行在主机上，然后通过Socket连接从客户 端访问，守护进程从客户端接受命令并管理运行在主机上的容器。<strong>容器，是一个运行时环境就是我们前面说到的集装箱。</strong><br>Client Server结构的系统在<a href="https://blog.csdn.net/qq_44891295/article/details/105444618">Docker——Docker介绍</a>中的Docker架构图解析中有阐明</li></ul><h4 id="为什么Docker比虚拟机快？"><a href="#为什么Docker比虚拟机快？" class="headerlink" title="为什么Docker比虚拟机快？"></a><a href="https://www.cnblogs.com/fanqisoft/p/10440220.html">为什么Docker比虚拟机快？</a></h4><p>1.Docker有着比虚拟机更少的抽象层，由于Docker不需要Hypervisor实现硬件资源虚拟化，运行在Docker容器上的程序直接使用的都是实际物理机的硬件资源，因此在Cpu、内存利用率上Docker将会在效率上有明显优势。</p><p>2.Docker利用的是宿主机的内核，而不需要Guest OS，因此，当新建一个容器时，Docker不需要和虚拟机一样重新加载一个操作系统，避免了引导、加载操作系统内核这个比较费时费资源的过程，当新建一个虚拟机时，虚拟机软件需要加载Guest OS，这个新建过程是分钟级别的，而Docker由于直接利用宿主机的操作系统则省略了这个过程，因此新建一个Docker容器只需要几秒钟。</p><table><thead><tr><th></th><th>Docker容器</th><th>虚拟机（VM）</th></tr></thead><tbody><tr><td>操作系统</td><td>与宿主机共享OS</td><td>宿主机OS上运行宿主机OS</td></tr><tr><td>存储大小</td><td>镜像小，便于存储与传输</td><td>镜像庞大（vmdk等）</td></tr><tr><td>运行性能</td><td>几乎无额外性能损失</td><td>操作系统额外的cpu、内存消耗</td></tr><tr><td>移植性</td><td>轻便、灵活、适用于Linux</td><td>笨重、与虚拟化技术耦合度高</td></tr><tr><td>硬件亲和性</td><td>面向软件开发者</td><td>面向硬件运维者</td></tr></tbody></table><p>这里的guest os指的是虚拟机的硬件，我们的Docker不用使用这个就可以运行，它实际上是用的宿主机内存；</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/img/9391819/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/img/9391819/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!DOCTYPE html><html lang="zh-cn"><head>    <meta charset="utf-8" />    <meta name="viewport" content="width=device-width, initial-scale=1.0" />    <meta name="referrer" content="origin" />    <meta name="description" content="Hystrix是什么 在分布式环境中，许多服务依赖项中的一些必然会失败。Hystrix是一个库，通过添加延迟容忍和容错逻辑，帮助你控制这些分布式服务之间的交互。Hystrix通过隔离服务之间的访问点、" />    <meta property="og:description" content="Hystrix是什么 在分布式环境中，许多服务依赖项中的一些必然会失败。Hystrix是一个库，通过添加延迟容忍和容错逻辑，帮助你控制这些分布式服务之间的交互。Hystrix通过隔离服务之间的访问点、" />    <meta http-equiv="Cache-Control" content="no-transform" />    <meta http-equiv="Cache-Control" content="no-siteapp" />    <meta http-equiv="X-UA-Compatible" content="IE=edge" />    <title>Hystrix介绍 - 废物大师兄 - 博客园</title>    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />        <link rel="stylesheet" href="/css/blog-common.min.css?v=caAedYKpnz341INFIWakIM6r1EP9FIuJg43i9i8zqDQ" />    <link id="MainCss" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip.min.css?v=KCO_3ott2y-JO7odohKsrvtUrt9hTa27jdu0wc97cYk" />    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/cjsblog/custom.css?v=oCtwM4EaP1&#x2B;6xfn&#x2B;Ctza0Eo26XU=" />    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip-mobile.min.css?v=tIFvQMy1scIQlz-FPuB-X5CclTNQuHEVChVECOD3yaY" />        <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/cjsblog/rss" />    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/cjsblog/rsd.xml" />    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/cjsblog/wlwmanifest.xml" />    <script>        var currentBlogId = 303122;        var currentBlogApp = 'cjsblog';        var cb_enable_mathjax = false;        var isLogined = false;        var isBlogOwner = false;        var skinName = 'darkgreentrip';        var visitorUserId = '';    </script>        <script>            var currentPostDateAdded = '2018-07-30 05:39';        </script>    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>    <script src="/js/blog-common.min.js?v=kKx3DBtpvO8r97BzPmHJseQ10fGHkI-ZwMh4FA0eEd0"></script>            </head><body class="no-navbar">    <a name="top"></a>     <div id="top_nav" class="navbar navbar-custom">        <nav id="nav_main" class="navbar-main">            <ul id="nav_left" class="navbar-list navbar-left">                <li class="navbar-branding">                    <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a>                </li>                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>            </ul>            <ul id="nav_right" class="navbar-list navbar-right">                <li>                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />                        <button type="submit" id="zzk_search_button">                            <img src="/images/aggsite/search.svg" alt="搜索" />                        </button>                    </form>                </li>                <li id="navbar_login_status" class="navbar-list">                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />                    </a>                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=oS4PkibyMjZ9rGD5XAcLt99uW_s76Javy2up4dbnZNY" alt="短消息" />                        <span id="msg_count" style="display: none"></span>                    </a>                    <div id="user_info" class="navbar-user-info dropdown">                        <a class="dropdown-button" href="https://home.cnblogs.com/">                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />                        </a>                        <div class="dropdown-menu">                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>                            <a href="https://home.cnblogs.com/">我的园子</a>                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>                            <a href="javascript:void(0)" onclick="logout();">退出登录</a>                        </div>                    </div>                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signin/?returnUrl=https://www.cnblogs.com/">登录</a>                </li>            </ul>        </nav>    </div>        <!--done--><div id="home"><div id="header"><div id="blogTitle">        <a id="lnkBlogLogo" href="https://www.cnblogs.com/cjsblog/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a><!--done--><h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/cjsblog/">狂乱的贵公子</a></h1><h2>为你，千千万万遍！</h2></div><!--end: blogTitle 博客的标题和副标题 --><div id="navigator"><ul id="navList"><li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">博客园</a></li><li><a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/cjsblog/">首页</a></li><li><a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li><li><a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%BA%9F%E7%89%A9%E5%A4%A7%E5%B8%88%E5%85%84">联系</a></li><li><a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/cjsblog/rss/">订阅</a><!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li><li><a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">管理</a></li></ul><div class="blogStats"><span id="stats_post_count">随笔 - 242&nbsp; </span><span id="stats_article_count">文章 - 0&nbsp; </span><span id="stats-comment_count">评论 - 600</span></div><!--end: blogStats --></div><!--end: navigator 博客导航栏 --></div><!--end: header 头部 --><div id="main"><div id="mainContent"><div class="forFlow"><div id="post_detail">    <!--done-->    <div id="topics">        <div class="post">            <h1 class = "postTitle">                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cjsblog/p/9391819.html">    <span>Hystrix介绍</span>    </a>            </h1>            <div class="clear"></div>            <div class="postBody">                <div id="cnblogs_post_body" class="blogpost-body">    <p><img src="https://images2018.cnblogs.com/blog/874963/201807/874963-20180730171840132-199181226.png" alt=""></p><h2>Hystrix是什么</h2><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">在分布式环境中，许多服务依赖项中的一些必然会失败。Hystrix是一个库，通过添加延迟容忍和容错逻辑，帮助你控制这些分布式服务之间的交互。Hystrix通过隔离服务之间的访问点、停止级联失败和提供回退选项来实现这一点，所有这些都可以提高系统的整体弹性。</span></p><h2>Hystrix为了什么</h2><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">Hystrix被设计的目标是：</span></p><ol><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">对通过第三方客户端库访问的依赖项（通常是通过网络）的延迟和故障进行保护和控制。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">在复杂的分布式系统中阻止级联故障。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">快速失败，快速恢复。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">回退，尽可能优雅地降级。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">启用近实时监控、警报和操作控制。</span></li></ol><h2>Hystrix解决了什么问题</h2><p><span style="font-size: 16px; font-family: &quot;Microsoft YaHei&quot;">复杂分布式体系结构中的应用程序有许多依赖项，每个依赖项在某些时候都不可避免地会失败。如果主机应用程序没有与这些外部故障隔离，那么它有可能被他们拖垮。</span></p><p><span style="font-size: 16px; font-family: &quot;Microsoft YaHei&quot;">例如，对于一个依赖于30个服务的应用程序，每个服务都有99.99%的正常运行时间，你可以期望如下：</span></p><p style="margin-left: 30px"><span style="font-family: 仿宋; font-size: 16px">99.99<sup>30&nbsp;</sup> =&nbsp; 99.7% 可用</span></p><p style="margin-left: 30px"><span style="font-family: 仿宋; font-size: 16px">也就是说一亿个请求的0.03% = 3000000 会失败</span></p><p style="margin-left: 30px"><span style="font-family: 仿宋; font-size: 16px">如果一切正常，那么每个月有2个小时服务是不可用的</span></p><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">现实通常是更糟糕&nbsp;</span></p><hr><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">当一切正常时，请求看起来是这样的：</span></p><p><img src="https://images2018.cnblogs.com/blog/874963/201807/874963-20180730172725624-245631738.png" alt=""></p><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">当其中有一个系统有延迟时，它可能阻塞整个用户请求：</span></p><p><img src="https://images2018.cnblogs.com/blog/874963/201807/874963-20180730172821821-960520983.png" alt=""></p><p><span style="font-size: 16px; font-family: &quot;Microsoft YaHei&quot;">在高流量的情况下，一个后端依赖项的延迟可能导致所有服务器上的所有资源在数秒内饱和（PS：意味着后续再有请求将无法立即提供服务）</span></p><p><img src="https://images2018.cnblogs.com/blog/874963/201807/874963-20180730172949326-29467411.png" alt=""></p><h2>Hystrix设计原则是什么</h2><ul><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">防止任何单个依赖项耗尽所有容器（如Tomcat）用户线程。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">甩掉包袱，快速失败而不是排队。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">在任何可行的地方提供回退，以保护用户不受失败的影响。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">使用隔离技术（如隔离板、泳道和断路器模式）来限制任何一个依赖项的影响。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">通过近实时的度量、监视和警报来优化发现时间。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">通过配置的低延迟传播来优化恢复时间。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">支持对Hystrix的大多数方面的动态属性更改，允许使用低延迟反馈循环进行实时操作修改。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">避免在整个依赖客户端执行中出现故障，而不仅仅是在网络流量中。</span></li></ul><h2>Hystrix是如何实现它的目标的</h2><ol><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">用一个HystrixCommand 或者 HystrixObservableCommand （这是命令模式的一个例子）包装所有的对外部系统（或者依赖）的调用，典型地它们在一个单独的线程中执行</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">调用超时时间比你自己定义的阈值要长。有一个默认值，对于大多数的依赖项你是可以自定义超时时间的。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">为每个依赖项维护一个小的线程池(或信号量)；如果线程池满了，那么该依赖性将会立即拒绝请求，而不是排队。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">调用的结果有这么几种：成功、失败（客户端抛出异常）、超时、拒绝。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">在一段时间内，如果服务的错误百分比超过了一个阈值，就会触发一个断路器来停止对特定服务的所有请求，无论是手动的还是自动的。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">当请求失败、被拒绝、超时或短路时，执行回退逻辑。</span></li><li><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">近实时监控指标和配置变化。</span></li></ol><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">当你使用Hystrix来包装每个依赖项时，上图中所示的架构会发生变化，如下图所示：</span></p><p><span style="font-family: &quot;Microsoft YaHei&quot;; font-size: 16px">每个依赖项相互隔离，当延迟发生时，它会被限制在资源中，并包含回退逻辑，该逻辑决定在依赖项中发生任何类型的故障时应作出何种响应：</span></p><p><img src="https://images2018.cnblogs.com/blog/874963/201807/874963-20180730173442729-1485668320.png" alt=""></p><p><span style="font-size: 18px"><a href="https://github.com/Netflix/Hystrix/wiki" target="_blank">https://github.com/Netflix/Hystrix/wiki</a></span></p><p>&nbsp;</p></div><div id="MySignature"></div><div class="clear"></div><div id="blog_post_info_block">    <div id="blog_post_info"></div>    <div class="clear"></div>    <div id="post_next_prev"></div></div>            </div>            <div class="postDesc">posted @ <span id="post-date">2018-07-30 17:39</span>&nbsp;<a href="https://www.cnblogs.com/cjsblog/">废物大师兄</a>&nbsp;阅读(<span id="post_view_count">48304</span>)&nbsp;评论(<span id="post_comment_count">2</span>)&nbsp;<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9391819" rel="nofollow">编辑</a>&nbsp;<a href="javascript:void(0)" onclick="AddToWz(9391819);return false;">收藏</a></div>        </div>            </div><!--end: topics 文章、评论容器--></div><script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script><script>markdown_highlight();</script><script>    var allowComments = true, cb_blogId = 303122, cb_blogApp = 'cjsblog', cb_blogUserGuid = 'bcbc924f-71b4-e511-9fc1-ac853d9f53cc';    var cb_entryId = 9391819, cb_entryCreatedDate = '2018-07-30 17:39', cb_postType = 1;    loadViewCount(cb_entryId);</script><a name="!comments"></a><div id="blog-comments-placeholder"></div><div id="comment_form" class="commentform">    <a name="commentform"></a>    <div id="divCommentShow"></div>    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>    <div id="comment_form_container"></div>    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>    <div id="ad_t2"></div>    <div id="opt_under_post"></div>    <div id="cnblogs_c1" class="c_ad_block">        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>    </div>    <div id="under_post_news"></div>    <div id="cnblogs_c2" class="c_ad_block">        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>    </div>    <div id="under_post_kb"></div>    <div id="HistoryToday" class="c_ad_block"></div>    <script type="text/javascript">       var commentManager = new blogCommentManager();       commentManager.renderComments(0);       fixPostBody();       deliverBigBanner();setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();       deliverC1C2();       loadNewsAndKb();       loadBlogSignature();LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);       loadOptUnderPost();       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);   </script></div></div><!--end: forFlow --></div><!--end: mainContent 主体内容容器--><div id="sideBar"><div id="sideBarMain"><div id="sidebar_news" class="newsItem">            <script>loadBlogNews();</script></div><div id="sidebar_ad"></div><div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script><div id="leftcontentcontainer"><div id="blog-sidecolumn"></div>                    <script>loadBlogSideColumn();</script></div></div><!--end: sideBarMain --></div><!--end: sideBar 侧边栏容器 --><div class="clear"></div></div><!--end: main --><div class="clear"></div><div id="footer"><!--done-->Copyright &copy; 2020 废物大师兄<br /><span id="poweredby">Powered by .NET 5.0.0-rc.2.20475.5 on Kubernetes</span></div><!--end: footer --></div><!--end: home 自定义的最大容器 -->    <div id="page_end_html">        <img src="https://files.cnblogs.com/files/cjsblog/reward.bmp" class="journal-reward" /><script type="text/javascript" src="https://files.cnblogs.com/files/cjsblog/mycnblogs.js"></script><script type="text/javascript" src="https://files.cnblogs.com/files/cjsblog/love.js"></script><script type="text/javascript" src="https://files.cnblogs.com/files/cjsblog/flutter-hearts-zmt.js" charset="utf-8"></script><script type="text/javascript" src="https://blog-static.cnblogs.com/files/cjsblog/tctip-1.0.3.min.js"></script><script>    new tctip({        top: '20%',        button: {        id: 9,        type: 'zanzhu'    },    list: [    {        type: 'alipay',        qrImg: 'https://files-cdn.cnblogs.com/files/cjsblog/alipay.bmp'    }, {        type: 'wechat',        qrImg: 'https://files-cdn.cnblogs.com/files/cjsblog/wechat.bmp'    }    ]  }).init()</script>    </div></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AE%97%E6%B3%95/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>算法题目自写答案：</strong></p><h3 id="第一章、基础编程模型"><a href="#第一章、基础编程模型" class="headerlink" title="第一章、基础编程模型"></a>第一章、基础编程模型</h3><p><strong>1.1.19：</strong></p><p>使用数组存储数据，来减少递归的次数，达到减少时间的目的；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//③==================================</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">long</span>[] l = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">93</span>];</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    l[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 带有缓存的方法，比fibRec方法性能好很多</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">fibBuffRec</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">1</span> || num &gt; <span class="number">92</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l[num] == <span class="number">0</span>)</span><br><span class="line">        l[num] = fibBuffRec(num - <span class="number">1</span>) + fibBuffRec(num - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> l[num];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//④==================================</span></span><br><span class="line"><span class="keyword">static</span> List&lt;BigDecimal&gt; list = <span class="keyword">new</span> ArrayList&lt;BigDecimal&gt;(<span class="number">93</span>);</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    list.add(BigDecimal.ZERO);</span><br><span class="line">    list.add(BigDecimal.ONE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1，2，3，4，5，6， 7 ，8 </span></span><br><span class="line"><span class="comment">* 1，1，2，3，5，8，13，21</span></span><br><span class="line"><span class="comment">* 支持num超过92的超大型数字，使用了ArrayList进行缓存以提高性能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title">fibBig</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> list.get(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (list.size() &lt;= num)</span><br><span class="line">        list.add(fibBig(num - <span class="number">1</span>).add(fibBig(num - <span class="number">2</span>)));</span><br><span class="line">    <span class="keyword">return</span> list.get(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1.1.20：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">exR</span> <span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">double</span> sum=<span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=x ; i++) &#123;</span><br><span class="line">            sum+=Math.log (i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>1.1.24:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">System.out.println (exR (<span class="number">1111111</span>, <span class="number">1234567</span>));</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">exR</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line">            c = x;</span><br><span class="line">            x = y;</span><br><span class="line">            y = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> r;</span><br><span class="line">            r=x%y;</span><br><span class="line">            <span class="keyword">if</span> (r&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                x=y;</span><br><span class="line">                y=r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (r==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>1.1.30：</strong></p><p>需要明白的一点是，Boolean的默认值是false，所以我们再写的时候，就只要声明他的特殊情况就可以了，就是<strong>i,j互为质数的时候输出true</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">boolean</span>[][] booleans = check (<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">boolean</span>[] aBoolean : booleans) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">boolean</span> b : aBoolean) &#123;</span><br><span class="line">                System.out.println (b);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span>[][] check (<span class="keyword">int</span> x) &#123;</span><br><span class="line">        <span class="keyword">boolean</span>[][] bool = <span class="keyword">new</span> <span class="keyword">boolean</span>[x][x];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; x; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; x; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (exR (i, j) == <span class="number">1</span>) &#123;</span><br><span class="line">                    bool[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">exR</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line">            c = x;</span><br><span class="line">            x = y;</span><br><span class="line">            y = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> r;</span><br><span class="line">            r = x % y;</span><br><span class="line">            <span class="keyword">if</span> (r &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                x = y;</span><br><span class="line">                y = r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (r == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>1.1.33</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span>[][] x = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">double</span>[][] y = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">double</span>[][] mult = mult (x, y);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span>[] doubles : mult) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">double</span> aDouble : doubles) &#123;</span><br><span class="line">                System.out.println (aDouble);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x x向量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y y向量</span></span><br><span class="line"><span class="comment">     *          x*y=x[1]*y[1]+x[2]*y[2]+...x[i]*y[i]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">dot</span> <span class="params">(<span class="keyword">double</span>[] x, <span class="keyword">double</span>[] y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x.length != y.length) &#123;</span><br><span class="line">            System.err.println (<span class="string">&quot;两个向量长度不一致&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.length; i++) &#123;</span><br><span class="line">            sum += x[i] * y[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a 矩阵a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b 矩阵b</span></span><br><span class="line"><span class="comment">     *          只有当a的行等于b的列的时候，才可以进行矩阵的相乘</span></span><br><span class="line"><span class="comment">     *          公式：c[][]=a[i][j]*b[j][i],就是矩阵的行去和另一个矩阵的列相乘并求和</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[][] mult (<span class="keyword">double</span>[][] a, <span class="keyword">double</span>[][] b) &#123;</span><br><span class="line">        <span class="keyword">double</span>[][] doubles = <span class="keyword">new</span> <span class="keyword">double</span>[a.length][a.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;a.length ; k++) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        doubles[i][k] += a[i][j] * b[j][i];</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">                        System.out.println (<span class="string">&quot;你输入的矩阵不一样&quot;</span>);</span><br><span class="line">                        doubles = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> doubles;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8E%9F%E7%A0%81%E5%88%86%E6%9E%90/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8E%9F%E7%A0%81%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h1><h2 id="interface-Predicate-test"><a href="#interface-Predicate-test" class="headerlink" title="interface Predicate:test()"></a>interface Predicate<T>:test()</h2><p><strong>断言性接口：Predicate 主要用到test方法</strong> 其中参数t为输入参数，如果输入参数符合断言则返回true，否则false</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Predicate&lt;ArrayList&lt;Object&gt;&gt; fun= (obj)-&gt;&#123;<span class="keyword">return</span> obj.size ()==<span class="number">0</span> ;&#125;;</span><br><span class="line">System.out.println (fun.test (<span class="keyword">new</span> ArrayList&lt;&gt; ()));</span><br></pre></td></tr></table></figure><h2 id="interface-Consumer-accept"><a href="#interface-Consumer-accept" class="headerlink" title="interface Consumer:accept()"></a>interface Consumer<T>:accept()</h2><p><strong>消费性接口：Consumer</strong>  只接收一个参数t，但是没有返回值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Consumer&lt;String&gt; fun=(object)-&gt;&#123;</span><br><span class="line">    System.out.println (object);&#125;;</span><br><span class="line">fun.accept (<span class="string">&quot;string&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="interface-Function-lt-T-R-gt-apply"><a href="#interface-Function-lt-T-R-gt-apply" class="headerlink" title="interface Function&lt;T, R&gt;:apply()"></a>interface Function&lt;T, R&gt;:apply()</h2><p><strong>功能性接口：Function</strong> 接收一个功能参数t，并返回一个功能结果R。</p><figure class="highlight java"><figcaption><span>\</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Function&lt;String,String&gt; fun=(obj)-&gt;obj.substring (<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">String s=<span class="string">&quot;s.string&quot;</span>;</span><br><span class="line">System.out.println (fun.apply (s));</span><br></pre></td></tr></table></figure><h2 id="interface-Supplier-get"><a href="#interface-Supplier-get" class="headerlink" title="interface Supplier:get()"></a>interface Supplier<T>:get()</h2><p><strong>供给性接口：Supplier 不接收任何参数 但有返回值</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Supplier&lt;String&gt; sup=()-&gt;<span class="string">&quot;sss&quot;</span>;</span><br><span class="line">System.out.println (sup.get ());</span><br></pre></td></tr></table></figure><h1 id="集合类"><a href="#集合类" class="headerlink" title="集合类"></a>集合类</h1><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><p><strong>结构：</strong></p><p><img src="../../%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/img/ArrayList.png"></p><p>其中的RandomAccess只是一个起到标记的作用的接口</p><h5 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">8683452581122892189L</span>;</span><br><span class="line"><span class="comment">//初始化容量</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_CAPACITY = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//空集合</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Object[] EMPTY_ELEMENTDATA = &#123;&#125;;</span><br><span class="line"><span class="comment">//空集合</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = &#123;&#125;;</span><br><span class="line"><span class="comment">//缓冲区，当添加第一个数值的时候，容量就会变成初始化容量</span></span><br><span class="line"><span class="keyword">transient</span> Object[] elementData;</span><br><span class="line"><span class="comment">//集合的大小</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size;</span><br></pre></td></tr></table></figure><p><strong>关于hashcode</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> hashCode = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (E e : <span class="keyword">this</span>)</span><br><span class="line">            hashCode = <span class="number">31</span>*hashCode + (e==<span class="keyword">null</span> ? <span class="number">0</span> : e.hashCode());</span><br><span class="line">        <span class="keyword">return</span> hashCode;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>如果集合的容量是空的话，那么hashcode就是1；</strong></p><p>关于add:</p><p><img src="../../%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/img/list%E6%B7%BB%E5%8A%A0%E6%9C%BA%E5%88%B6.png"></p><p>扩容后，调用底层函数（native）实现数组的拷贝</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h6 id="1-MySQL进入界面"><a href="#1-MySQL进入界面" class="headerlink" title="1.MySQL进入界面"></a>1.MySQL进入界面</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p123456;</span><br></pre></td></tr></table></figure><h6 id="2-修改宝塔密码"><a href="#2-修改宝塔密码" class="headerlink" title="2.修改宝塔密码"></a>2.修改宝塔密码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;www&#x2F;server&#x2F;panel &amp;&amp; python tools.py panel+密码</span><br></pre></td></tr></table></figure><h6 id="3-数据库高级账户密码"><a href="#3-数据库高级账户密码" class="headerlink" title="3.数据库高级账户密码"></a>3.数据库高级账户密码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">高级账号：saxon+19990707Ms</span><br></pre></td></tr></table></figure><h6 id="4-云服务器的外部网址"><a href="#4-云服务器的外部网址" class="headerlink" title="4.云服务器的外部网址"></a>4.云服务器的外部网址</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com</span><br></pre></td></tr></table></figure><h6 id="5-workbench密码"><a href="#5-workbench密码" class="headerlink" title="5.workbench密码"></a>5.workbench密码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root：19990707Ms</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/VUE/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/VUE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h2><p>vue文件初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack <span class="string">&quot;Demo01&quot;</span></span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="一、vue基本语法"><a href="#一、vue基本语法" class="headerlink" title="一、vue基本语法"></a>一、vue基本语法</h2><h4 id="1-if"><a href="#1-if" class="headerlink" title="1.if"></a>1.if</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--控制显示的条件 if-else条件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;a&#x27; &quot;</span>&gt;</span>我是a的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;b&#x27; &quot;</span>&gt;</span>我是b的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;c&#x27; &quot;</span>&gt;</span>我是c的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="string">&#x27;a&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-if-else"><a href="#2-if-else" class="headerlink" title="2.if else"></a>2.if else</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--控制显示的条件 if-else条件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;a&#x27; &quot;</span>&gt;</span>我是a的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>我是b的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="string">&#x27;a&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-if-else-if-else"><a href="#3-if-else-if-else" class="headerlink" title="3.if else if else"></a>3.if else if else</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--控制显示的条件 if-else条件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span> &gt;</span>我是真的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;false&quot;</span> &gt;</span>我是假的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="literal">true</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-foreach"><a href="#4-foreach" class="headerlink" title="4.foreach"></a>4.foreach</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--循环遍历--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in todos&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app-4&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            todos: [</span><br><span class="line"><span class="javascript">                &#123; <span class="attr">text</span>: <span class="string">&#x27;学习 JavaScript&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">                &#123; <span class="attr">text</span>: <span class="string">&#x27;学习 Vue&#x27;</span> &#125;,</span></span><br><span class="line"><span class="javascript">                &#123; <span class="attr">text</span>: <span class="string">&#x27;整个牛项目&#x27;</span> &#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、vue绑定事件"><a href="#二、vue绑定事件" class="headerlink" title="二、vue绑定事件"></a>二、vue绑定事件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;sayHi&quot;</span>&gt;</span>点击</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="literal">true</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:</span><br><span class="line">            &#123;</span><br><span class="line"><span class="javascript">                sayHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="built_in">this</span>.type)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>双向绑定</p><p>1.input=text</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;type&quot;</span>/&gt;</span>&#123;&#123;type&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            type:<span class="string">&quot;&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-model ：视图绑定对象</p>:获得值；<p>这个type的名字可以是任意的，也可以是节点名字attr();例如select多选框的check属性等；</p><p>2.select-option</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    I am<span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;type&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span>man<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>&gt;</span>woman<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    &#123;&#123;type&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            type:<span class="string">&quot;man&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.input=radio</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> &gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span>man</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>&gt;</span>woman</span><br><span class="line">    &#123;&#123;checked&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            checked: <span class="string">&quot;&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、vue组件"><a href="#三、vue组件" class="headerlink" title="三、vue组件"></a>三、vue组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">saxon</span> <span class="attr">v-for</span>=<span class="string">&quot;item in texts&quot;</span> <span class="attr">v-bind:sa</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">saxon</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;saxon&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        props:[<span class="string">&#x27;sa&#x27;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:&#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">sa</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#x27;,</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        data:&#123;<span class="attr">texts</span>:[<span class="string">&quot;java&quot;</span>,<span class="string">&quot;saxon&quot;</span>]&#125;</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><p><strong>1.vue对象里面要有一个data来传入值；</strong></p><p><strong>2.组件的格式是Vue.component(name,{propertirs}),没有=号</strong></p><p><strong>3.通过props传入值，使用参数的名字和props的名字一样</strong></p><h2 id="四、axios"><a href="#四、axios" class="headerlink" title="四、axios"></a>四、axios</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue&quot;</span>&gt;</span>&#123;&#123;info.name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#vue&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span>&#123;</span></span><br><span class="line">              info:&#123;</span><br><span class="line"><span class="javascript">                  name:<span class="literal">null</span></span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            axios.get(<span class="string">&#x27;date.json&#x27;</span>).then(<span class="function"><span class="params">Response</span>=&gt;</span><span class="built_in">this</span>.info=Response.data);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要导入包：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过一个函数data(),返回数据，注意的是，接收数据的名字和json里面的名字一样，不然接收不到；</p><p>一般格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.get(&#x27;date.json&#x27;).then(Response=&gt;this.info=Response.data);</span><br></pre></td></tr></table></figure><p>类似于Ajax，他的结果响应的也是一个xhr请求；</p><h2 id="五、计算属性"><a href="#五、计算属性" class="headerlink" title="五、计算属性"></a>五、计算属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;saxon2()&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;saxon1&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#vue&quot;</span>,</span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            saxon2: <span class="function"><span class="keyword">function</span> <span class="title">time</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">Date</span>.now();</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            saxon1: <span class="function"><span class="keyword">function</span> <span class="title">time</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">this</span>.message;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">Date</span>.now();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个里面看起来结果是一样的，但是实际上methods是一个方法，就像是student.study()，而我们的computed是一个属性，就像是student.name一样,计算属性就像是一个缓存，只要外界不变，他就会一直存在，不需要频繁的刷新,就像上面的message一样，只要它的值不变，那么计算属性的值就不会变，从而减少浏览器的开销；</p><p>函数的写法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">saxon1: function time() &#123;</span><br><span class="line">             this.message;</span><br><span class="line">               return Date.now();</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>使用的话直接使用函数名就可以了；</p><h2 id="六、slot插槽"><a href="#六、slot插槽" class="headerlink" title="六、slot插槽"></a>六、slot插槽</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo</span> <span class="attr">id</span>=<span class="string">&quot;vue&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">&quot;todo-title&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">slot</span>=<span class="string">&quot;todo-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in sentence&quot;</span> <span class="attr">v-bind:item</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;todo&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">&quot;&lt;div&gt;&quot;</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            &quot;<span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;todo-title&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>&quot;+</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;ul&gt;&quot;</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            &quot;<span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;todo-item&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>&quot;+</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;/ul&gt;&quot;</span>+</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;/div&gt;&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;todo-title&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        props:[<span class="string">&quot;title&quot;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:&quot;<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">title</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;todo-item&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&quot;item&quot;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:&quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#vue&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            title: <span class="string">&quot;saxon&quot;</span>,</span></span><br><span class="line"><span class="javascript">            sentence:[<span class="string">&quot;我是谁&quot;</span>,<span class="string">&quot;我来自何方&quot;</span>,<span class="string">&quot;我到底帅不帅&quot;</span>]</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加一个插槽，让插槽部分代表组件的内容，可以定向删除；</p><p>例如上面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;slot name&#x3D;&#39;todo-title&#39;&gt;&lt;&#x2F;slot&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&quot;todo-title&quot;,&#123;</span><br><span class="line">        props:[&quot;title&quot;],</span><br><span class="line">        template:&quot;&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;&#x2F;div&gt;&quot;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>就会用<div></div>填充slot所在的位置；</p><p><strong>==在写组件的时候，prop一定要用[]括起来==</strong></p><p>组件与插件之间使用：在组件描述中使用name来连接，标签里面使用slot连接；</p><h2 id="七、自定义事件"><a href="#七、自定义事件" class="headerlink" title="七、自定义事件"></a>七、自定义事件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo</span> <span class="attr">id</span>=<span class="string">&quot;vue&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">&quot;todo-title&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">slot</span>=<span class="string">&quot;todo-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(it,index) in items&quot;</span> <span class="attr">v-bind:item</span>=<span class="string">&quot;it&quot;</span> <span class="attr">v-bind:index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">v-on:re</span>=<span class="string">&quot;removeitem(index)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;todo&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">&quot;&lt;div&gt;&quot;</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            &quot;<span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;todo-title&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>&quot;+</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;ul&gt;&quot;</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            &quot;<span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;todo-item&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>&quot;+</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;/ul&gt;&quot;</span>+</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;/div&gt;&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;todo-title&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        props:[<span class="string">&quot;title&quot;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:&quot;<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">title</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;todo-item&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&quot;item&quot;</span>,<span class="string">&quot;index&quot;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:&quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">index</span>&#125;&#125;</span><span class="template-variable">&#123;&#123;<span class="name">item</span>&#125;&#125;</span><span class="xml"> <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;remove&#x27;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;,</span></span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            remove:<span class="function"><span class="keyword">function</span> (<span class="params">index</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&quot;re&quot;</span>,index);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm=<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#vue&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            title: <span class="string">&quot;saxon&quot;</span>,</span></span><br><span class="line"><span class="javascript">            items:[<span class="string">&quot;我是谁&quot;</span>,<span class="string">&quot;我来自何方&quot;</span>,<span class="string">&quot;我到底帅不帅&quot;</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            removeitem:<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.items.splice(index,<span class="number">1</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于我们的vue.component与new vue之间不可以直接进行引用，组件也不可以直接操作我们的new vue里面的属性，需要通过一个中间变量让他们之间的方法可以流通起来；</p><p>就是说，当我们引入中间事件后，可以让component可以使用new vue里面的方法和操作里面的数据；</p><p><strong>第一步：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var vm=new Vue(&#123;</span><br><span class="line">       el:&quot;#vue&quot;,</span><br><span class="line">       data:&#123;</span><br><span class="line">           title: &quot;saxon&quot;,</span><br><span class="line">           items:[&quot;我是谁&quot;,&quot;我来自何方&quot;,&quot;我到底帅不帅&quot;]</span><br><span class="line">       &#125;,</span><br><span class="line">       methods:&#123;</span><br><span class="line">           removeitem:function (index) &#123;</span><br><span class="line">               this.items.splice(index,1)</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><p>在methods里面操作数据，方法名叫做removeitem;</p><p><strong>第二步：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&quot;todo-item&quot;,&#123;</span><br><span class="line">       props: [&quot;item&quot;,&quot;index&quot;],</span><br><span class="line">       template:&quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;&#123;&#123;item&#125;&#125; <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;remove&#x27;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;,</span><br><span class="line">       methods: &#123;</span><br><span class="line">           remove:function (index)&#123;</span><br><span class="line">               this.$emit(&quot;re&quot;,index);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><p>完了之后，我们发现他们之间连接不起来，所以我们要用一个中间变量将他们连接起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-on:re&#x3D;&quot;removeitem(index)&quot;</span><br></pre></td></tr></table></figure><p>这里的re就是我们自定义变量的名字，里面就是我们实际上的业务，就是在new vue里面进行的一个操作；</p><p>通过下面的代码进行连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$emit(&quot;re&quot;,index);</span><br></pre></td></tr></table></figure><p>前面就是我们自己取得方法名，后面就是这个的参数</p><p>这样就实现了他们之间的组件使用对象的功能；</p><h2 id="八、vue-routes"><a href="#八、vue-routes" class="headerlink" title="八、vue-routes"></a>八、vue-routes</h2><p>对页面进行一个跳转，相当于spring里面的requestMapping；</p><h5 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h5><p>先写一个组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;h1&gt;我是你爸爸&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;saxon&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h5><p>index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> saxon <span class="keyword">from</span> <span class="string">&quot;../components/saxon.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: [&#123;</span><br><span class="line">    path: <span class="string">&#x27;/saxon&#x27;</span>,</span><br><span class="line">    component:saxon</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对组件进行一个注册，<strong>path</strong>就是我们请求的路径，component表示的是我们的组件，就是跳转的页面；</p><h5 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h5><p>修改main.js,将我们的routes 注册使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The Vue build version to load with the `import` command</span></span><br><span class="line"><span class="comment">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="第四步："><a href="#第四步：" class="headerlink" title="第四步："></a>第四步：</h5><p>使用以下代码对我们的routes进行一个输出，一定要有view 不然的话就无法显示我们的页面；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to&#x3D;&quot;&#x2F;saxon&quot;&gt;点击&lt;&#x2F;router-link&gt;</span><br><span class="line">&lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;我是谁&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;saxon&quot;&gt;点击&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;App&#39;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: &#39;Avenir&#39;, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==特别注意：==</strong></p><ul><li>在写组件的时候，<strong>routes</strong>，在index.js里面的话，一定要写对单词</li><li>每次要使用组件的时候就要把我们的组件进行一个import；</li></ul><h2 id="九、Element-UI"><a href="#九、Element-UI" class="headerlink" title="九、Element-UI"></a>九、Element-UI</h2><p>首先初始化项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack hello-vue</span><br></pre></td></tr></table></figure><p>在进入项目后，输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置路由</span></span><br><span class="line">npm install vue-router --save-dev</span><br><span class="line"><span class="comment">#下载element-ui</span></span><br><span class="line">npm i element-ui -S</span><br><span class="line"><span class="comment">#下载sass解析器</span></span><br><span class="line">cnpm install sass-loader node-sass --save-de</span><br></pre></td></tr></table></figure><h2 id="十、vue与后台结合"><a href="#十、vue与后台结合" class="headerlink" title="十、vue与后台结合"></a>十、vue与后台结合</h2><p>使用axios</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;首页+&#123;&#123;info.name&#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;axios&#x2F;dist&#x2F;axios.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Axios from &quot;axios&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;first&quot;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      info:&#123;</span><br><span class="line">        name:null</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    Axios.get(&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;Saxon_SMBMS_war&#x2F;check&quot;).then(Response&#x3D;&gt;this.info.name&#x3D;Response.data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="复习攻略"><a href="#复习攻略" class="headerlink" title="复习攻略"></a>复习攻略</h2><h3 id="一、双向绑定"><a href="#一、双向绑定" class="headerlink" title="一、双向绑定"></a>一、双向绑定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div v-bind:[field]&#x3D;&quot;style&quot;&gt;我是你爹&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;bool&quot;&gt;&#123;&#123;getUser&#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo01&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      style: &quot;color: red&quot;,</span><br><span class="line">      bool:&quot;user&quot;,</span><br><span class="line">      saxon:&quot;id&quot;,</span><br><span class="line">      boolean:true,</span><br><span class="line">      field:&quot;style&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    getUser:function () &#123;</span><br><span class="line">      return this.bool;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接使用v-model绑定data()里面的数据</p><h2 id="回看官方文档"><a href="#回看官方文档" class="headerlink" title="回看官方文档"></a>回看官方文档</h2><h3 id="获得data信息"><a href="#获得data信息" class="headerlink" title="获得data信息"></a>获得data信息</h3><p>Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var app &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#39;Hello Vue!&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="v-bind-绑定标签属性"><a href="#v-bind-绑定标签属性" class="headerlink" title="v-bind 绑定标签属性"></a>v-bind 绑定标签属性</h3><p>除了文本插值，我们还可以像这样来绑定元素 attribute：简写成==<strong>:</strong>==,冒号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-2&quot;&gt;</span><br><span class="line">  &lt;span v-bind:title&#x3D;&quot;message&quot;&gt;</span><br><span class="line">    鼠标悬停几秒钟查看此处动态绑定的提示信息！</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var app2 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#app-2&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#39;页面加载于 &#39; + new Date().toLocaleString()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>该指令的意思是：“将这个元素节点的 <code>title</code> attribute 和 Vue 实例的 <code>message</code> property 保持一致”。</p><h3 id="条件与循环"><a href="#条件与循环" class="headerlink" title="条件与循环"></a>条件与循环</h3><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><p>控制切换一个元素是否显示也相当简单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-3&quot;&gt;</span><br><span class="line">  &lt;p v-if&#x3D;&quot;seen&quot;&gt;现在你看到我了&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var app3 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#app-3&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    seen: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><p><code>v-for</code> 指令可以绑定数组的数据来渲染一个项目列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-4&quot;&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-for&#x3D;&quot;todo in todos&quot;&gt;</span><br><span class="line">      &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">    &lt;&#x2F;li&gt;</span><br><span class="line">  &lt;&#x2F;ol&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var app4 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#app-4&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    todos: [</span><br><span class="line">      &#123; text: &#39;学习 JavaScript&#39; &#125;,</span><br><span class="line">      &#123; text: &#39;学习 Vue&#39; &#125;,</span><br><span class="line">      &#123; text: &#39;整个牛项目&#39; &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="绑定方法"><a href="#绑定方法" class="headerlink" title="绑定方法"></a>绑定方法</h3><p>为了让用户和你的应用进行交互，我们可以用 <code>v-on</code> 指令添加一个事件监听器，通过它调用在 Vue 实例中定义的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-5&quot;&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;button v-on:click&#x3D;&quot;reverseMessage&quot;&gt;反转消息&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var app5 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#app-5&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#39;Hello Vue.js!&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reverseMessage: function () &#123;</span><br><span class="line">      this.message &#x3D; this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h3><p>Vue 还提供了 <code>v-model</code> 指令，它能轻松实现表单输入和应用状态之间的双向绑定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-6&quot;&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;input v-model&#x3D;&quot;message&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var app6 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#app-6&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#39;Hello Vue!&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>一旦绑定后，改变就一起改变</p><h3 id="关于Vue的生命周期"><a href="#关于Vue的生命周期" class="headerlink" title="关于Vue的生命周期"></a>关于Vue的生命周期</h3><p>每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做<strong>生命周期钩子</strong>的函数，这给了用户在不同阶段添加自己的代码的机会。</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/lifecycle.png?Expires=1607594046&OSSAccessKeyId=TMP.3KeVgsvXyp9NuXuJxVeQjYxDoVumPA4WvtBcedctpEgu7YBEYBdfn4F4Zu7SFXr47byJNcv3tejmPrYdjYqpt4VDP8pVt7&Signature=zpRHpDh/7/Vc3z8ksXpTxdAJRlo=&versionId=CAEQIhiBgICj.bCvshciIDExM2IzYzUzYTEwODRmY2RhZTFiOWI4ZjcxZGYyZTk0&response-content-type=application/octet-stream" alt="Vue 实例生命周期"></p><h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a><a href="https://cn.vuejs.org/v2/guide/syntax.html#%E5%8A%A8%E6%80%81%E5%8F%82%E6%95%B0">动态参数</a></h3><p>从 2.6.0 开始，可以用方括号括起来的 JavaScript 表达式作为一个指令的参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">注意，参数表达式的写法存在一些约束，如之后的“对动态参数表达式的约束”章节所述。</span><br><span class="line">--&gt;</span><br><span class="line">&lt;a v-bind:[attributeName]&#x3D;&quot;url&quot;&gt; ... &lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>这里的 <code>attributeName</code> 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。例如，如果你的 Vue 实例有一个 <code>data</code> property <code>attributeName</code>，其值为 <code>&quot;href&quot;</code>，那么这个绑定将等价于 <code>v-bind:href</code>。</p><p>同样地，你可以使用动态参数为一个动态的事件名绑定处理函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a v-on:[eventName]&#x3D;&quot;doSomething&quot;&gt; ... &lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>在这个示例中，当 <code>eventName</code> 的值为 <code>&quot;focus&quot;</code> 时，<code>v-on:[eventName]</code> 将等价于 <code>v-on:focus</code>。</p><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a><a href="https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7">计算属性</a></h3><p>模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;example&quot;&gt;</span><br><span class="line">  &#123;&#123; message.split(&#39;&#39;).reverse().join(&#39;&#39;) &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>在这个地方，模板不再是简单的声明式逻辑。你必须看一段时间才能意识到，这里是想要显示变量 <code>message</code> 的翻转字符串。当你想要在模板中多包含此处的翻转字符串时，就会更加难以处理。</p><p>所以，对于任何复杂逻辑，你都应当使用<strong>计算属性</strong>。</p><h3 id="基础例子"><a href="#基础例子" class="headerlink" title="基础例子"></a><a href="https://cn.vuejs.org/v2/guide/computed.html#%E5%9F%BA%E7%A1%80%E4%BE%8B%E5%AD%90">基础例子</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;example&quot;&gt;</span><br><span class="line">  &lt;p&gt;Original message: &quot;&#123;&#123; message &#125;&#125;&quot;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;Computed reversed message: &quot;&#123;&#123; reversedMessage &#125;&#125;&quot;&lt;&#x2F;p&gt;&#x2F;&#x2F;这里括号里面的取值函数和reversedMessage一样</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">var vm &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#example&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#39;Hello&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    &#x2F;&#x2F; 计算属性的 getter</span><br><span class="line">    reversedMessage: function () &#123;</span><br><span class="line">      &#x2F;&#x2F; &#96;this&#96; 指向 vm 实例</span><br><span class="line">      return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果：</p><p>Original message: “Hello”</p><p>Computed reversed message: “olleH”</p><p>这里我们声明了一个计算属性 <code>reversedMessage</code>。我们提供的函数将用作 property <code>vm.reversedMessage</code> 的 getter 函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">console.log(vm.reversedMessage) &#x2F;&#x2F; &#x3D;&gt; &#39;olleH&#39;</span><br><span class="line">vm.message &#x3D; &#39;Goodbye&#39;</span><br><span class="line">console.log(vm.reversedMessage) &#x2F;&#x2F; &#x3D;&gt; &#39;eybdooG&#39;</span><br></pre></td></tr></table></figure><p>你可以打开浏览器的控制台，自行修改例子中的 vm。<code>vm.reversedMessage</code> 的值始终取决于 <code>vm.message</code> 的值。</p><p>你可以像绑定普通 property 一样在模板中绑定计算属性。Vue 知道 <code>vm.reversedMessage</code> 依赖于 <code>vm.message</code>，因此当 <code>vm.message</code> 发生改变时，所有依赖 <code>vm.reversedMessage</code> 的绑定也会更新。而且最妙的是我们已经以声明的方式创建了这种依赖关系：计算属性的 getter 函数是没有副作用 (side effect) 的，这使它更易于测试和理解。就是计算属性是有缓存的，可以快捷方便调用数据；<strong>这个句子说明如果我们的数据渲染次数不多的话，我们可以使用计算属性，因为在这个数据不变的时候，再次使用他不会改变</strong></p><p>计算逻辑的名字和我们的函数名一样</p><h3 id="原始-HTML"><a href="#原始-HTML" class="headerlink" title="原始 HTML"></a><a href="https://cn.vuejs.org/v2/guide/syntax.html#%E5%8E%9F%E5%A7%8B-HTML">原始 HTML</a></h3><p>双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 <a href="https://cn.vuejs.org/v2/api/#v-html"><code>v-html</code> 指令</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Using mustaches: &#123;&#123; rawHtml &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;Using v-html directive: &lt;span v-html&#x3D;&quot;rawHtml&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>Using mustaches: <span style="color: red">This should be red.</span></p><p>Using v-html directive: This should be red.</p><p>这个 <code>span</code> 的内容将会被替换成为 property 值 <code>rawHtml</code>，直接作为 HTML——会忽略解析 property 值中的数据绑定。注意，你不能使用 <code>v-html</code> 来复合局部模板，因为 Vue 不是基于字符串的模板引擎。反之，对于用户界面 (UI)，组件更适合作为可重用和可组合的基本单位。</p><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a><a href="https://cn.vuejs.org/v2/guide/syntax.html#%E6%8C%87%E4%BB%A4">指令</a></h3><p>指令 (Directives) 是带有 <code>v-</code> 前缀的特殊 attribute。指令 attribute 的值预期是<strong>单个 JavaScript 表达式</strong> (<code>v-for</code> 是例外情况，稍后我们再讨论)。指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。回顾我们在介绍中看到的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-if&#x3D;&quot;seen&quot;&gt;现在你看到我了&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>这里，<code>v-if</code> 指令将根据表达式 <code>seen</code> 的值的真假来插入/移除 <code>&lt;p&gt;</code> 元素。</p><p>我们可以传给 <code>v-bind:class</code> 一个对象，以动态地切换 class：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class&#x3D;&quot;&#123; active: isActive &#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>上面的语法表示 <code>active</code> 这个 class 存在与否将取决于数据 property <code>isActive</code> 的 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy">truthiness</a>。</p><p>你可以在对象中传入更多字段来动态切换多个 class。此外，<code>v-bind:class</code> 指令也可以与普通的 class attribute 共存。当有如下模板：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">  class&#x3D;&quot;static&quot;</span><br><span class="line">  v-bind:class&#x3D;&quot;&#123; active: isActive, &#39;text-danger&#39;: hasError &#125;&quot;</span><br><span class="line">&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>和如下 data：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  isActive: true,</span><br><span class="line">  hasError: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果渲染为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;static active&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>当 <code>isActive</code> 或者 <code>hasError</code> 变化时，class 列表将相应地更新。例如，如果 <code>hasError</code> 的值为 <code>true</code>，class 列表将变为 <code>&quot;static active text-danger&quot;</code>。</p><p>绑定的数据对象不必内联定义在模板里：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class&#x3D;&quot;classObject&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">data: &#123;</span><br><span class="line">  classObject: &#123;</span><br><span class="line">    active: true,</span><br><span class="line">    &#39;text-danger&#39;: false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>渲染的结果和上面一样。我们也可以在这里绑定一个返回对象的<a href="https://cn.vuejs.org/v2/guide/computed.html">计算属性</a>。这是一个常用且强大的模式：</p><h3 id="数组语法"><a href="#数组语法" class="headerlink" title="数组语法"></a><a href="https://cn.vuejs.org/v2/guide/class-and-style.html#%E6%95%B0%E7%BB%84%E8%AF%AD%E6%B3%95">数组语法</a></h3><p>我们可以把一个数组传给 <code>v-bind:class</code>，以应用一个 class 列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class&#x3D;&quot;[red]&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">data: &#123;</span><br><span class="line">  red:[activeClass: &#39;active&#39;,</span><br><span class="line">  errorClass: &#39;text-danger&#39;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>渲染为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;active text-danger&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>如果你也想根据条件切换列表中的 class，可以用三元表达式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class&#x3D;&quot;[isActive ? activeClass : &#39;&#39;, errorClass]&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>这样写将始终添加 <code>errorClass</code>，但是只有在 <code>isActive</code> 是 truthy[<a href="https://cn.vuejs.org/v2/guide/class-and-style.html#footnote-1">1]</a> 时才添加 <code>activeClass</code>。</p><p>不过，当有多个条件 class 时这样写有些繁琐。所以在数组语法中也可以使用对象语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class&#x3D;&quot;[&#123; active: isActive &#125;, errorClass]&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h2 id="绑定内联样式"><a href="#绑定内联样式" class="headerlink" title="绑定内联样式"></a><a href="https://cn.vuejs.org/v2/guide/class-and-style.html#%E7%BB%91%E5%AE%9A%E5%86%85%E8%81%94%E6%A0%B7%E5%BC%8F">绑定内联样式</a></h2><h3 id="对象语法"><a href="#对象语法" class="headerlink" title="对象语法"></a><a href="https://cn.vuejs.org/v2/guide/class-and-style.html#%E5%AF%B9%E8%B1%A1%E8%AF%AD%E6%B3%95-1">对象语法</a></h3><p><code>v-bind:style</code> 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:style&#x3D;&quot;&#123; color: activeColor, fontSize: fontSize + &#39;px&#39; &#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">data: &#123;</span><br><span class="line">  activeColor: &#39;red&#39;,</span><br><span class="line">  fontSize: 30</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接绑定到一个样式对象通常更好，这会让模板更清晰：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:style&#x3D;&quot;styleObject&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">data: &#123;</span><br><span class="line">  styleObject: &#123;</span><br><span class="line">    color: &#39;red&#39;,</span><br><span class="line">    fontSize: &#39;13px&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的，对象语法常常结合返回对象的计算属性使用。</p><p><strong>如果是下划线的话，我们使用驼峰命名可以自动转换</strong></p><h3 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h3><h2 id="用-v-for-把一个数组对应为一组元素"><a href="#用-v-for-把一个数组对应为一组元素" class="headerlink" title="用 v-for 把一个数组对应为一组元素"></a><a href="https://cn.vuejs.org/v2/guide/list.html#%E7%94%A8-v-for-%E6%8A%8A%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E5%AF%B9%E5%BA%94%E4%B8%BA%E4%B8%80%E7%BB%84%E5%85%83%E7%B4%A0">用 <code>v-for</code> 把一个数组对应为一组元素</a></h2><p><a href="https://learning.dcloud.io/#/?vid=9">观看本节视频讲解</a></p><p>我们可以用 <code>v-for</code> 指令基于一个数组来渲染一个列表。<code>v-for</code> 指令需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是源数据数组，而 <code>item</code> 则是被迭代的数组元素的<strong>别名</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul id&#x3D;&quot;example-1&quot;&gt;</span><br><span class="line">  &lt;li v-for&#x3D;&quot;item in items&quot; :key&#x3D;&quot;item.message&quot;&gt;</span><br><span class="line">    &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  &lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">var example1 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#example-1&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    items: [</span><br><span class="line">      &#123; message: &#39;Foo&#39; &#125;,</span><br><span class="line">      &#123; message: &#39;Bar&#39; &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果：</p><ul><li>Foo</li><li>Bar</li></ul><p>在 <code>v-for</code> 块中，我们可以访问所有父作用域的 property。<code>v-for</code> 还支持一个可选的第二个参数，即当前项的索引。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul id&#x3D;&quot;example-2&quot;&gt;</span><br><span class="line">  &lt;li v-for&#x3D;&quot;(item, index) in items&quot;&gt;</span><br><span class="line">    &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class="line">  &lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">var example2 &#x3D; new Vue(&#123;</span><br><span class="line">  el: &#39;#example-2&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    parentMessage: &#39;Parent&#39;,</span><br><span class="line">    items: [</span><br><span class="line">      &#123; message: &#39;Foo&#39; &#125;,</span><br><span class="line">      &#123; message: &#39;Bar&#39; &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果：</p><ul><li>Parent - 0 - Foo</li><li>Parent - 1 - Bar</li></ul><p>你也可以用 <code>of</code> 替代 <code>in</code> 作为分隔符，因为它更接近 JavaScript 迭代器的语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-for&#x3D;&quot;item of items&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;ul :style&#x3D;&quot;style&quot;&gt;</span><br><span class="line">      &lt;li v-for&#x3D;&quot;person in persons&quot;&gt;&#123;&#123; human.name &#125;&#125;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#123;&#123; person.name &#125;&#125;---&#123;&#123; person.age &#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo08&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      style: &#123;listStyle: &quot;none&quot;&#125;,</span><br><span class="line">      human: &#123;name: &quot;human&quot;, age: 18&#125;,</span><br><span class="line">      persons: &#123;</span><br><span class="line">        student: &#123;name: &quot;saxon&quot;, age: 18&#125;,</span><br><span class="line">        teacher: &#123;name: &quot;teacher&quot;, age: 18&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>你也可以用 <code>v-for</code> 来遍历一个对象的 property。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul id&#x3D;&quot;v-for-object&quot; class&#x3D;&quot;demo&quot;&gt;</span><br><span class="line">  &lt;li v-for&#x3D;&quot;value in object&quot;&gt;</span><br><span class="line">    &#123;&#123; value &#125;&#125;</span><br><span class="line">  &lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#v-for-object&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    object: &#123;</span><br><span class="line">      title: &#39;How to do lists in Vue&#39;,</span><br><span class="line">      author: &#39;Jane Doe&#39;,</span><br><span class="line">      publishedAt: &#39;2016-04-10&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>不要使用对象或数组之类的非基本类型值作为 <code>v-for</code> 的 <code>key</code>。请用字符串或数值类型的值。</strong></p><p><strong>2.2.0+ 的版本里，当在组件上使用 <code>v-for</code> 时，<code>key</code> 现在是必须的。</strong></p><h2 id="表单基础用法"><a href="#表单基础用法" class="headerlink" title="表单基础用法"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95">表单基础用法</a></h2><p><a href="https://learning.dcloud.io/#/?vid=11">观看本节视频讲解</a></p><p>你可以用 <code>v-model</code> 指令在表单 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 及 <code>&lt;select&gt;</code> 元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 <code>v-model</code> 本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。</p><p><code>v-model</code> 会忽略所有表单元素的 <code>value</code>、<code>checked</code>、<code>selected</code> attribute 的初始值而总是将 Vue 实例的数据作为数据来源。你应该通过 JavaScript 在组件的 <code>data</code> 选项中声明初始值。</p><p><code>v-model</code> 在内部为不同的输入元素使用不同的 property 并抛出不同的事件：</p><ul><li>text 和 textarea 元素使用 <code>value</code> property 和 <code>input</code> 事件；</li><li>checkbox 和 radio 使用 <code>checked</code> property 和 <code>change</code> 事件；</li><li>select 字段将 <code>value</code> 作为 prop 并将 <code>change</code> 作为事件。</li></ul><p>对于需要使用<a href="https://zh.wikipedia.org/wiki/%E8%BE%93%E5%85%A5%E6%B3%95">输入法</a> (如中文、日文、韩文等) 的语言，你会发现 <code>v-model</code> 不会在输入法组合文字过程中得到更新。如果你也想处理这个过程，请使用 <code>input</code> 事件。</p><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E6%96%87%E6%9C%AC">文本</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model&#x3D;&quot;message&quot; placeholder&#x3D;&quot;edit me&quot;&gt;</span><br><span class="line">&lt;p&gt;Message is: &#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>Message is: huiohb</p><h3 id="多行文本"><a href="#多行文本" class="headerlink" title="多行文本"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC">多行文本</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;Multiline message is:&lt;&#x2F;span&gt;</span><br><span class="line">&lt;p style&#x3D;&quot;white-space: pre-line;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;textarea v-model&#x3D;&quot;message&quot; placeholder&#x3D;&quot;add multiple lines&quot;&gt;&lt;&#x2F;textarea&gt;</span><br></pre></td></tr></table></figure><p>在文本区域插值 (<code>&lt;textarea&gt;&#123;&#123;text&#125;&#125;&lt;/textarea&gt;</code>) 并不会生效，应用 <code>v-model</code> 来代替。</p><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E5%A4%8D%E9%80%89%E6%A1%86">复选框</a></h3><p>单个复选框，绑定到布尔值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checked&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;checkbox&quot;&gt;&#123;&#123; checked &#125;&#125;&lt;&#x2F;label&gt;</span><br></pre></td></tr></table></figure><p> false</p><p>多个复选框，绑定到同一个数组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;jack&quot; value&#x3D;&quot;Jack&quot; v-model&#x3D;&quot;checkedNames&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;jack&quot;&gt;Jack&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;john&quot; value&#x3D;&quot;John&quot; v-model&#x3D;&quot;checkedNames&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;john&quot;&gt;John&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;mike&quot; value&#x3D;&quot;Mike&quot; v-model&#x3D;&quot;checkedNames&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;mike&quot;&gt;Mike&lt;&#x2F;label&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;span&gt;Checked names: &#123;&#123; checkedNames &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;...&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    checkedNames: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> Jack John Mike<br>Checked names: []</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checked&quot; value&#x3D;&quot;handsome&quot;&gt;帅哥</span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checked&quot; value&#x3D;&quot;beauty&quot;&gt;美女</span><br><span class="line">     &lt;div @keydown.enter&#x3D;&quot;get&quot;&gt;你的选择是&#123;&#123;checked&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo09&quot;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      checked:[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    get()&#123;</span><br><span class="line">      console.log(this.checked)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE">单选按钮</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;example-4&quot;&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;radio&quot; id&#x3D;&quot;one&quot; value&#x3D;&quot;One&quot; v-model&#x3D;&quot;picked&quot;&gt;</span><br><span class="line">  &lt;label for&#x3D;&quot;one&quot;&gt;One&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;radio&quot; id&#x3D;&quot;two&quot; value&#x3D;&quot;Two&quot; v-model&#x3D;&quot;picked&quot;&gt;</span><br><span class="line">  &lt;label for&#x3D;&quot;two&quot;&gt;Two&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;span&gt;Picked: &#123;&#123; picked &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#example-4&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    picked: &#39;&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;check&quot; value&#x3D;&quot;男&quot; v-model&#x3D;&quot;sex&quot;&gt;男</span><br><span class="line">    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;check&quot; value&#x3D;&quot;女&quot; v-model&#x3D;&quot;sex&quot;&gt;女</span><br><span class="line">    &lt;div&gt;你的选择是:&#123;&#123;sex&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo10&quot;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      sex:&quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="选择框"><a href="#选择框" class="headerlink" title="选择框"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E9%80%89%E6%8B%A9%E6%A1%86">选择框</a></h3><p>单选时：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;example-5&quot;&gt;</span><br><span class="line">  &lt;select v-model&#x3D;&quot;selected&quot;&gt;</span><br><span class="line">    &lt;option disabled value&#x3D;&quot;&quot;&gt;请选择&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option&gt;A&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option&gt;B&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option&gt;C&lt;&#x2F;option&gt;</span><br><span class="line">  &lt;&#x2F;select&gt;</span><br><span class="line">  &lt;span&gt;Selected: &#123;&#123; selected &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;...&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    selected: &#39;&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果 <code>v-model</code> 表达式的初始值未能匹配任何选项，<code>&lt;select&gt;</code> 元素将被渲染为“未选中”状态。在 iOS 中，这会使用户无法选择第一个选项。因为这样的情况下，iOS 不会触发 change 事件。因此，更推荐像上面这样提供一个值为空的禁用选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;select name&#x3D;&quot;class&quot; id&#x3D;&quot;class&quot; v-model&#x3D;&quot;select&quot;&gt;</span><br><span class="line">      &lt;option disabled&gt;请选择-----&lt;&#x2F;option&gt;</span><br><span class="line">      &lt;option value&#x3D;&quot;A&quot;&gt;A&lt;&#x2F;option&gt;</span><br><span class="line">      &lt;option value&#x3D;&quot;B&quot;&gt;B&lt;&#x2F;option&gt;</span><br><span class="line">      &lt;option value&#x3D;&quot;C&quot;&gt;C&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;&#x2F;select&gt;</span><br><span class="line">    &#123;&#123; select &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo11&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      select: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>多选时 (绑定到一个数组)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;example-6&quot;&gt;</span><br><span class="line">  &lt;select v-model&#x3D;&quot;selected&quot; multiple style&#x3D;&quot;width: 50px;&quot;&gt;</span><br><span class="line">    &lt;option&gt;A&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option&gt;B&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option&gt;C&lt;&#x2F;option&gt;</span><br><span class="line">  &lt;&#x2F;select&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;span&gt;Selected: &#123;&#123; selected &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#example-6&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    selected: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>用 <code>v-for</code> 渲染的动态选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;select v-model&#x3D;&quot;selected&quot;&gt;</span><br><span class="line">  &lt;option v-for&#x3D;&quot;option in options&quot; v-bind:value&#x3D;&quot;option.value&quot;&gt;</span><br><span class="line">    &#123;&#123; option.text &#125;&#125;</span><br><span class="line">  &lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line">&lt;span&gt;Selected: &#123;&#123; selected &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;...&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    selected: &#39;A&#39;,</span><br><span class="line">    options: [</span><br><span class="line">      &#123; text: &#39;One&#39;, value: &#39;A&#39; &#125;,</span><br><span class="line">      &#123; text: &#39;Two&#39;, value: &#39;B&#39; &#125;,</span><br><span class="line">      &#123; text: &#39;Three&#39;, value: &#39;C&#39; &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;select name&#x3D;&quot;class&quot; id&#x3D;&quot;class&quot; multiple v-model&#x3D;&quot;select&quot;&gt;</span><br><span class="line">      &lt;option disabled&gt;请选择-----&lt;&#x2F;option&gt;</span><br><span class="line">      &lt;option value&#x3D;&quot;A&quot;&gt;A&lt;&#x2F;option&gt;</span><br><span class="line">      &lt;option value&#x3D;&quot;B&quot;&gt;B&lt;&#x2F;option&gt;</span><br><span class="line">      &lt;option value&#x3D;&quot;C&quot;&gt;C&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;&#x2F;select&gt;</span><br><span class="line">    &#123;&#123; select &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo11&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      select: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一般我们在html里面绑定的元素value是字符串，但是在vue里面它可以是用户的属性等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;option v-bind:value&#x3D;&quot;&#123; number: 123 &#125;&quot;&gt;123&lt;&#x2F;option&gt;</span><br></pre></td></tr></table></figure><p>使用json字符串</p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#%E4%BF%AE%E9%A5%B0%E7%AC%A6">修饰符</a></h2><h3 id="lazy"><a href="#lazy" class="headerlink" title=".lazy"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#lazy"><code>.lazy</code></a></h3><p>在默认情况下，<code>v-model</code> 在每次 <code>input</code> 事件触发后将输入框的值与数据进行同步 (除了<a href="https://cn.vuejs.org/v2/guide/forms.html#vmodel-ime-tip">上述</a>输入法组合文字时)。你可以添加 <code>lazy</code> 修饰符，从而转为在 <code>change</code> 事件_之后_进行同步：就是在失去焦点事件以后出发，在你输入值的时候他不会触发，就像ajax一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 在“change”时而非“input”时更新 --&gt;</span><br><span class="line">&lt;input v-model.lazy&#x3D;&quot;msg&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model.lazy&#x3D;&quot;input&quot;&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;input&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo12&quot;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      input:&quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="number"><a href="#number" class="headerlink" title=".number"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#number"><code>.number</code></a></h3><p>如果想自动将用户的输入值转为数值类型，可以给 <code>v-model</code> 添加 <code>number</code> 修饰符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model.number&#x3D;&quot;age&quot; type&#x3D;&quot;number&quot;&gt;</span><br></pre></td></tr></table></figure><p>这通常很有用，因为即使在 <code>type=&quot;number&quot;</code> 时，HTML 输入元素的值也总会返回字符串。如果这个值无法被 <code>parseFloat()</code> 解析，则会返回原始的值。</p><h3 id="trim"><a href="#trim" class="headerlink" title=".trim"></a><a href="https://cn.vuejs.org/v2/guide/forms.html#trim"><code>.trim</code></a></h3><p>如果要自动过滤用户输入的首尾空白字符，可以给 <code>v-model</code> 添加 <code>trim</code> 修饰符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model.trim&#x3D;&quot;msg&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>这三个修饰符可以一起使用，符合我们的链式编程的规范</strong></p><h2 id="组件的复用"><a href="#组件的复用" class="headerlink" title="组件的复用"></a><a href="https://cn.vuejs.org/v2/guide/components.html#%E7%BB%84%E4%BB%B6%E7%9A%84%E5%A4%8D%E7%94%A8">组件的复用</a></h2><p>你可以将组件进行任意次数的复用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;components-demo&quot;&gt;</span><br><span class="line">  &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">  &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">  &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>You clicked me 1 times. You clicked me 1 times. You clicked me 1 times.</p><p>注意当点击按钮时，每个组件都会各自独立维护它的 <code>count</code>。因为你每用一次组件，就会有一个它的新<strong>实例</strong>被创建。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;add&quot;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;div v-model&#x3D;&quot;count&quot;&gt;你点击了&#123;&#123; count &#125;&#125;次&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Demo13&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    add()&#123;</span><br><span class="line">      this.count++</span><br><span class="line">      console.log(this.count)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>多个组件复用</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Util/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Util/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  //AOP</span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置文件框架："><a href="#配置文件框架：" class="headerlink" title="配置文件框架："></a>配置文件框架：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="c命名空间和p命名空间："><a href="#c命名空间和p命名空间：" class="headerlink" title="c命名空间和p命名空间："></a>c命名空间和p命名空间：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line">xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure><h4 id="使用配置文件："><a href="#使用配置文件：" class="headerlink" title="使用配置文件："></a>使用配置文件：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">        http://www.springframework.org/schema/context</span><br><span class="line">        https://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="全部可能用到的包的依赖："><a href="#全部可能用到的包的依赖：" class="headerlink" title="全部可能用到的包的依赖："></a>全部可能用到的包的依赖：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    数据库驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    测试--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        aop包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--       jdbc --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis-spring--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--spring--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h4 id="Mybatis-config-xml"><a href="#Mybatis-config-xml" class="headerlink" title="Mybatis_config.xml"></a>Mybatis_config.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:localhost:3306/smbms?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root</span></span></span><br><span class="line"><span class="tag"><span class="string">                &lt;property name=&quot;</span><span class="attr">password</span>&quot; <span class="attr">value</span>=<span class="string">&quot;1234567</span></span></span><br><span class="line"><span class="tag"><span class="string">            &lt;/dataSource&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">        &lt;/environment&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &lt;/environments&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &lt;mappers&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">        &lt;mapper resource=&quot;</span><span class="attr">org</span>/<span class="attr">mybatis</span>/<span class="attr">example</span>/<span class="attr">BlogMapper.xml</span>&quot;/&gt;</span><span class="comment">&lt;!-- 目录下的xml文件，中间用/隔开--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="UserMapper-xml"><a href="#UserMapper-xml" class="headerlink" title="UserMapper.xml"></a>UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.saxon.Dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.saxon</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="导包异常，无法正常输出到输出文件夹"><a href="#导包异常，无法正常输出到输出文件夹" class="headerlink" title="导包异常，无法正常输出到输出文件夹"></a>导包异常，无法正常输出到输出文件夹</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="一、导包"><a href="#一、导包" class="headerlink" title="一、导包"></a>一、导包</h3><figure class="highlight xml"><figcaption><span><dependencies></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax:"></a>Ajax:</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $.get(&#123;</span><br><span class="line">                url: <span class="string">&quot;http://localhost:8080/SpringMVC_02_war_exploded/saxon&quot;</span>,</span><br><span class="line">                data: &#123;<span class="string">&quot;userName&quot;</span>: $(<span class="string">&quot;#userName&quot;</span>).val()&#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(data)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>解决js乱码问题：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span> <span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest req = (HttpServletRequest) request;</span><br><span class="line">        <span class="keyword">if</span> (req.getHeader (<span class="string">&quot;RequestType&quot;</span>) != <span class="keyword">null</span> &amp;&amp; req.getHeader (<span class="string">&quot;RequestType&quot;</span>).equalsIgnoreCase (<span class="string">&quot;ajax&quot;</span>))&#123;</span><br><span class="line">            request.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            request.setCharacterEncoding (<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter (request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>ajax,jquery:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">integrity</span>=<span class="string">&quot;sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">integrity</span>=<span class="string">&quot;sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>web 用到的包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Saxon_SMBMS<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.9<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.9<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        servlet--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        数据库驱动--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--       jdbc --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        aop包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis-spring--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.mchange/c3p0 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--你要导出资源的文件夹--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span><span class="comment">&lt;!-- 导出资源的类型--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/webapp/JSP/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/**.jsp<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><p>cdn</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>html时间显示代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> Week, Weekday;</span><br><span class="line">    <span class="keyword">let</span> date =  <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line">    Week = [<span class="string">&quot;星期天&quot;</span>, <span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;星期三&quot;</span>, <span class="string">&quot;星期四&quot;</span>, <span class="string">&quot;星期五&quot;</span>, <span class="string">&quot;星期六&quot;</span>];</span><br><span class="line">    Weekday = date.getDay();</span><br><span class="line"></span><br><span class="line">    year = date.getFullYear();</span><br><span class="line">    month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">    day = date.getDate();</span><br><span class="line">    hours = date.getHours();</span><br><span class="line">    minutes = date.getMinutes();</span><br><span class="line">    seconds = date.getSeconds();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;getTime&quot;</span>).innerHTML = year + <span class="string">&quot;年&quot;</span> + month + <span class="string">&quot;月&quot;</span> + day + <span class="string">&quot;日&quot;</span> + <span class="string">&quot;\t&quot;</span> + hours + <span class="string">&quot;:&quot;</span> + minutes + <span class="string">&quot;:&quot;</span> + seconds + <span class="string">&quot;\t&quot;</span> + Week[Weekday];</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id&#x3D;&quot;getTime&quot;&gt;2020年9月1日&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    getTime();</span><br><span class="line">    setInterval(&quot;getTime()&quot;,1000);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>拦截器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package com.saxon.filter;</span><br><span class="line"></span><br><span class="line">import com.saxon.util.constants;</span><br><span class="line">import javax.servlet.*;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class LoginFilter implements Filter &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void init (FilterConfig filterConfig) throws ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void doFilter (ServletRequest req, ServletResponse resp, FilterChain chain) throws IOException, ServletException &#123;</span><br><span class="line">        HttpServletRequest request&#x3D;(HttpServletRequest)req;</span><br><span class="line">        HttpServletResponse response&#x3D;(HttpServletResponse)resp;</span><br><span class="line"></span><br><span class="line">        if (request.getRequestURI ().contains (&quot;&#x2F;JSP&#x2F;Register.jsp&quot;))&#123;</span><br><span class="line">            req.getRequestDispatcher (&quot;&#x2F;JSP&#x2F;Register.jsp&quot;).forward (req,resp);</span><br><span class="line">        &#125;if (request.getSession ().getAttribute (&quot;user&quot;)&#x3D;&#x3D;null)&#123;</span><br><span class="line">            req.getRequestDispatcher (&quot;&#x2F;JSP&#x2F;login.jsp&quot;).forward (req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void destroy () &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO &#96;blog&#96;.&#96;blog&#96;(&#96;id&#96;, &#96;title&#96;, &#96;introduction&#96;, &#96;keyword&#96;, &#96;content&#96;, &#96;addTime&#96;, &#96;type_id&#96;) VALUES (300, &#39;关于我是如何变帅的那些事&#39;, &#39;Saxon&#39;, &#39;saxon&#39;, &#39;saxon&#39;, &#39;2020-09-05 20:32:46&#39;, 4)</span><br></pre></td></tr></table></figure><h1 id="spring-boot命名空间"><a href="#spring-boot命名空间" class="headerlink" title="spring boot命名空间"></a>spring boot命名空间</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xmlns:th=&quot;http://www.thymeleaf.org&quot;</span><br><span class="line">xmlns:sec=&quot;http://www.thymeleaf.org/extras/spring-security&quot;</span><br><span class="line">xmlns:shiro=&quot;http://www.pollix.at/thymeleaf/shiro&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/extras/spring-security&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:shiro</span>=<span class="string">&quot;http://www.pollix.at/thymeleaf/shiro&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SpringMVC/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SpringMVC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><h2 id="一、SpringMVC执行原理分析"><a href="#一、SpringMVC执行原理分析" class="headerlink" title="一、SpringMVC执行原理分析"></a>一、SpringMVC执行原理分析</h2><p><img src="img/5f38e994079129531b5d1f4a.png"></p><p>步骤：</p><ol><li>配置文件获得springmvc的核心；DispatcherServlet;</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:SpringMVC-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于 <url-pattern>/</url-pattern>里面参数的问题：</p><p>里面写==/==就只会匹配请求，不会匹配我们的JSP,这样可以避免一些重复的定向；所以这里不要写==/*==</p><p>2.配置springMVC-servlet.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/JSP/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;/hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.controller.MyController&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置一个映射器和适配器，用于适配处理controller；</p><p>还有一个就是我们的Resolver 这个用于跳转；前缀和后缀；</p><p>3.编写controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleRequest</span> <span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView ();</span><br><span class="line">      <span class="comment">//业务代码***************</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">//**********************</span></span><br><span class="line">      <span class="comment">//prefix+viewName+suffix:一起构成我们的转发页面</span></span><br><span class="line">        modelAndView.setViewName (<span class="string">&quot;Hello&quot;</span>);<span class="comment">//转发的名字</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、使用注解开发"><a href="#二、使用注解开发" class="headerlink" title="二、使用注解开发"></a>二、使用注解开发</h2><h4 id="1-注册一个DispatcnerServlet"><a href="#1-注册一个DispatcnerServlet" class="headerlink" title="1.注册一个DispatcnerServlet"></a>1.注册一个DispatcnerServlet</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:SpringMVC-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特别的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:SpringMVC-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure><p>初始化，就是配置文件的位置；</p><h4 id="2-配置注解支持和数据处理，视图解析"><a href="#2-配置注解支持和数据处理，视图解析" class="headerlink" title="2.配置注解支持和数据处理，视图解析"></a>2.配置注解支持和数据处理，视图解析</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.saxon.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/JSP/&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>mvc:annotation-driven</strong>:就是两个的注释 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><strong>mvc:default-servlet-handler</strong>:是否过滤静态资源；这样的话，静态请求（css,html,js）就不会走这里；</p><p><strong>context:component-scan</strong>扫描这个包下的所有的controller；</p><p><strong>internalResourceViewResolve</strong>视图解析器，会根据你返回的值进行一个字符串的拼接；</p><h4 id="3-编写一个controller使用注解-controller"><a href="#3-编写一个controller使用注解-controller" class="headerlink" title="3.编写一个controller使用注解@controller"></a>3.编写一个controller使用注解@controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span> (<span class="string">&quot;/hello&quot;</span>)<span class="comment">//详相当于servletmappering</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        model.addAttribute (<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Hello Mr Mo&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span> (<span class="string">&quot;/hello1&quot;</span>)<span class="comment">//详相当于servletmappering</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello1</span> <span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        model.addAttribute (<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Hello Mr Mo 2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>@Controller</strong>:表名是一个controller可以被spring托管</p><p><strong>@RequestMapping</strong>：访问的地址；</p><h2 id="二、关于restful风格"><a href="#二、关于restful风格" class="headerlink" title="二、关于restful风格"></a>二、关于restful风格</h2><p>由于我的理解不是很好表达出来，就给大家推荐一篇博客</p><p><a href="http://www.ruanyifeng.com/blog/2011/09/restful.html">理解RESTful架构</a></p><p>综合上面的解释，我们总结一下什么是RESTful架构：</p><p>　　（1）每一个URI代表一种资源；</p><p>　　（2）客户端和服务器之间，传递这种资源的某种表现层；</p><p>　　（3）客户端通过四个HTTP动词，对服务器端资源进行操作，实现”表现层状态转化”。</p><h2 id="三、数据接收"><a href="#三、数据接收" class="headerlink" title="三、数据接收"></a>三、数据接收</h2><p>前端通过name对数据进行一个传输，后台名字匹配就可以使用，名字不匹配，可以利用我们的注解进行一个转换；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@PostMapping</span> (<span class="string">&quot;/hello&quot;</span>)<span class="comment">//详相当于servletmappering</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(User user, <span class="meta">@RequestParam(&quot;age&quot;)</span> <span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        System.out.println (user+<span class="string">&quot;age=&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**@RequestParam(“age”)**：前端传下来的数据就是我们的name=age的值，前端的数据就是age；如果是对象的话，输出信息的时候，我们的字段名如果匹配的话就会进行一个映射，如果没有的话，就会输出为空；这一个可以让我们省略以前的getParameter 来获取前端数据；</p><h2 id="四、关于数据乱码问题"><a href="#四、关于数据乱码问题" class="headerlink" title="四、关于数据乱码问题"></a>四、关于数据乱码问题</h2><p>这个是个让人头疼的问题，在Java Web已经被折磨得体无完肤了，这里还有；这个使用spring自带的过滤器就可以解决了；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>springFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>springFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>与我们自己写的不同，这个我们是要配置一下他的编码；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure><p>说到底，这个过滤器就只有三个属性；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharacterEncodingFilter</span> <span class="keyword">extends</span> <span class="title">OncePerRequestFilter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">private</span> String encoding;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> forceRequestEncoding;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> forceResponseEncoding;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CharacterEncodingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.forceRequestEncoding = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.forceResponseEncoding = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CharacterEncodingFilter</span><span class="params">(String encoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(encoding, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CharacterEncodingFilter</span><span class="params">(String encoding, <span class="keyword">boolean</span> forceEncoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(encoding, forceEncoding, forceEncoding);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CharacterEncodingFilter</span><span class="params">(String encoding, <span class="keyword">boolean</span> forceRequestEncoding, <span class="keyword">boolean</span> forceResponseEncoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.forceRequestEncoding = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.forceResponseEncoding = <span class="keyword">false</span>;</span><br><span class="line">        Assert.hasLength(encoding, <span class="string">&quot;Encoding must not be empty&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.encoding = encoding;</span><br><span class="line">        <span class="keyword">this</span>.forceRequestEncoding = forceRequestEncoding;</span><br><span class="line">        <span class="keyword">this</span>.forceResponseEncoding = forceResponseEncoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEncoding</span><span class="params">(<span class="meta">@Nullable</span> String encoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.encoding = encoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.encoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setForceRequestEncoding</span><span class="params">(<span class="keyword">boolean</span> forceRequestEncoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.forceRequestEncoding = forceRequestEncoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isForceRequestEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.forceRequestEncoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setForceResponseEncoding</span><span class="params">(<span class="keyword">boolean</span> forceResponseEncoding)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.forceResponseEncoding = forceResponseEncoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isForceResponseEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.forceResponseEncoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String encoding = <span class="keyword">this</span>.getEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.isForceRequestEncoding() || request.getCharacterEncoding() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                request.setCharacterEncoding(encoding);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.isForceResponseEncoding()) &#123;</span><br><span class="line">                response.setCharacterEncoding(encoding);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置ForceEncoding的目的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setForceEncoding</span><span class="params">(<span class="keyword">boolean</span> forceEncoding)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.forceRequestEncoding = forceEncoding;</span><br><span class="line">      <span class="keyword">this</span>.forceResponseEncoding = forceEncoding;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>看了一下这个就是一般的过滤器；</p><p>还有一点，就是url-pattern*<em>里面写的是/**</em>的话它可以连着jsp也一起过滤；</p><h2 id="五、JSON"><a href="#五、JSON" class="headerlink" title="五、JSON"></a>五、JSON</h2><h3 id="一、Jackson"><a href="#一、Jackson" class="headerlink" title="一、Jackson"></a>一、Jackson</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码测试：</p><p><strong>一、使用@ controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@PostMapping</span> (<span class="string">&quot;/hello&quot;</span>)<span class="comment">//详相当于servletmappering</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(User user, Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        ObjectMapper obj = <span class="keyword">new</span> ObjectMapper ();</span><br><span class="line">        <span class="keyword">return</span> obj.writeValueAsString (user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>@ResponseBody</strong>:跳过视图解析器，直接返回结果；</p><p><strong>ObjectMapper：转换对象</strong></p><p><strong>二、使用@Restcontroller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@PostMapping</span> (<span class="string">&quot;/hello&quot;</span>)<span class="comment">//详相当于servletmappering</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(User user, Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        ObjectMapper obj = <span class="keyword">new</span> ObjectMapper ();</span><br><span class="line">        <span class="keyword">return</span> obj.writeValueAsString (user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>跳过视图解析器直接返回数据；这样的话就可以直接不用@responseBody:</p><h3 id="二、关于json的乱码问题的解决："><a href="#二、关于json的乱码问题的解决：" class="headerlink" title="二、关于json的乱码问题的解决："></a>二、关于json的乱码问题的解决：</h3><p>方法一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/xx&quot;, produces = &quot;application/json;charset=utf-8&quot;)</span></span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Jackson乱码解决--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、日期时间的格式化"><a href="#三、日期时间的格式化" class="headerlink" title="三、日期时间的格式化"></a>三、日期时间的格式化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(User user, Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        ObjectMapper obj = <span class="keyword">new</span> ObjectMapper ();</span><br><span class="line">        obj.configure (SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS,<span class="keyword">false</span>);</span><br><span class="line">        obj.setDateFormat (<span class="keyword">new</span> SimpleDateFormat (<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> obj.writeValueAsString (<span class="keyword">new</span> Date ());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>第一种方法：</strong></p><p>使用原来的日期时间类来格式化我们的时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(User user, Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ObjectMapper ().writeValueAsString (<span class="keyword">new</span> SimpleDateFormat (<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>第二种方法：</strong></p><p>配置我们的objectMapper；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span> <span class="params">(User user, Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        ObjectMapper obj = <span class="keyword">new</span> ObjectMapper ();</span><br><span class="line">        obj.configure (SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS,<span class="keyword">false</span>);</span><br><span class="line">        obj.setDateFormat (<span class="keyword">new</span> SimpleDateFormat (<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> obj.writeValueAsString (<span class="keyword">new</span> Date ());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="整合框架："><a href="#整合框架：" class="headerlink" title="整合框架："></a>整合框架：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mybatis自动托管；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;configurer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.saxon.Dao.User&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、Ajax"><a href="#六、Ajax" class="headerlink" title="六、Ajax"></a>六、Ajax</h2><h3 id="一、例子"><a href="#一、例子" class="headerlink" title="一、例子"></a>一、例子</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: <span class="string">&quot;http://localhost:8080/SpringMVC_02_war_exploded/saxon&quot;</span>,</span><br><span class="line">                data: &#123;<span class="string">&quot;userName&quot;</span>: $(<span class="string">&quot;#userName&quot;</span>).val()&#125;,</span><br><span class="line">                type:<span class="string">&quot;GET&quot;</span>,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(data)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>使用get或者post 会出现问题，使用ajax，加上type就可以正常使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $.get(&#123;</span><br><span class="line">                url: <span class="string">&quot;http://localhost:8080/SpringMVC_02_war_exploded/saxon&quot;</span>,</span><br><span class="line">                data: &#123;<span class="string">&quot;userName&quot;</span>: $(<span class="string">&quot;#userName&quot;</span>).val()&#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (data==<span class="string">&quot;true&quot;</span>)&#123;</span><br><span class="line">                        $(<span class="string">&quot;#username-span&quot;</span>).text(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">                        $(<span class="string">&quot;#username-span&quot;</span>).css(<span class="string">&quot;color&quot;</span>,<span class="string">&quot;green&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>html:直接解析到页面，就是相当于我们在页面上写html界面</p><p>css:前一个是属性名，后一个是属性值</p><h3 id="2-属性说明"><a href="#2-属性说明" class="headerlink" title="2.属性说明"></a>2.属性说明</h3><p>1.url:数据的接受处，servlet</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: <span class="string">&quot;http://localhost:8080/SpringMVC_02_war_exploded/saxon&quot;</span></span><br></pre></td></tr></table></figure><p>2.data：前端的数据与后端的结合</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;<span class="string">&quot;userName&quot;</span>: $(<span class="string">&quot;#userName&quot;</span>).val()&#125;,</span><br></pre></td></tr></table></figure><p>前一个是后台接收数据的名称，后一个是我们将要传递的值；</p><p>3.type:”GET”:提交方式</p><p>4.success：成功回调函数</p><h2 id="七、登陆验证"><a href="#七、登陆验证" class="headerlink" title="七、登陆验证"></a>七、登陆验证</h2><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span> <span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request=(HttpServletRequest)req;</span><br><span class="line">        HttpServletResponse response=(HttpServletResponse)resp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (request.getRequestURI ().contains (<span class="string">&quot;/JSP/Register.jsp&quot;</span>))&#123;</span><br><span class="line">            req.getRequestDispatcher (<span class="string">&quot;/JSP/Register.jsp&quot;</span>).forward (req,resp);</span><br><span class="line">        &#125;<span class="keyword">if</span> (request.getSession ().getAttribute (<span class="string">&quot;user&quot;</span>)==<span class="keyword">null</span>)&#123;</span><br><span class="line">            req.getRequestDispatcher (<span class="string">&quot;/JSP/login.jsp&quot;</span>).forward (req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>session<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.saxon.filter.LoginFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>session<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/JSP/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <url-pattern>/JSP/*</url-pattern>,除了注册页面，其他的访问必须要有session</p><p>通过path+/jsp/**访问的，没有session访问不了；</p><p>在我看来这个就是对静态资源的过滤，我们通过地址的方式无法访问</p><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">loginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span> <span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HttpSession session = request.getSession ();</span><br><span class="line">        <span class="keyword">if</span> (session.getAttribute (<span class="string">&quot;user&quot;</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println (<span class="string">&quot;有session&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println (<span class="string">&quot;没有session&quot;</span>);</span><br><span class="line">        request.getRequestDispatcher (<span class="string">&quot;/JSP/login.jsp&quot;</span>).forward (request, response);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/user/**&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.filter.loginInterceptor&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>==只会拦截我们访问的控制器方法，就是我们的controller里面的request Mapping里面的方法,不会拦截静态资源，减少资源损耗==</strong></p><h3 id="拦截器和过滤器的区别"><a href="#拦截器和过滤器的区别" class="headerlink" title="拦截器和过滤器的区别"></a>拦截器和过滤器的区别</h3><p><strong><a href="https://www.cnblogs.com/panxuejun/p/7715917.html">拦截器和过滤器的区别</a></strong></p><p>过滤器和拦截器的区别：</p><p>　　*<em>①拦截器是基于java的反射机制的，而过滤器是基于函数回调。<br>　　②拦截器不依赖与servlet容器，过滤器依赖与servlet容器。<br>　　③拦截器只能对action请求起作用，而过滤器则可以对几乎所有的请求起作用。<br>　　④拦截器可以访问action上下文、值栈里的对象，而过滤器不能访问。<br>　　⑤在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次。**</em></p><p><strong>⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。</strong></p><p><strong><em>\</em>拦截器可以获取ioc中的service bean实现业务逻辑，****拦截器可以获取ioc中的service bean实现业务逻辑，********拦截器可以获取ioc中的service bean实现业务逻辑，******</strong></p><p>过滤器和拦截器的区别：</p><p>　　<strong>①拦截器是基于java的反射机制的，而过滤器是基于函数回调。<br>　　②拦截器不依赖与servlet容器，过滤器依赖与servlet容器。<br>　　③拦截器只能对action请求起作用，而过滤器则可以对几乎所有的请求起作用。<br>　　④拦截器可以访问action上下文、值栈里的对象，而过滤器不能访问。<br>　　⑤在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次。</strong></p><p>　　<strong>⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。</strong></p><p>　　<strong><em>\</em>⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。**</strong></p><p>　　<strong>⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。</strong></p><p>　　<strong><em>\</em>⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。**</strong></p><p><strong><em>\</em>拦截器可以获取ioc中的service bean实现业务逻辑，****拦截器可以获取ioc中的service bean实现业务逻辑，********拦截器可以获取ioc中的service bean实现业务逻辑，******</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Spring/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Spring/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>一、优点</p><ul><li>spring是一个开源免费的框架</li><li>spring是一个非入侵和轻量型的框架</li><li>控制反转和面向切面编程</li><li>支持事务的处理和对各种框架的整合</li></ul><p>==spring就是一个轻量级的控制反转（IOC）和面向切面编程（AOP）的框架==</p><h2 id="二、IOC理论推导"><a href="#二、IOC理论推导" class="headerlink" title="二、IOC理论推导"></a>二、IOC理论推导</h2><p><img src="https://bkimg.cdn.bcebos.com/pic/6a63f6246b600c337b73ab94174c510fd9f9a160?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UxMTY=,g_7,xp_5,yp_5"></p><p>通过设置一个第三方的容器，让ABCD解耦，他们之间就不会因为某一个奔溃导致全部不能使用，他们实现了独立；</p><p><strong>控制反转</strong>（Inversion of Control，缩写为<strong>IoC</strong>），是<a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B">面向对象编程</a>中的一种设计原则，可以用来减低计算机代码之间的<a href="https://baike.baidu.com/item/%E8%80%A6%E5%90%88%E5%BA%A6">耦合度</a>。其中最常见的方式叫做<strong>依赖注入</strong>（Dependency Injection，简称<strong>DI</strong>），还有一种方式叫“依赖查找”（Dependency Lookup）。通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。</p><p>简单一点来说就是把这个程序的主动权进行一个移交；原来的程序，用户获得的对象是由程序员的class a=new class();来构成，如果用户需求改变那么对象就要改变但是如果使用setter注入的话，就不会存在这个问题；用户需要什么就自己选择，程序员也避免了大量的代码修改工作；</p><h2 id="三-第一个spring程序"><a href="#三-第一个spring程序" class="headerlink" title="三.第一个spring程序"></a>三.第一个spring程序</h2><p>Dao：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlUserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MysqlUserDaoImpl&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OralceUserImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStr</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStr</span> <span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OracleUserImpl&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Dao层一个接口，一推实现类；</p><p>service层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getUserDao</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.saxon.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.UserDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span> <span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserDao</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (userDao);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;OralceUserImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.OralceUserImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;我是谁&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MysqlUserDaoImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.MysqlUserDaoImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于属性的<property>标签：</p><ul><li>如果不是对象就用value，如果是对象的话，就用ref标签；另外关于值，如果类中没有构造器的话，那么就会失败，spring是通过setter把值设置；</li><li>使用ref标签的ref中写的值是我们在spring中托管的对象的id；</li></ul><p><strong>总结下来就是，我们的spring负责把我们交给他的对象用一个容器保存下来，如果我们要使用的话，我们就直接使用；==用户不用修改源代码，就只要修改一下配置文件就可以完成操作，对象由spring创建，托管，修改，这个就是IOC==</strong></p><h2 id="四、IOC创建对象的三种方式（构造器注入）"><a href="#四、IOC创建对象的三种方式（构造器注入）" class="headerlink" title="四、IOC创建对象的三种方式（构造器注入）"></a>四、IOC创建对象的三种方式（构造器注入）</h2><p><strong>默认使用的是无参构造器但是当有参构造器存在时，无参构造器便没有用</strong></p><h3 id="1-第一种：下标"><a href="#1-第一种：下标" class="headerlink" title="1.第一种：下标"></a>1.第一种：下标</h3><p><strong>属性是对象：</strong></p><p><strong>构造器：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span> <span class="params">(UserDao userdao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao=userdao;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>属性不是对象：</strong></p><p><strong>构造器：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span> <span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        System.out.println (a);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index指的是构造器属性的下标，如果不是对象就用value直接赋值；</p><h3 id="2-第二种：根据属性的类型-不推荐"><a href="#2-第二种：根据属性的类型-不推荐" class="headerlink" title="2.第二种：根据属性的类型(不推荐)"></a>2.第二种：根据属性的类型(不推荐)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span> <span class="params">(<span class="keyword">int</span> a,String b)</span> </span>&#123;</span><br><span class="line">        System.out.println (a+<span class="string">&quot;&amp;&quot;</span>+b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.Dao.UserDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当存在多个相同数据的时候赋值根据你的语句顺序来赋值；</p><p><strong>不推荐原因：当我们的类名过于复杂的时候，就很容易把类名写错；</strong></p><h3 id="3-第三种-根据属性的名字"><a href="#3-第三种-根据属性的名字" class="headerlink" title="3.第三种:根据属性的名字"></a>3.第三种:根据属性的名字</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span> <span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是对象就用ref，不是对象直接用value;</p><p><strong>我们所有的bean在注册的时候，就全部被实例化过了，所以我们直接取过来就可以使用，所以他只会实例化一个对象，不会再new一个，下面运行的结果是true</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext (<span class="string">&quot;applicationContent.xml&quot;</span>);</span><br><span class="line">UserServiceImpl userServiceImpl = (UserServiceImpl)context.getBean (<span class="string">&quot;UserServiceImpl&quot;</span>);</span><br><span class="line">UserServiceImpl userServiceImp2 = (UserServiceImpl)context.getBean (<span class="string">&quot;UserServiceImpl&quot;</span>);</span><br><span class="line">System.out.println (userServiceImpl==userServiceImp2);</span><br></pre></td></tr></table></figure><p>ApplicationContext就是一个容器，你需要啥就拿啥；</p><h2 id="五、别名"><a href="#五、别名" class="headerlink" title="五、别名"></a>五、别名</h2><p>于数据库和mybatis差不多；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;service&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>前面是名字，后面是别名；但是的话，还有一种的方法是在bean下直接可以写别名：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Service.UserServiceImpl&quot;</span> <span class="attr">name</span>=<span class="string">&quot;service2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.Dao.UserDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OralceUserImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并且可以通过分隔符来进行一个分割，实现取出多个的别名的目的；</p><h2 id="六、import"><a href="#六、import" class="headerlink" title="六、import"></a>六、import</h2><p>把多个配置文件合成一个，如果文件内容有完全一样的部分就会合并；</p><p>多个文件合并后，使用一个总文件就可以访问；</p><h2 id="七、依赖注入-DI"><a href="#七、依赖注入-DI" class="headerlink" title="七、依赖注入(DI)"></a>七、依赖注入(DI)</h2><p>直接上代码：</p><p>pojo.student:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; teacher;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, address=&quot;</span> + address +</span><br><span class="line">                <span class="string">&quot;, card=&quot;</span> + card +</span><br><span class="line">                <span class="string">&quot;, books=&quot;</span> + Arrays.toString (books) +</span><br><span class="line">                <span class="string">&quot;, teacher=&quot;</span> + teacher +</span><br><span class="line">                <span class="string">&quot;, games=&quot;</span> + games +</span><br><span class="line">                <span class="string">&quot;, info=&quot;</span> + info +</span><br><span class="line">                <span class="string">&quot;, wife=&#x27;&quot;</span> + wife + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//setter getter 略，但是必须要写</span></span><br></pre></td></tr></table></figure><p>applicationContext:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            第一种 直接注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;saxon&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            第二种 对象注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        第三种 数组--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>关于我是如何变帅的那些事 1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>关于我是如何变帅的那些事 2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>关于我是如何变帅的那些事 3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        map集合--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;author&quot;</span> <span class="attr">value</span>=<span class="string">&quot;saxon&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;author&quot;</span> <span class="attr">value</span>=<span class="string">&quot;saxon 2&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            list 集合--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>李老师<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>马老师<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        set 集合--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>The Honor OF KING<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        properties--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;Lover&quot;</span>&gt;</span>null<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        关于空值的设置 null和&quot;&quot;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span> <span class="attr">value</span>=<span class="string">&quot;CHINA&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;province&quot;</span> <span class="attr">value</span>=<span class="string">&quot;YUNNAN&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示出来的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student&#123;name=<span class="string">&#x27;saxon&#x27;</span>, address=Address&#123;country=<span class="string">&#x27;CHINA&#x27;</span>, province=<span class="string">&#x27;YUNNAN&#x27;</span>&#125;, card=&#123;author=saxon <span class="number">2</span>&#125;, books=[关于我是如何变帅的那些事 <span class="number">1</span>, 关于我是如何变帅的那些事 <span class="number">2</span>, 关于我是如何变帅的那些事 <span class="number">3</span>], teacher=[李老师, 马老师], games=[LOL, The Honor OF KING], info=&#123;Lover=<span class="keyword">null</span>&#125;, wife=<span class="string">&#x27;null&#x27;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>c命名空间和p命名空间：</strong></p><p>这两个需要引入我们的配置；<br><strong>p命名空间,使用setter注入：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Student&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;saxon&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>c命名空间，使用构造器注入：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Student&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;saxon&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七、bean的作用域"><a href="#七、bean的作用域" class="headerlink" title="七、bean的作用域"></a>七、bean的作用域</h2><p>一共有6种，但是后面的四种是基于web应用的；</p><table><thead><tr><th align="center">Scope</th><th align="left">Description</th></tr></thead><tbody><tr><td align="center"><strong>singleton</strong></td><td align="left"><strong>(Default) Scopes a single bean definition to a single object instance for each Spring IoC container.</strong></td></tr><tr><td align="center"><strong>prototype</strong></td><td align="left"><strong>Scopes a single bean definition to any number of object instances.</strong></td></tr><tr><td align="center"><strong>request</strong></td><td align="left"><strong>Scopes a single bean definition to the lifecycle of a single HTTP request. That is, each HTTP request has its own instance of a bean created off the back of a single bean definition. Only valid in the context of a web-aware Spring <code>ApplicationContext</code>.</strong></td></tr><tr><td align="center"><strong>session</strong></td><td align="left"><strong>Scopes a single bean definition to the lifecycle of an HTTP <code>Session</code>. Only valid in the context of a web-aware Spring <code>ApplicationContext</code>.</strong></td></tr><tr><td align="center"><strong>application</strong></td><td align="left"><strong>Scopes a single bean definition to the lifecycle of a <code>ServletContext</code>. Only valid in the context of a web-aware Spring <code>ApplicationContext</code>.</strong></td></tr><tr><td align="center"><strong>websocket</strong></td><td align="left"><strong>Scopes a single bean definition to the lifecycle of a <code>WebSocket</code>. Only valid in the context of a web-aware Spring <code>ApplicationContext</code>.</strong></td></tr></tbody></table><p><strong>测试代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext (<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       Student student1 = (Student)context.getBean (<span class="string">&quot;student&quot;</span>);</span><br><span class="line">       Student student2 = (Student)context.getBean (<span class="string">&quot;student&quot;</span>);</span><br><span class="line">       System.out.println (student1==student2);</span><br></pre></td></tr></table></figure><h4 id="1-sigleton-无论创建几个都始终只有一个并且是默认的作用域"><a href="#1-sigleton-无论创建几个都始终只有一个并且是默认的作用域" class="headerlink" title="1.sigleton:无论创建几个都始终只有一个并且是默认的作用域"></a>1.sigleton:无论创建几个都始终只有一个并且是默认的作用域</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Student&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;saxon&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果：true</p><h4 id="2-prototype-每次创建都会新建一个对象，就是浪费资源"><a href="#2-prototype-每次创建都会新建一个对象，就是浪费资源" class="headerlink" title="2.prototype:每次创建都会新建一个对象，就是浪费资源"></a>2.prototype:每次创建都会新建一个对象，就是浪费资源</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Student&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;saxon&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果：false；</p><h2 id="八、自动装配"><a href="#八、自动装配" class="headerlink" title="八、自动装配"></a>八、自动装配</h2><p><strong>1.显示自动装配 xml 装配</strong></p><p><strong>applicationContext.xml</strong></p><p><strong>2.Java文件自动装配</strong></p><p><strong>3.隐式自动装配</strong></p><p><strong>autowrite:</strong></p><p><strong>1.autowire=”byName”</strong></p><p>它会自动寻找我们属性中还没有注入的属性，选取ID 为setXXX的XXX 自动装配</p><p>比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span> <span class="params">(Address address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span> <span class="attr">value</span>=<span class="string">&quot;CHINA&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;province&quot;</span> <span class="attr">value</span>=<span class="string">&quot;YUNNAN&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个的set后缀就是address，那么就去找ID为address的bean;如果ID不一致就不会自动装配；区分大小写,id唯一；</p><p><strong>2.autowire=”byType”</strong></p><p>会自动寻找我们属性中还没有注入的属性，选取类的类型为setXXX的XXX 自动装配</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span> <span class="params">(Address address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//类就是address</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span> <span class="attr">value</span>=<span class="string">&quot;CHINA&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;province&quot;</span> <span class="attr">value</span>=<span class="string">&quot;YUNNAN&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>com.saxon.pojo.Address类型唯一自动装配，于id无关；id可以不写；</p><h2 id="九、使用注解开发"><a href="#九、使用注解开发" class="headerlink" title="九、使用注解开发"></a>九、使用注解开发</h2><p>配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="一-使用注解实现自动装配"><a href="#一-使用注解实现自动装配" class="headerlink" title="一.使用注解实现自动装配"></a>一.使用注解实现自动装配</h3><h4 id="1-注解：Autowired"><a href="#1-注解：Autowired" class="headerlink" title="1.注解：Autowired"></a><strong>1.注解：Autowired</strong></h4><p>可以直接在setter或着属性上使用；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired(required=&quot;true&quot;)</span><span class="comment">//默认是true，是否可以为空值</span></span><br><span class="line"><span class="meta">@Qualifier(value = &quot;address2&quot;)</span></span><br></pre></td></tr></table></figure><p>使用这个注解的话，可以不用写setter方法；它会在bena中寻找符合命名规范的byTypee属性；如果命名找到的不止一个，它就会去找寻id一样的；**==如果类名也找不到，你又想自动装配的话，就可以使用@Qualifier 默认的配置自动装配的名字，通过id==**</p><h4 id="2-注解：-Resource"><a href="#2-注解：-Resource" class="headerlink" title="2.注解：@Resource()"></a><strong>2.注解：@Resource()</strong></h4><p>resource里面有两个属性，type和name;就是byname和bytype的区别；<strong>默认的是使用byName，找不到再用byType</strong></p><h4 id="3-注解：-Nullable"><a href="#3-注解：-Nullable" class="headerlink" title="3.注解：@Nullable"></a><strong>3.注解：@Nullable</strong></h4><p>字段被这个标记的话，就可以为空，且不会报错；</p><h3 id="二-使用注解开发"><a href="#二-使用注解开发" class="headerlink" title="二.使用注解开发"></a>二.使用注解开发</h3><p>配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.saxon.Dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用注解开发的第一步就是导入支持；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.saxon.Dao&quot;</span>/&gt;</span>//扫描包里面的所有注解</span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span>//支持注解开发</span><br></pre></td></tr></table></figure><h4 id="1-Component"><a href="#1-Component" class="headerlink" title="1.@Component"></a>1.@Component</h4><p>就是把我们的类放到spring中进行一个托管；相当于下面的语句：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>它还可以根据类在不同的层次中位置进行一个划分，但是实际作用一样；</p><ul><li>@Repository     Dao层</li><li></li><li>@Service           service层</li><li>@Controller      servlet层</li></ul><h4 id="2-Value-“value”"><a href="#2-Value-“value”" class="headerlink" title="2.@Value (“value”)"></a>2.@Value (“value”)</h4><p>给对象属性赋值；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span> (<span class="string">&quot;saxon1&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span>  String name;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-自动装配"><a href="#3-自动装配" class="headerlink" title="3.自动装配"></a>3.自动装配</h4><p>在上面的笔记上有；</p><h4 id="4-bean作用域"><a href="#4-bean作用域" class="headerlink" title="4.bean作用域"></a>4.bean作用域</h4><p>就是第七节讲的那个，只不过现在在类上配置；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Scope(&quot;singleton&quot;||&quot;prototype&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span> (<span class="string">&quot;saxon1&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span>  String name;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-小结"><a href="#5-小结" class="headerlink" title="5.小结"></a>5.小结</h4><p>xml：万能，什么都可以设置，维护简单，快捷；</p><p>注解：简单，但是不是自己的类，别人引用不了例如:ref</p><p>所以：==注解一般用来赋值，xml一般用来管理bean==</p><h2 id="十、使用Java配置文件"><a href="#十、使用Java配置文件" class="headerlink" title="十、使用Java配置文件"></a>十、使用Java配置文件</h2><h5 id="1-Configuration"><a href="#1-Configuration" class="headerlink" title="1.@Configuration"></a>1.@Configuration</h5><p>使用注解将Java类变成一个注解文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">applicationContext</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">user</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来看一下@Configuration里面的东西：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.springframework.context.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AliasFor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Configuration &#123;</span><br><span class="line">    <span class="meta">@AliasFor(</span></span><br><span class="line"><span class="meta">        annotation = Component.class</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">proxyBeanMethods</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从我现在的知识储备来看就是一个组件，就是我们上一次讲到的Component；实际上我们自己写的类变成一个组件来配置文件；</p><h5 id="2-Import"><a href="#2-Import" class="headerlink" title="2.@Import"></a>2.@Import</h5><p>就是我们以前说的，把各个部分的xml文件合成一个，可以通过一个主要的xml访问所有的bean；这里也是同样的作用；</p><h5 id="3-ComponentScan"><a href="#3-ComponentScan" class="headerlink" title="3.@ComponentScan"></a>3.@ComponentScan</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@ComponentScan(&quot;com.saxon.config&quot;)</span><br></pre></td></tr></table></figure><p>扫描指定的包下的所有注解，与前面的功能一致；</p><h5 id="4-Bean"><a href="#4-Bean" class="headerlink" title="4.@Bean"></a>4.@Bean</h5><p>使用这个注解，将一个类交给我们的spring托管，相当于xml配置文件的Bean标签；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">user</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>函数名就是我们的bean标签的id，返回值就是对象 就是class标签；</p><h2 id="十一、代理模式"><a href="#十一、代理模式" class="headerlink" title="十一、代理模式"></a>十一、代理模式</h2><h3 id="一、静态代理模式"><a href="#一、静态代理模式" class="headerlink" title="一、静态代理模式"></a>一、静态代理模式</h3><p><img src="img/5f34ee8463768977504b79af.png"></p><p>代理模式的优缺点：</p><ul><li>可以让真实的角色更加的纯粹简单</li><li>公共交给代理，实现了公共业务的分工</li><li>除了真实业务之外的业务，方便扩展和管理</li></ul><p>缺点：</p><ul><li>相比较单一的业务代码，这个代码的量明显增加，如果我们的真实角色有许多，那么代码的量就不可忽视；</li></ul><h3 id="二、动态代理模式"><a href="#二、动态代理模式" class="headerlink" title="二、动态代理模式"></a>二、动态代理模式</h3><p><img src="img/activeProxy.jpg"></p><h2 id="十二、AOP"><a href="#十二、AOP" class="headerlink" title="十二、AOP"></a>十二、AOP</h2><p><img src="img/5f3512ebe401fd32f59d15ae.png"></p><h4 id="一、AOP实现方式一"><a href="#一、AOP实现方式一" class="headerlink" title="一、AOP实现方式一"></a>一、AOP实现方式一</h4><p>在配置文件中添加支持：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.UserService.UserServiceImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;before&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.UserService.beforLog&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.UserService.AfterLog&quot;</span> <span class="attr">id</span>=<span class="string">&quot;afterLog&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.saxon.UserService.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">proxy-target-class</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加依赖jar包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>&lt;aop配置&gt;切入点配置：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例:</span><br><span class="line">expression=&quot;execution(* com.spring.qq.service.UserServiceImpl.*(..))&quot;</span><br><span class="line"></span><br><span class="line">execution()分为五个部分：</span><br><span class="line"></span><br><span class="line">1.execution():表达式主体</span><br><span class="line">2.第一个 * 号,表示返回类型，* 号表示所有的类型</span><br><span class="line">3.包路径</span><br><span class="line">4.第二个 * 号, 表示类名，* 号表示所有的类 </span><br><span class="line">5.*(..): * 号表示方法名， 括号内为方法的参数, 两个点表示任何参数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==需要注意的是我们代理的是一个真实业务的接口而不是一个实现类 Context.getBean (“userService”,interface)，转换的时候是一个接口==</strong></p><h3 id="二、实现方法二：自定义类"><a href="#二、实现方法二：自定义类" class="headerlink" title="二、实现方法二：自定义类"></a>二、实现方法二：自定义类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;方法执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;方法执行完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;Log&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.saxon.UserService.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span>  <span class="attr">pointcut-ref</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用切面；</p><h4 id="三、Aop实现方式三：使用注解"><a href="#三、Aop实现方式三：使用注解" class="headerlink" title="三、Aop实现方式三：使用注解"></a>三、Aop实现方式三：使用注解</h4><p><strong>重要：开启注解支持和在xml里面注册</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:aspectj-autoproxy&#x2F;&gt;</span><br></pre></td></tr></table></figure><p><strong>注解注册类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aopalliance.intercept.Joinpoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before</span> (<span class="string">&quot;execution(* com.saxon.UserService.*.*(..))&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;方法执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span> (<span class="string">&quot;execution(* com.saxon.UserService.*.*(..))&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;方法执行完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Around</span> (<span class="string">&quot;execution(* com.saxon.UserService.*.*(..))&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span> <span class="params">(ProceedingJoinPoint jp)</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;环绕前&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object proceed = jp.proceed ();</span><br><span class="line">            System.out.println (jp.getSignature ());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println (<span class="string">&quot;环绕后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十三、mybatis与spring的整合"><a href="#十三、mybatis与spring的整合" class="headerlink" title="十三、mybatis与spring的整合"></a>十三、mybatis与spring的整合</h2><p>直接上图:</p><p><img src="img/5f35567607912920b49af6af.png"></p><p>看不清文件夹里面有；</p><p>整合步骤：</p><ol><li>编写数据源，是因为没有数据源，但是我们可以使用spring的数据源类，来配置我们的连接信息；</li><li>获得我们的数据工厂</li><li>获得mybatis中的sqlsession，在spring中是sqlSessionTemplate</li><li>获得我们的mapper对象，可以使用一个注入，使用setter注入；</li><li>编写实体类，直接对数据结果进行一个返回；使用注入，将sqlsession注入我们的实体类，简单一点；</li><li>测试</li></ol><p><strong>==这一点可以把我们的spring的特点反映出来了，就是一切交给spring托管，我们不需要在写一些重复的实例化对象的语句，配置地狱就是这么来的==</strong></p><p><strong>applicationContext:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;datasource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;saxon&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;19990707&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;datasource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:com/saxon/Dao/UserDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.UserDaoImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>mybatis-config.xml:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>userDaomapper:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.saxon.Dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUser&quot;</span>  <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from saxon where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其他方法：</p><p>继承一个类SqlSessionDaoSupport直接获得sqlsession;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">extends</span> <span class="title">SqlSessionDaoSupport</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span> <span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getSqlSession ().getMapper (UserDao.class).getUser (<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注入：</p><p>由于SqlSessionDaoSupport需要一个参数就给他注入一个参数：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.UserDaoImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不注入的话就使用默认自己创建一个，就会出错；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This class needs a SqlSessionTemplate or a SqlSessionFactory. If both are set the SqlSessionFactory will be ignored.</span><br></pre></td></tr></table></figure><h2 id="十四、spring事务管理"><a href="#十四、spring事务管理" class="headerlink" title="十四、spring事务管理"></a>十四、spring事务管理</h2><p>为了保证数据的安全性，保证事务的acid原则，引入事务</p><p><img src="img/5f365a29e401fd06f344447b.png"></p><p>步骤：</p><p>1.添加事务的支持，tx和切面的aop;</p><p>2.对事务管理进行一个配置；</p><p>3.配置事务，name表示的是方法名，就是在哪里使用事务</p><p>4.利用切面不改变原码的情况下，添加上事务的支持</p><p>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;datasource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tran&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.saxon.Dao.UserDaoImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;tran&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/RocketMQ/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/RocketMQ/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>我们学习一个技术之前，我们要知道这个技术对于我们的开发起到的作用，以及我们为何要学习这项技术；</p><p><strong>面向消息的中间件（message-oriented middleware）MOM</strong> 。是指利用高效可靠的消息传递机制进行与平台无关的数据交流，并基数据通信来进行分布式系统的集成。通过提供消息传递和消息排队模型在分布式环境下提供应用解耦、弹性伸缩、冗余存储、流量削峰、异<br>步通信、数据同步等功能。</p><h4 id="消息中间件"><a href="#消息中间件" class="headerlink" title="消息中间件"></a>消息中间件</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>大致的过程如下：<br><strong>发送者把消息发送给消息服务器，消息服务器将消息存放在若干队列/主题 中，在合适的时候，消息服务器会将消息转发给接受者。在这个过程中，发送和接收是异步的，也就是发送无需等待，而且发送者和接收者的生命周期也没有必然关系。</strong>尤其在发布pub/订阅sub模式下，也可以完成一对多的通信，即让一个消息 有多个接受者。</p><h5 id="特点：异步，削峰，解耦"><a href="#特点：异步，削峰，解耦" class="headerlink" title="特点：异步，削峰，解耦"></a>特点：异步，削峰，解耦</h5><h6 id="异步"><a href="#异步" class="headerlink" title="异步"></a><strong>异步</strong></h6><p>我们之前的场景里面有很多步骤都是在一个流程里面需要做完的，就比如说我的下单系统吧，本来我们业务简单，下单了付了钱就好了，流程就走完了。</p><p>但是后面来了个产品经理，搞了个<strong>优惠券系统</strong>，OK问题不大，流程里面多100ms去扣减优惠券。后来产品经理灵光一闪说我们可以搞<strong>积分系统</strong>啊，也行吧，流程里面多了200ms去增减积分。再后来后来隔壁的产品老王说：下单成功后我们要给用户发短信，也将就吧100ms去发个短信。再后来。。。就变成下面这个样子：</p><p><img src="img/v2-2c1b76c33d54ae173e55b0830202cce9_720w.jpg"></p><p>采用异步操作后变成了这个样子：</p><p><img src="img/v2-f7bc2f81a4839f5988b5b1baf60c4c67_720w.jpg" alt="img"></p><p><strong>采用异步处理模式</strong><br>消息发送者可以发送一个消息而无需等待响应。消息发送者将消息发送到一条虚拟的通道（队列、主题）上；<br>消息接收者则订阅或监听该通道。一条信息可能最终转发给一个或多个消息接收者，这些接收者都无需对消息发送者做出同步回应。整个过程都是异步的。<br>例子：<br>也就是说，一个系统跟另外一个系统之间进行通信的时候，假如系统A希望发送一个消息给系统B，让他去处理。但是系统A不关注系统B到底怎么处理或者有没有处理好，所以系统A把消息发送给 MQ，然后就不管这条消息的 死活的，接着系统B从MQ里消费出来处理即可。至于怎么处理，是否处理完毕，什么时候处理，都是系统B的事儿，与系统A无关。这样的一种通信方式，就是所谓的 “异步” 通信方式，对于系统A来说，只要把消息发给MQ，然后系统B 就会异步的去进行处理了，系统A 不需要 “同步” 的等待系统B处理完。这样的好处是什么呢？两个字 “解 耦”。</p><h6 id="解耦"><a href="#解耦" class="headerlink" title="解耦"></a><strong>解耦</strong></h6><p>既然面试官这么问了，我就说一下为啥我们不能用线程去做，因为用线程去做，你是不是要写代码？</p><p>你一个订单流程，你扣积分，扣优惠券，发短信，扣库存。。。等等这么多业务要调用这么多的接口，<strong>每次加一个你要调用一个接口然后还要重新发布系统</strong>，写一次两次还好，写多了你就说：老子不干了！</p><p>而且真的全部都写在一起的话，不单单是耦合这一个问题，你出问题排查也麻烦，流程里面随便一个地方出问题搞不好会影响到其他的点，小伙伴说我每个流程都<strong>try catch</strong>不就行了，相信我别这么做，这样的代码就像个<strong>定时炸弹</strong> ，你不知道什么时候爆炸，平时不炸偏偏在你做活动的时候炸，你就领个<strong>P0故障</strong>收拾书包<strong>提前回家过年</strong>吧。</p><p>Tip：P0—PN 是互联网大厂经常用来判定事故等级的机制，P0是最高等级了。</p><p>但是你用了<strong>消息队列</strong>，耦合这个问题就迎刃而解了呀。</p><h6 id="削峰"><a href="#削峰" class="headerlink" title="削峰"></a><strong>削峰</strong></h6><p>就拿我上一期写的秒杀来说（暗示新同学看我上一期），你平时流量很低，但是你要做秒杀活动00 ：00的时候流量疯狂怼进来，你的服务器，<strong>Redis</strong>，<strong>MySQL</strong>各自的承受能力都不一样，你直接<strong>全部流量照单全收</strong>肯定有问题啊，直接就打挂了。</p><p> <strong>怎么办？</strong></p><p>简单，把请求放到队列里面，然后至于每秒消费多少请求，就看自己的<strong>服务器处理能力</strong>，你能处理5000QPS你就消费这么多，可能会比正常的慢一点，但是<strong>不至于打挂服务器</strong>，等流量高峰下去了，你的服务也就没压力了。</p><p>你看阿里双十一12：00的时候这么多流量瞬间涌进去，他有时候是不是会慢一点，但是人家没挂啊，或者降级给你个友好的提示页面，等高峰过去了又是一条好汉了。</p><p><strong>举一个例子说明：</strong></p><p><strong><a href="https://www.zhihu.com/question/34243607">消息队列的使用场景是怎样的？</a></strong></p><h3 id="安装RocketMQ"><a href="#安装RocketMQ" class="headerlink" title="安装RocketMQ"></a>安装RocketMQ</h3><p>官方网址：<a href="https://mirror.bit.edu.cn/apache/rocketmq/4.7.1/">https://mirror.bit.edu.cn/apache/rocketmq/4.7.1/</a></p><p>注意下载要下载<strong>bin</strong>的版本：</p><p>解压，使用maven下载依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> unzip rocketmq-all-4.7.1-source-release.zip</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">cd</span> rocketmq-all-4.7.1/</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> mvn -Prelease-all -DskipTests clean install -U</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">cd</span> distribution/target/rocketmq-4.7.1/rocketmq-4.7.1</span></span><br></pre></td></tr></table></figure><p>或者直接下载bin文件，然后上传到服务器解压即可，我下了两个版本，使用的是：</p><p><img src="img/image-20201206091806913.png" alt="image-20201206091806913"></p><p><strong>这里需要注意的是关于jdk的版本一定要是jdk8，比这个版本高的话，会出现无法启动的问题（这里就是阿里做的不对了，对jdk版本的适配性太差）</strong></p><p>还有一个重要的点就是，这个里面的<strong>rocketmq-4.7.1/bin</strong>下面的两个运行文件，默认分配给Java虚拟机的内存都是 <strong>4G</strong>,作为一个只有一个一核2G的我来说，实在是难为寡人了，于是修改一下以下两个文件：</p><p><img src="img/image-20201206092331472.png" alt="image-20201206092331472"></p><p>修改如下：</p><p><img src="img/image-20201206092436313.png" alt="image-20201206092436313"></p><p>到这里安装完成，运行一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> Start Name Server</span><br><span class="line"><span class="meta"> &gt;</span><span class="bash"> nohup sh bin/mqnamesrv &amp;</span></span><br><span class="line"><span class="meta"> &gt;</span><span class="bash"> tail -f ~/logs/rocketmqlogs/namesrv.log</span></span><br><span class="line"> The Name Server boot success...</span><br><span class="line">  </span><br><span class="line">Start Broker</span><br><span class="line"><span class="meta"> &gt;</span><span class="bash"> nohup sh bin/mqbroker -n localhost:9876 &amp;</span></span><br><span class="line"><span class="meta"> &gt;</span><span class="bash"> tail -f ~/logs/rocketmqlogs/broker.log</span> </span><br><span class="line"> The broker[%s, 172.30.30.233:10911] boot success...</span><br></pre></td></tr></table></figure><p>成功启动NameServer,不放心可以使用jps查看正在运行的Java项目</p><p><img src="img/image-20201206092710512.png" alt="image-20201206092710512"></p><p>成功启动Broker</p><p><img src="img/image-20201206092948521.png" alt="image-20201206092948521"></p><p>使用jps查看正在运行的Java程序</p><p><img src="img/image-20201206093035651.png" alt="image-20201206093035651"></p><p>我搭建这个环境用了好久，最后告诉我是jdk版本太高，也是无语 😶；网上有教程换成高版本，但是作为一个quickstart，对我们学习的程序员要求是不是有点高；淦</p><p>好了，接下来简单测试一下消费端和服务端的接收：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">export</span> NAMESRV_ADDR=localhost:9876</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> sh bin/tools.sh org.apache.rocketmq.example.quickstart.Producer</span></span><br><span class="line">SendResult [sendStatus=SEND_OK, msgId= ...</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> sh bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer</span></span><br><span class="line"><span class="meta">ConsumeMessageThread_%</span><span class="bash">d Receive New Messages: [MessageExt...</span></span><br></pre></td></tr></table></figure><p><img src="img/image-20201206095643819.png" alt="image-20201206095643819"></p><p>我们可以观察出他们之间的不同，发送端发送完毕后就结束，但是我们的接收端却一直等待接收，你在启动一次发送，接收端就会继续接收并打印信息；至此quick start到此结束；</p><p>关闭刚才开启的业务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; sh bin&#x2F;mqshutdown broker</span><br><span class="line">The mqbroker(36695) is running...</span><br><span class="line">Send shutdown request to mqbroker(36695) OK</span><br><span class="line"></span><br><span class="line">&gt; sh bin&#x2F;mqshutdown namesrv</span><br><span class="line">The mqnamesrv(36664) is running...</span><br><span class="line">Send shutdown request to mqnamesrv(36664) OK</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Python/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Python/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h3 id="一、与Java不同的地方（语法）"><a href="#一、与Java不同的地方（语法）" class="headerlink" title="一、与Java不同的地方（语法）"></a>一、与Java不同的地方（语法）</h3><h4 id="一、格式化输出和强制类型转换"><a href="#一、格式化输出和强制类型转换" class="headerlink" title="一、格式化输出和强制类型转换"></a>一、格式化输出和强制类型转换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;你的年纪是&quot;</span>)</span><br><span class="line">age=<span class="built_in">int</span>(age)</span><br><span class="line">msg = <span class="string">&quot;你的年纪是%d&quot;</span> % (age)</span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure><p>**格式化输出：%d %(field)**前面是类型后面是属性名字</p><p>**强制类型转换：a=int(a)**需要何种类型就用类型加括号就可以转换了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age=<span class="number">10</span>;</span><br><span class="line">print(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(age))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>占位输出，空一格输出就要给一个</p><h4 id="二、算数运算符"><a href="#二、算数运算符" class="headerlink" title="二、算数运算符"></a>二、算数运算符</h4><ul><li>x**y，x的y次方</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">5</span>**<span class="number">2</span>)</span><br><span class="line">//<span class="number">25</span></span><br></pre></td></tr></table></figure><ul><li><p>x//y,x➗y的值，整除，不会有小数点和四舍五入；要有小数点的话，需要使用x/y</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(5/2)======&gt; 2</span><br><span class="line">print(5//2)=======&gt;2.5</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Mybatis/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Mybatis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><h3 id="一、什么是Mybatis"><a href="#一、什么是Mybatis" class="headerlink" title="一、什么是Mybatis"></a>一、什么是Mybatis</h3><p>MyBatis 是一款优秀的<strong>持久层框架</strong>，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Ordinary Java Object,普通的 Java对象)映射成数据库中的记录。</p><p><strong>如何获得mybatis</strong></p><ul><li>maven 依赖</li><li>Github 原码</li></ul><p><strong>持久化：</strong></p><p>数据持久化：将数据进行一个持久化的变化；</p><p><strong>持久层：</strong></p><p>持久层，可以理解成数据 保存在 数据库或者 硬盘一类可以保存很长时间的设备里面，不像放在内存中那样断电就消失了，也就是把数据存在持久化设备上，mybatis就是持久层。</p><p><strong>特点</strong>：</p><ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的orm字段关系映射</li><li>提供对象关系映射标签，支持对象关系组建维护</li><li>提供xml标签，支持编写动态sql。</li></ul><h2 id="二、第一个mybatis项目"><a href="#二、第一个mybatis项目" class="headerlink" title="二、第一个mybatis项目"></a>二、第一个mybatis项目</h2><h3 id="一、数据库环境搭建"><a href="#一、数据库环境搭建" class="headerlink" title="一、数据库环境搭建"></a>一、数据库环境搭建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE &#96;mybatis&#96;;</span><br><span class="line">use &#96;mybatis&#96;;</span><br><span class="line">create TABLE &#96;saxon&#96;(</span><br><span class="line">&#96;id&#96; INT(10) not null ,</span><br><span class="line">&#96;user&#96; VARCHAR(20) not null,</span><br><span class="line">&#96;pwd&#96; VARCHAR(10) not null DEFAULT &quot;saxon&quot;,</span><br><span class="line">PRIMARY KEY(&#96;id&#96;)</span><br><span class="line">)ENGINE&#x3D;INNODB,CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">use &#96;mybatis&#96;;</span><br><span class="line">INSERT INTO  &#96;saxon&#96;(&#96;id&#96;,&#96;user&#96;,&#96;pwd&#96;) VALUES(1,&#39;saxon&#39;,&#39;1234567&#39;) </span><br></pre></td></tr></table></figure><h3 id="二、建立一个项目"><a href="#二、建立一个项目" class="headerlink" title="二、建立一个项目"></a>二、建立一个项目</h3><p>1.配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:localhost:3306/smbms?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234567&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/example/BlogMapper.xml&quot;</span>/&gt;</span><span class="comment">&lt;!-- 目录下的xml文件，中间用/隔开--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、编写工具类"><a href="#三、编写工具类" class="headerlink" title="三、编写工具类"></a>三、编写工具类</h3><p><strong>UserMapping:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.saxon.Dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.saxon</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>工具类</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUnit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;<span class="comment">//获得工厂，产生sqlsession；</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        String resource = <span class="string">&quot;org/mybatis/example/mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = Resources.getResourceAsStream (resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder ().build (inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得SQL session对象，就是jdbc中的statement对象，操作数据库</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="四、编写一个实体类"><a href="#四、编写一个实体类" class="headerlink" title="四、编写一个实体类"></a>四、编写一个实体类</h3><p>pojo:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span> <span class="params">(<span class="keyword">int</span> id, String user, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span> <span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span> <span class="params">(String user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span> <span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h3><p>测试代码;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Util.MybatisUnit;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获得sqlsession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        <span class="comment">//获得mapper对象,为了得到userdao，使用里面的方法；</span></span><br><span class="line">        UserDao mapper = sqlSession.getMapper (UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList = mapper.getUserList ();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println (user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==特别要注意的是，不要在配置文件，关键的xml里面写中文注释，会出现 2 字节的 UTF-8 序列的字节 2 无效的错误,，原因在编码，不清楚就不弄了==</strong></p><h2 id="三、CRUD"><a href="#三、CRUD" class="headerlink" title="三、CRUD"></a>三、CRUD</h2><h3 id="1-namespace"><a href="#1-namespace" class="headerlink" title="1.namespace"></a>1.namespace</h3><p>namespace要与我们的接口名一一对应；</p><h3 id="2-select"><a href="#2-select" class="headerlink" title="2.select"></a>2.select</h3><ul><li><strong>id</strong>：要与接口的方法名一致，作为一个我们唯一的标识；</li><li>**resultType:**返回值，如果是集合，写集合类型里面的东西；</li><li>**parameterType:**参数的类型 </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserID&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.saxon where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">       SqlSession sqlSession=<span class="keyword">null</span>;</span><br><span class="line">       <span class="comment">//关闭ssqlsession，这个关闭很重要</span></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//获得sqlsession对象</span></span><br><span class="line">           sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">           <span class="comment">//获得mapper对象,为了得到userdao，使用里面的方法；</span></span><br><span class="line">           UserDao mapper = sqlSession.getMapper (UserDao.class);</span><br><span class="line">           User userID = mapper.getUserID (<span class="number">2</span>);</span><br><span class="line">           System.out.println (userID);</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (sqlSession!=<span class="keyword">null</span>)&#123;</span><br><span class="line">              sqlSession.close ();</span><br><span class="line">          &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-insert"><a href="#3-insert" class="headerlink" title="3.insert"></a>3.insert</h3><h3 id="4-update"><a href="#4-update" class="headerlink" title="4.update"></a>4.update</h3><h3 id="5-delete"><a href="#5-delete" class="headerlink" title="5.delete"></a>5.delete</h3><p><strong>==除了查找之外，其他的都要提交事务，提交的话就是一句 sqlsession.commit()==</strong></p><h3 id="6-MAP-的使用"><a href="#6-MAP-的使用" class="headerlink" title="6.MAP 的使用"></a>6.MAP 的使用</h3><p>在一个实体类属性太多的时候，我们就可以用一个集合来添加属性；</p><p>直接利用key-value取出我们要的值；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">     update mybatis.saxon set user=#&#123;user&#125; ,pwd=#&#123;pwd&#125; where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserDao mapper = sqlSession.getMapper (UserDao.class);</span><br><span class="line">       Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">       map.put (<span class="string">&quot;id&quot;</span>,<span class="number">2</span>);</span><br><span class="line">       map.put (<span class="string">&quot;user&quot;</span>,<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">       map.put (<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;441564161&quot;</span>);</span><br><span class="line">       mapper.update (map);</span><br><span class="line">       sqlSession.commit ();</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>#{user}：里面的值就是你集合里面设置的值；</p><h3 id="7-模糊查询"><a href="#7-模糊查询" class="headerlink" title="7.模糊查询"></a>7.模糊查询</h3><p>1.在给出变量的时候拼接出来。例如String str=”%李%”；但是这个会存在sql注入的问题；</p><p>2.在我们写查询语句的时候，就在值的左右把他写成固定的；就是“%”#{value}“%”;可以避免一些注入问题；</p><h3 id="8-核心配置文件-mybatis-config-xml"><a href="#8-核心配置文件-mybatis-config-xml" class="headerlink" title="8.核心配置文件(mybatis-config.xml)"></a>8.核心配置文件(mybatis-config.xml)</h3><h4 id="1-properties-配置"><a href="#1-properties-配置" class="headerlink" title="1.properties 配置"></a>1.properties 配置</h4><p>我们的配置文件可以自己写成一个配置文件，也可以自己直接赋值</p><p><strong>==关于配置properties的位置，一定要放在第一位，他的位置有规定的==</strong></p><p>1.配置文件法</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://rm-wz917wbvou67a757quo.mysql.rds.aliyuncs.com:3306/mybatis?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">saxon</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">111111</span></span><br></pre></td></tr></table></figure><p>引用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 读取配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span>   </span><br></pre></td></tr></table></figure><p>2.直接写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:localhost:3306/smbms?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-environments-环境"><a href="#2-environments-环境" class="headerlink" title="2.environments 环境"></a>2.environments 环境</h4><p>这个标签是关于环境的标签，我们可以配置多套环境但是只能使用一套环境；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>environments和environment通过id选择环境；你可以自定义环境；</p><h4 id="3-transactionManager-事务管理"><a href="#3-transactionManager-事务管理" class="headerlink" title="3.transactionManager 事务管理"></a>3.transactionManager 事务管理</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>事务的管理者，有两种，但是mybatis默认的是JDBC，还有另外一种叫做 <strong>MANGED</strong></p><h4 id="4-dataSource-数据源"><a href="#4-dataSource-数据源" class="headerlink" title="4.dataSource  数据源"></a>4.dataSource  数据源</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认的是pooled还有其他两种，一共是[UNPOOLED|POOLED|JNDI]这三种；</p><h4 id="5-typeAliases-别名"><a href="#5-typeAliases-别名" class="headerlink" title="5 .typeAliases.别名"></a>5 .typeAliases.别名</h4><p>第一种：直接配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种：扫描包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.saxon.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>取别名就是为了在我们使用的时候，避免重复的写一些冗长的代码，比如com.saxon.pojo.Use，我们取得别名就是user，那么我们在resultType要使用com.saxon.pojo.Use就可以使用user。</p><p>两种配置的区别：</p><p>1.第一种可以自己写名字，第二种的默认是类名的首字母大写，如果要自定义的话，可以在类名上加上一个注解@Aliases(“”);</p><p>2.当我们类名比较少的时候就可以用第一种，当我们类名比较多的时候，直接使用扫描包就可以了；</p><h4 id="6-setting设置"><a href="#6-setting设置" class="headerlink" title="6.setting设置"></a>6.setting设置</h4><h5 id="1-mapUnderscoreToCamelCase-把only-name变成onlyName-把有下划线的命名取成驼峰命名；"><a href="#1-mapUnderscoreToCamelCase-把only-name变成onlyName-把有下划线的命名取成驼峰命名；" class="headerlink" title="1.mapUnderscoreToCamelCase:把only_name变成onlyName,把有下划线的命名取成驼峰命名；"></a>1.mapUnderscoreToCamelCase:把only_name变成onlyName,把有下划线的命名取成驼峰命名；</h5><h5 id="2-logImpl：日志的输出可以取的值有：SLF4J-LOG4J-LOG4J2-JDK-LOGGING-COMMONS-LOGGING-STDOUT-LOGGING-NO-LOGGING"><a href="#2-logImpl：日志的输出可以取的值有：SLF4J-LOG4J-LOG4J2-JDK-LOGGING-COMMONS-LOGGING-STDOUT-LOGGING-NO-LOGGING" class="headerlink" title="2.logImpl：日志的输出可以取的值有：SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING"></a>2.logImpl：日志的输出可以取的值有：SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING</h5><h4 id="7-mapper映射器"><a href="#7-mapper映射器" class="headerlink" title="7.mapper映射器"></a>7.mapper映射器</h4><p>第一种：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/saxon/Dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>==使用第二种的时候必须保证两点：1.映射和实体类必须要在同一个包里；2.并且要和这个类的名字相符；简单来说就是通过你绑定的这个类，去找和这个类名一样的文件xml文件==</strong></p><p>第三种：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.saxon.Dao&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用第三种的要求和第二种是一样的；</p><p><strong>所以一般推荐使用第一种</strong></p><h4 id="8-作用域（Scope）和生命周期SqlSessionFactoryBuilder"><a href="#8-作用域（Scope）和生命周期SqlSessionFactoryBuilder" class="headerlink" title="8.作用域（Scope）和生命周期SqlSessionFactoryBuilder"></a>8.作用域（Scope）和生命周期SqlSessionFactoryBuilder</h4><h5 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h5><p>这个类可以被实例化、使用和丢弃<strong>，一旦创建了 SqlSessionFactory，就不再需要它了</strong>。 因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，</p><h5 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h5><p><strong>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在</strong>，没有任何理由丢弃它或重新创建另一个实例。 使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏习惯”。因此 SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用<strong>单例模式</strong>或者静态单例模式。</p><h5 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h5><p><strong>每个线程都应该有它自己的 SqlSession 实例</strong>。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。 绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，考虑将 SqlSession 放在一个和 HTTP 请求相似的作用域中。 换句话说，每次收到 HTTP 请求，就可以打开一个 SqlSession，返回一个响应后，<strong>就关闭它。 这个关闭操作很重要</strong>，为了确保每次都能执行关闭操作，你应该把这个关闭操作放到 finally 块中。 下面的示例就是一个确保 SqlSession 关闭的标准模式：</p><p><strong>每次的一个sqlsession都是为了完成一次的任务，CRUD</strong></p><h4 id="9-结果集映射"><a href="#9-结果集映射" class="headerlink" title="9.结果集映射"></a>9.结果集映射</h4><p>就是数据库里面的字段和实体类里面的属性的映射；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;users&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;users&quot;</span>&gt;</span><span class="comment">&lt;!-- the must match with  a pojo--&gt;</span></span><br><span class="line">   select * from mybatis.saxon</span><br><span class="line"> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得sqlsession对象</span></span><br><span class="line">sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line"><span class="comment">//获得mapper对象,为了得到userdao，使用里面的方法；</span></span><br><span class="line">UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">List&lt;User&gt; userList = mapper.getUserList ();</span><br><span class="line">User user = userList.get (<span class="number">1</span>);</span><br><span class="line">System.out.println (user.getPassword ());</span><br><span class="line">System.out.println (userList);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四、日志"><a href="#四、日志" class="headerlink" title="四、日志"></a>四、日志</h2><p><strong>setting设置：logImpl（key） ：</strong></p><ul><li>**SLF4J **</li><li><strong>LOG4J（掌握）</strong></li><li><strong>LOG4J2</strong></li><li><strong>JDK_LOGGING</strong></li><li><strong>COMMONS_LOGGING</strong> </li><li><strong>STDOUT_LOGGING</strong> (掌握)</li><li><strong>NO_LOGGING</strong></li></ul><p><strong>第一种</strong>：<strong>STDOUT_LOGGING</strong> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>日志输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Logging initialized using <span class="string">&#x27;class org.apache.ibatis.logging.stdout.StdOutImpl&#x27;</span> adapter.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">Class not found: org.jboss.vfs.VFS</span><br><span class="line">JBoss 6 VFS API is not available <span class="keyword">in</span> this environment.</span><br><span class="line">Class not found: org.jboss.vfs.VirtualFile</span><br><span class="line">VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid <span class="keyword">in</span> this environment.</span><br><span class="line">Using VFS adapter org.apache.ibatis.io.DefaultVFS</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao</span><br><span class="line">Reader entry: UserDaoTest.class</span><br><span class="line">Listing file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao/UserDaoTest.class</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/test-classes/com/saxon/Dao/UserDaoTest.class</span><br><span class="line">Reader entry: ����   5 �</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao</span><br><span class="line">Reader entry: UserMapper.class</span><br><span class="line">Reader entry: UserMapper.xml</span><br><span class="line">Listing file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao</span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.class</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.class</span><br><span class="line">Reader entry: ����   5    getUserList ()Ljava/util/List; Signature )()Ljava/util/List&lt;Lcom/saxon/pojo/User;&gt;; getUserID (I)Lcom/saxon/pojo/User; </span><br><span class="line">Find JAR URL: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.xml</span><br><span class="line">Not a JAR: file:/D:/IDEAL项目/Saxon_Mybatis/mybatis_01/target/classes/com/saxon/Dao/UserMapper.xml</span><br><span class="line">Reader entry: &lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">Checking to see <span class="keyword">if</span> class com.saxon.Dao.UserDaoTest matches criteria [is assignable to Object]</span><br><span class="line">Checking to see <span class="keyword">if</span> class com.saxon.Dao.UserMapper matches criteria [is assignable to Object]</span><br><span class="line">org.apache.ibatis.session.defaults.DefaultSqlSessionFactory@1e1a0406</span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 220695851.</span><br><span class="line">Setting autocommit to <span class="literal">false</span> on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">==&gt;  Preparing: select * from mybatis.saxon</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, user, <span class="built_in">pwd</span></span><br><span class="line">&lt;==        Row: 1, saxon, 1234567</span><br><span class="line">&lt;==        Row: 2, saxon, 441564161</span><br><span class="line">&lt;==      Total: 2</span><br><span class="line">441564161</span><br><span class="line">[User&#123;id=1, user=<span class="string">&#x27;saxon&#x27;</span>, <span class="built_in">pwd</span>=<span class="string">&#x27;1234567&#x27;</span>&#125;, User&#123;id=2, user=<span class="string">&#x27;saxon&#x27;</span>, <span class="built_in">pwd</span>=<span class="string">&#x27;441564161&#x27;</span>&#125;]</span><br><span class="line">Resetting autocommit to <span class="literal">true</span> on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Returned connection 220695851 to pool.</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重要信息：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 220695851.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">==&gt;  Preparing: select * from mybatis.saxon</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, user, pwd</span><br><span class="line">&lt;==        Row: 1, saxon, 1234567</span><br><span class="line">&lt;==        Row: 2, saxon, 441564161</span><br><span class="line">&lt;==      Total: 2</span><br><span class="line"><span class="number">441564161</span></span><br><span class="line">[User&#123;id=1, user=&#x27;saxon&#x27;, pwd=&#x27;1234567&#x27;&#125;, User&#123;id=2, user=&#x27;saxon&#x27;, pwd=&#x27;441564161&#x27;&#125;]</span><br><span class="line">Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@d278d2b]</span><br><span class="line">Returned connection 220695851 to pool.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第二种：<strong>LOG4J</strong></p><p>1.先导入包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.setting设置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="comment">#存储的位置</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/saxon.log</span></span><br><span class="line"><span class="comment">#存储的最大大小，超出这个就在生成另一个</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="comment">#格式</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"><span class="comment">#是否追加</span></span><br><span class="line"><span class="meta">log4j.appender.file.Append</span>=<span class="string">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">static</span> Logger logger = Logger.getLogger (UserDaoTest.class);</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">testLog4j</span><span class="params">()</span></span>&#123;</span><br><span class="line">        logger.info (<span class="string">&quot;我是谁&quot;</span>);</span><br><span class="line">        logger.error (<span class="string">&quot;我是谁&quot;</span>);</span><br><span class="line">        logger.debug (<span class="string">&quot;我是谁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、分页"><a href="#五、分页" class="headerlink" title="五、分页"></a>五、分页</h2><h3 id="1-使用limit分页"><a href="#1-使用limit分页" class="headerlink" title="1.使用limit分页"></a>1.使用limit分页</h3><p>1.方法：利用集合去接受结果，把分页的数值存在map中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getLimit</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><p>2.SQL语句,就像前面提到的那样，我们的结果如果是list。那么把泛型数据填在里面；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.saxon.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getLimit&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">          select * from mybatis.saxon limit $&#123;startIndex&#125;,$&#123;pageSize&#125;;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">limit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">        Map&lt;String, Integer&gt; Map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        Map.put (<span class="string">&quot;startIndex&quot;</span>,<span class="number">0</span>);</span><br><span class="line">        Map.put (<span class="string">&quot;pageSize&quot;</span>,<span class="number">2</span>);</span><br><span class="line">        List&lt;User&gt; limit =  mapper.getLimit (Map);</span><br><span class="line">        <span class="keyword">for</span> (User user : limit) &#123;</span><br><span class="line">            System.out.println (user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-使用rowbounds"><a href="#2-使用rowbounds" class="headerlink" title="2.使用rowbounds"></a>2.使用rowbounds</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页2</span></span><br><span class="line">  <span class="function">List&lt;User&gt; <span class="title">getLimitby</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>分页操作由rowbounds做</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getLimitby&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.saxon</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">testRowbounds</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        RowBounds rowBounds = <span class="keyword">new</span> RowBounds (<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//其实下标和也页面大小</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList (<span class="string">&quot;com.saxon.Dao.UserMapper.getLimitby&quot;</span>, <span class="keyword">null</span>,rowBounds );</span><br><span class="line">        <span class="keyword">for</span> (User o : list) &#123;</span><br><span class="line">            System.out.println (o);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-使用插件"><a href="#3-使用插件" class="headerlink" title="3.使用插件"></a>3.使用插件</h3><p>例:pageHelper</p><h2 id="六、使用注解开发"><a href="#六、使用注解开发" class="headerlink" title="六、使用注解开发"></a>六、使用注解开发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解、</span></span><br><span class="line"><span class="meta">@Select</span> (<span class="string">&quot;select * from mybatis.saxon&quot;</span>)</span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>这是我们的映射就要使用类名来注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.saxon.Dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAn</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">       List&lt;User&gt; userList = mapper.getUser ();</span><br><span class="line">       <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">           System.out.println (user);</span><br><span class="line">       &#125;</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这个办法只可以处理简单的sql语句，处理复杂的sql语句，会使得程序变得混乱不堪；一些复杂的操作我们还是推荐使用我们的xml配置文件来完成；当然我们也可以把二者进行一个结合，但是我们注册的时候，我们的接口名和xml名字要一样；</p><h4 id="二-CRUD"><a href="#二-CRUD" class="headerlink" title="二.CRUD"></a>二.CRUD</h4><h5 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解查询语句</span></span><br><span class="line">   <span class="meta">@Select</span> (<span class="string">&quot;select * from mybatis.saxon where id=#&#123;id&#125;&quot;</span>)</span><br><span class="line">   <span class="function">User <span class="title">select</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">   </span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">       User select = mapper.select (<span class="number">1</span>);</span><br><span class="line">       System.out.println (select);</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="2-添加"><a href="#2-添加" class="headerlink" title="2.添加"></a>2.添加</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解添加用户</span></span><br><span class="line">   <span class="meta">@Insert</span> (<span class="string">&quot;insert into mybatis.saxon(id,user,pwd) values(#&#123;id&#125;,#&#123;user&#125;,#&#123;password&#125;)&quot;</span>)</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(User user)</span></span>;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">       UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">       mapper.insert (<span class="keyword">new</span> User (<span class="number">2</span>,<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;1234567&quot;</span>));</span><br><span class="line">       sqlSession.commit ();</span><br><span class="line">       sqlSession.close ();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="3-更新"><a href="#3-更新" class="headerlink" title="3.更新"></a>3.更新</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update</span> (<span class="string">&quot;update mybatis.saxon set user=#&#123;user&#125; , pwd=#&#123;pwd&#125;  where id=#&#123;id&#125;&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span> <span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">@org</span>.junit.Test</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">    mapper.update (<span class="keyword">new</span> User (<span class="number">2</span>,<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;12345 67&quot;</span>));</span><br><span class="line">    sqlSession.commit ();</span><br><span class="line">    sqlSession.close ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-删除"><a href="#4-删除" class="headerlink" title="4.删除"></a>4.删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用注解删除用户</span></span><br><span class="line">    <span class="meta">@Delete</span> (<span class="string">&quot;delete from mybatis.saxon where id=#&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="meta">@Param</span> (<span class="string">&quot;id&quot;</span>)</span> <span class="keyword">int</span> id)</span>;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper (UserMapper.class);</span><br><span class="line">        mapper.delete (<span class="number">2</span>);</span><br><span class="line">        sqlSession.commit ();</span><br><span class="line">        sqlSession.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在我们每一次的提交数据的时候，都要设置自动提交，我们可以在sqlsession建立的时候就可以把自动提交设置为true；这样可以每次不必要的去设置我们的数据提交，但是带来的隐患就是我们的数据无论对错都会被提交；</p><p><strong>每写一个查询的功能，就要注册一个mapper，在mybatis-config.xml中配置</strong></p><h5 id="5-关于-Param"><a href="#5-关于-Param" class="headerlink" title="5.关于@Param"></a>5.关于@Param</h5><p>在后面的使用中，我们的@Param中的东西才是我们取值的重点,才会被取到，如果我们的对象是引用数值类型就不用写；基础类型要写，如果只有一个基础类型的话可以不用写，我们在SQL语句中引用的就是@param()中的；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span> (<span class="string">&quot;select * from mybatis.saxon where id=#&#123;uid&#125;&quot;</span>)</span><br><span class="line"><span class="function">User <span class="title">select</span> <span class="params">(<span class="meta">@Param</span> (<span class="string">&quot;uid&quot;</span>)</span> <span class="keyword">int</span> id)</span>;</span><br></pre></td></tr></table></figure><h2 id="七、mybatis的实现流程"><a href="#七、mybatis的实现流程" class="headerlink" title="七、mybatis的实现流程"></a>七、mybatis的实现流程</h2><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/5f2ea3c9637689313ac372b0.png"></p><h2 id="八、LOMBOK"><a href="#八、LOMBOK" class="headerlink" title="八、LOMBOK"></a>八、LOMBOK</h2><p>由于我的idea的版本问题，版本是202-2的版本，用Lombok会有问题；所以我不用了。一切用手敲；我在GitHub上看了那一个开发人员的话，他还在度假，所以不知道何时解决；一直有这个问题；也许是我的版本太高了，如果用不了就降一个版本；</p><h2 id="九、复杂查询"><a href="#九、复杂查询" class="headerlink" title="九、复杂查询"></a>九、复杂查询</h2><h3 id="一、多对一查询"><a href="#一、多对一查询" class="headerlink" title="一、多对一查询"></a>一、多对一查询</h3><p>环境搭建：</p><p>student:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Teacher teacher;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, teacher=&quot;</span> + teacher +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>teacher:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span>+</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-第一种根据查询嵌套查询"><a href="#1-第一种根据查询嵌套查询" class="headerlink" title="1.第一种根据查询嵌套查询"></a>1.第一种根据查询嵌套查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>   <span class="attr">javaType</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentInfo&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    select * from student;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.teacher where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-第二种：根据查询的结果查询"><a href="#2-第二种：根据查询的结果查询" class="headerlink" title="2.第二种：根据查询的结果查询"></a>2.第二种：根据查询的结果查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentInfo2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">     select s.id as id,s.name as student,t.name as teacherName</span><br><span class="line">     from student s,teacher t</span><br><span class="line">     where s.tid=t.id;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;student&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;teacherName&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们查出来的数据有一个是一个对象，那么我们就用这个对象再来查询一次；根据我们的sql语句，我们的teacherName是查询的别名，对应的就是实体类中的老师的名字；这个效果和子查询的结果是一样的；</p><h3 id="二、一对多查询"><a href="#二、一对多查询" class="headerlink" title="二、一对多查询"></a>二、一对多查询</h3><p>环境搭建:</p><p>student:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, tid=&quot;</span> + tid +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>teacher:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, list=&quot;</span> + students +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-第一种根据查询结果查询"><a href="#1-第一种根据查询结果查询" class="headerlink" title="1.第一种根据查询结果查询"></a>1.第一种根据查询结果查询</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.saxon.Dao.teacherMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;teach&quot;</span>&gt;</span></span><br><span class="line">  select t.id ,t.name,s sid,s.name sname from teacher t,student s</span><br><span class="line">  where t.id=s.tid and t.id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;teach&quot;</span> <span class="attr">type</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>步骤：</p><p>1.先根据写出的函数来进行一个语句的书写；</p><p>2.对结果集合进行一个映射。</p><p>3.字段里面有的映射出来 其中column表示的是数据库中的字段，property表示的是实体类的字段；一一对应关系；</p><p>4.我们的老师类子段中由一个集合，那么结果映射就是一个集合，结果集合就用collection来表示；oftype表示泛型；</p><p>5.在对我们的泛型里面的字段进行一个映射，有的字段进行一个一一对应；</p><p>特别注意的是我不知道为何学生字段必须全部有，删除一个无法编译；</p><h4 id="2-第二种-不会，因为直接看不懂"><a href="#2-第二种-不会，因为直接看不懂" class="headerlink" title="2.第二种 不会，因为直接看不懂"></a>2.第二种 不会，因为直接看不懂</h4><p><strong>总结：集合使用collection，对象使用assoation，前者泛型使用oftype后者对象使用JavaType</strong></p><h2 id="十、动态sql"><a href="#十、动态sql" class="headerlink" title="十、动态sql"></a>十、动态sql</h2><h3 id="1-if"><a href="#1-if" class="headerlink" title="1.if"></a>1.if</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;views!=null&quot;</span>&gt;</span></span><br><span class="line">                and views&gt;#&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                and title =#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>if就是一个判断语句，我们的条件满足时将sql拼接上去。使用where标签时，如果是第一个条件，那么就会把开头的and或者or删除，在拼接；</strong></p><h3 id="2-choose、when、otherwise"><a href="#2-choose、when、otherwise" class="headerlink" title="2.choose、when、otherwise"></a>2.choose、when、otherwise</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                    title=#&#123;title&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">                    author=#&#123;author&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    1=1</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>choose语句相当于Java中的switch语句，那么when就是case标签，otherwise就是default标签，这个拼接和顺序有关，如果我们的条件都成立的话，那么就会只走第一个，相当于switch里面的条件成立就会break一样</strong></p><h3 id="3-set"><a href="#3-set" class="headerlink" title="3.set"></a>3.set</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        update mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">                author=#&#123;author&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>用于数据库的更新，set会自动帮我们去掉只有一句的时候的句末的逗号和最后一句的句末的逗号==需要注意的是，你如果没有加上的话，他是不会自动帮你添加的==</strong></p><h3 id="4-sql字段"><a href="#4-sql字段" class="headerlink" title="4.sql字段"></a>4.sql字段</h3><p>将一段可能复用的代码进行一个复用；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;sql_title_author&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">                author=#&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                1=1</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;sql_title_author&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>sql片段不要使用过于复杂的语句，这样会降低代码的复用性</li><li>在代码片段里面不要加上where，set等，不然会让代码复用性降低</li></ul><h3 id="5-foreach"><a href="#5-foreach" class="headerlink" title="5.foreach"></a>5.foreach</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.saxon.pojo.Blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;views&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;views&quot;</span>&gt;</span></span><br><span class="line">                views=#&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>里面的open，close和separator 构成拼接sql语句 item是集合中遍历的元素 collection表示的属性的名字，就是你放在map集合里面key的值，views=#{views}是拼接语句的内容，每一句之间用or隔开</strong></p><p>下面就是拼接后的字符串：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mybatis.blog <span class="keyword">WHERE</span> ( views=? <span class="keyword">or</span> views=? )</span><br></pre></td></tr></table></figure><h2 id="十一、缓存"><a href="#十一、缓存" class="headerlink" title="十一、缓存"></a>十一、缓存</h2><h3 id="2-一级缓存"><a href="#2-一级缓存" class="headerlink" title="2.一级缓存"></a>2.一级缓存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        BlogMapper mapper = sqlSession.getMapper (BlogMapper.class);</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        map.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;queen&quot;</span>);</span><br><span class="line">        Blog blog = mapper.getBlog (map);</span><br><span class="line">        System.out.println (blog);</span><br><span class="line">        System.out.println (<span class="string">&quot;****************************&quot;</span>);</span><br><span class="line">        map.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;queen&quot;</span>);</span><br><span class="line">        Blog blog1 = mapper.getBlog (map);</span><br><span class="line">        System.out.println (blog1);</span><br><span class="line">        sqlSession.commit ();</span><br><span class="line">        sqlSession.close ();</span><br></pre></td></tr></table></figure><p>一级缓存是在sqlsession层面上的，在sqlsession产生到关闭之间的涉及增删改查的数据都会被保存下来</p><p>效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: select * from mybatis.blog <span class="built_in">where</span> author=?</span><br><span class="line">==&gt; Parameters: queen(String)</span><br><span class="line">&lt;==    Columns: id, title, author, create_time, views</span><br><span class="line">&lt;==        Row: 566993470e944aa2ba4003c7ccbfaf5d, 我是最帅的, queen, 2020-08-09 10:23:10, 10</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Blog&#123;author=<span class="string">&#x27;queen&#x27;</span>, createTime=null, id=<span class="string">&#x27;566993470e944aa2ba4003c7ccbfaf5d&#x27;</span>, title=<span class="string">&#x27;我是最帅的&#x27;</span>, views=10&#125;</span><br><span class="line">****************************</span><br><span class="line">Blog&#123;author=<span class="string">&#x27;queen&#x27;</span>, createTime=null, id=<span class="string">&#x27;566993470e944aa2ba4003c7ccbfaf5d&#x27;</span>, title=<span class="string">&#x27;我是最帅的&#x27;</span>, views=10&#125;</span><br></pre></td></tr></table></figure><p>由于存在缓存，我们的第二次查询就没有执行查询语句，而是直接从缓存中取出来；</p><p>可以利用sqlSession.clearCache()来清除缓存；清除以后的话，就会在加载一次数据库；</p><p><strong>缓存消失的原因：</strong></p><ul><li>自己清除，利用函数</li><li>查询语句会被我们的增删改语句覆盖，目的就是我们的增删改已经修改了数据，再次访问缓存里面的就会导致取出的数据不真实；</li><li>查询的是不同的mapper.xml下面的东西</li><li>查询不同的东西，比如查询一号和二号</li></ul><h3 id="3-二级缓存"><a href="#3-二级缓存" class="headerlink" title="3.二级缓存"></a>3.二级缓存</h3><p>当你使用二级缓存的时候，只有一级缓存会话消失后才会缓存到二级缓存；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUnit.getSqlSession ();</span><br><span class="line">        SqlSession sqlSession2 = MybatisUnit.getSqlSession ();</span><br><span class="line">        BlogMapper mapper = sqlSession.getMapper (BlogMapper.class);</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        map.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Queen and King&quot;</span>);</span><br><span class="line">        Blog blog = mapper.getBlog (map);</span><br><span class="line">        System.out.println (blog);</span><br><span class="line">        sqlSession.close ();<span class="comment">//会话关闭，一级缓存变成二级缓存</span></span><br><span class="line"></span><br><span class="line">        System.out.println (<span class="string">&quot;++++++++++++++++++++++++++++++++++++++++++++++++&quot;</span>);</span><br><span class="line"></span><br><span class="line">        BlogMapper mapper2 = sqlSession2.getMapper (BlogMapper.class);</span><br><span class="line">        Map&lt;String, Object&gt; map2 = <span class="keyword">new</span> HashMap&lt;&gt; ();</span><br><span class="line">        map2.put (<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Queen and King&quot;</span>);</span><br><span class="line">        Blog blog2 = mapper2.getBlog (map);</span><br><span class="line">        System.out.println (blog2);</span><br><span class="line">        sqlSession2.close ();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用cache就只需要一个标签就可以了</p><p>注意：</p><ul><li>缓存的时候，实体类要序列化，所以我们的实体类要继承序列化接口</li><li>二级缓存的作用域就是namespace，一个mpper.xml,所有数据都放在先放在一级缓存，只有当我们关闭会话，这个才回到二级缓存；</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Linux/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Linux/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="linux目录"><a href="#linux目录" class="headerlink" title="linux目录"></a>linux目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/bin： bin是Binary的缩写, 这个目录存放着最经常使用的命令。</span><br><span class="line">/boot： 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</span><br><span class="line">/dev ： dev是Device(设备)的缩写, 存放的是Linux的外部设备，在Linux中访问设备的方式和访问</span><br><span class="line">文件的方式是相同的。</span><br><span class="line">/etc： 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</span><br><span class="line">/home：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账</span><br><span class="line">号命名的。</span><br><span class="line">/lib： 这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。</span><br><span class="line">/lost+found： 这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</span><br><span class="line">/media：linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备</span><br><span class="line">挂载到这个目录下。</span><br><span class="line">/mnt：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，</span><br><span class="line">然后进入该目录就可以查看光驱里的内容了。</span><br><span class="line">/opt：这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个</span><br><span class="line">目录下。默认是空的。</span><br><span class="line">/proc： 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获</span><br><span class="line">取系统信息。</span><br><span class="line">/root：该目录为系统管理员，也称作超级权限者的用户主目录。</span><br><span class="line">/sbin：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</span><br><span class="line">/srv：该目录存放一些服务启动之后需要提取的数据。</span><br><span class="line">/sys：这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统</span><br><span class="line">sysfs 。</span><br><span class="line">/tmp：这个目录是用来存放一些临时文件的。</span><br><span class="line">/usr：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows</span><br><span class="line">下的program files目录。</span><br><span class="line">/usr/bin： 系统用户使用的应用程序。</span><br><span class="line">/usr/sbin： 超级用户使用的比较高级的管理程序和系统守护程序。</span><br><span class="line">/usr/src： 内核源代码默认的放置目录。</span><br><span class="line">/var：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录</span><br><span class="line">下。包括各种日志文件。</span><br><span class="line">/run：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被</span><br><span class="line">删掉或清除。</span><br></pre></td></tr></table></figure><h2 id="Linux配置环境变量"><a href="#Linux配置环境变量" class="headerlink" title="Linux配置环境变量"></a>Linux配置环境变量</h2><p><strong>一，java环境变量配置</strong></p><p>1.linux操作系统下：</p><p>在/etc/profile或者~/.bashrc 中增加下面：</p><p>export JAVA_HOME=/home/codebrother/jdk/jdk1.7.0_25</p><p>export JAVA_BIN=$JAVA_HOME/bin</p><p>export JAVA_LIB=$JAVA_HOME/lib</p><p>export CLASSPATH=.:$JAVA_LIB/tools.jar:$JAVA_LIB/dt.jar</p><p>export PATH=$JAVA_BIN:$PATH</p><p>2.window操作系统下：</p><p>（1）系统变量→新建 JAVA_HOME 变量 。<br>变量值填写jdk的安装目录（本人是 E:Javajdk1.7.0)</p><p>（2）系统变量→寻找 Path 变量→编辑</p><p>在变量值最后输入 %JAVA_HOME%bin;%JAVA_HOME%jrebin;</p><p>（3）系统变量→新建 CLASSPATH 变量</p><p>变量值填写 .;%JAVA_HOME%lib;%JAVA_HOME%libtools.jar<br>（注意最前面有一点）</p><p>系统变量配置完毕</p><p><strong>二，maven环境变量配置</strong></p><p>1.linux操作系统下：</p><p>在/etc/profile或者~/.bashrc 中增加下面：</p><p>export M2_HOME=/home/sunft/software/apache-maven-3.5.2</p><p>export PATH=${M2_HOME}/bin:$PATH</p><p>2.window操作系统下</p><p>设置环境变量：MAVEN_HOME</p><p>点击确定之后，在系统变量里找到path，点击编辑，</p><p>把;%MAVEN_HOME%bin;这句放在路径的最后面，前后都有分号。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz94khotag1q066igytrZ /]# export MAVEN_HOME=/usr/apache-maven-3.6.3</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# export MAVEN_HOME</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# export PATH=$PATH:$MAVEN_HOME/bin</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# source /etc/profile 让配置文件生效</span><br><span class="line">[root@iZwz94khotag1q066igytrZ /]# mvn -v</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JVM/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JVM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>补一下基础：</p><p>JVM java虚拟机； </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h5 id="1-Java基础：面向对象"><a href="#1-Java基础：面向对象" class="headerlink" title="1.Java基础：面向对象"></a>1.Java基础：面向对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">student</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-多线程编程"><a href="#2-多线程编程" class="headerlink" title="2.多线程编程"></a>2.多线程编程</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.实现Runnable接口，重写run()方法，run()方法代表线程要执行的任务。</span></span><br><span class="line"><span class="comment"> * 2.继承Thread类，重写run()方法</span></span><br><span class="line"><span class="comment"> * 3.实现callable接口，重写call()方法，call()作为线程的执行体，具有返回值，并且可以对异常进行声明和抛出,有返回值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.run ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">V</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Runnable <span class="title">call</span> <span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-常用类库"><a href="#3-常用类库" class="headerlink" title="3.常用类库"></a>3.常用类库</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo65</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要写入的内容，并用空格隔开：&quot;</span>);</span><br><span class="line">        Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String regx=<span class="string">&quot; &quot;</span>;</span><br><span class="line">        scan.nextLine().split(regx);</span><br><span class="line">        StringBuffer str=<span class="keyword">new</span> StringBuffer();</span><br><span class="line">        StringBuffer reverse = str.reverse();</span><br><span class="line">        System.out.println(reverse);</span><br><span class="line">        <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-I-O编程"><a href="#4-I-O编程" class="headerlink" title="4.I/O编程"></a>4.I/O编程</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(<span class="string">&quot;d:\\test\\copy\\random.txt&quot;</span>);</span><br><span class="line">Writer output=<span class="keyword">new</span> FileWriter(file);</span><br><span class="line">BufferedReader input=<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(FILE));</span><br><span class="line">ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(FILE));</span><br></pre></td></tr></table></figure><h5 id="5-反射机制"><a href="#5-反射机制" class="headerlink" title="5.反射机制"></a>5.反射机制</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得反射对象的3个方法</span></span><br><span class="line"><span class="comment">//--------第一种-----------------</span></span><br><span class="line">Class.forName();</span><br><span class="line"><span class="comment">//--------第二种---------------</span></span><br><span class="line">Class c2 = Employee.class;</span><br><span class="line"><span class="comment">//--------第三种---------------</span></span><br><span class="line">Employee e = <span class="keyword">new</span> Employee();</span><br><span class="line">Class c3 = e.getClass();</span><br><span class="line"><span class="comment">//----------------------------</span></span><br><span class="line">instance.getClass ().getDeclaredConstructor ()<span class="comment">//获得构造器</span></span><br><span class="line">instance.getClass ().getDeclaredField ();<span class="comment">//获得属性</span></span><br><span class="line">instance.getClass ().getDeclaredMethod ()<span class="comment">//获得方法</span></span><br></pre></td></tr></table></figure><h5 id="6-集合类"><a href="#6-集合类" class="headerlink" title="6.集合类"></a>6.集合类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; all = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">Set&lt;Integer&gt; set=<span class="keyword">new</span> HashSet&lt;&gt; ();</span><br><span class="line">Map&lt;K,V&gt; m=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br></pre></td></tr></table></figure><h5 id="7-网络编程"><a href="#7-网络编程" class="headerlink" title="7.网络编程"></a>7.网络编程</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UDP</span></span><br><span class="line"><span class="keyword">package</span> TestNet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecieveUDP</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        DatagramSocket socket=<span class="keyword">new</span> DatagramSocket (<span class="number">9000</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            DatagramPacket packet=<span class="keyword">new</span> DatagramPacket (bytes,<span class="number">0</span>,bytes.length);</span><br><span class="line">            socket.receive (packet);</span><br><span class="line">            <span class="keyword">byte</span>[] data = packet.getData ();</span><br><span class="line">            <span class="comment">//判定接收的应该是数据长度，不是data.length();</span></span><br><span class="line">            java.lang.String str=<span class="keyword">new</span> java.lang.String (data,<span class="number">0</span>,packet.getLength ());</span><br><span class="line">            System.out.println (str);</span><br><span class="line">            <span class="keyword">if</span> (str.equals (<span class="string">&quot;bye&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> TestNet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerUDP</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        DatagramSocket socket=<span class="keyword">new</span> DatagramSocket ();</span><br><span class="line">        Scanner buf = <span class="keyword">new</span> Scanner (System.in);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            String str=buf.nextLine ();</span><br><span class="line">            DatagramPacket packet=<span class="keyword">new</span> DatagramPacket</span><br><span class="line">                    (str.getBytes (),<span class="number">0</span>,str.getBytes ().length, InetAddress.getLocalHost (),<span class="number">9000</span>);</span><br><span class="line">            socket.send (packet);</span><br><span class="line">            <span class="keyword">if</span> (str.equals (<span class="string">&quot;bye&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//TCP</span></span><br><span class="line"><span class="keyword">package</span> TestNet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接收端给出一个接收地址和端口号(接收要一致)</span></span><br><span class="line"><span class="comment"> * 核心思想就是利用socket对数据进行发送和接收</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recieve</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">null</span>;</span><br><span class="line">        OutputStream ok = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">        InputStream is = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InetAddress ip = InetAddress.getLocalHost ();</span><br><span class="line">            socket = <span class="keyword">new</span> Socket (ip, <span class="number">4</span>);</span><br><span class="line">            <span class="comment">//*****************************************************</span></span><br><span class="line">            System.out.println (<span class="string">&quot;****************数据接收*******************&quot;</span>);</span><br><span class="line">            is = socket.getInputStream ();</span><br><span class="line">            out = <span class="keyword">new</span> FileOutputStream</span><br><span class="line">                    (<span class="keyword">new</span> File (<span class="string">&quot;src\\images\\2.jpg&quot;</span>));</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = is.read (bytes)) != - <span class="number">1</span>) &#123;</span><br><span class="line">                out.write (bytes, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            socket.shutdownInput ();</span><br><span class="line">            <span class="comment">//**************************************************************</span></span><br><span class="line">            System.out.println (<span class="string">&quot;****************接收完毕*******************&quot;</span>);</span><br><span class="line">            ok = socket.getOutputStream ();</span><br><span class="line">            ok.write (<span class="string">&quot;****************接收端接收完毕***************&quot;</span>.getBytes ());</span><br><span class="line">            <span class="comment">//**************************************************************</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭资源，不然会出现，发送端关闭，但是接收端却还在继续发送导致异常</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (socket != <span class="keyword">null</span>) socket.close ();</span><br><span class="line">                <span class="keyword">if</span> (out != <span class="keyword">null</span>) out.close ();</span><br><span class="line">                <span class="keyword">if</span> (is != <span class="keyword">null</span>) is.close ();</span><br><span class="line">                <span class="keyword">if</span> (ok!=<span class="keyword">null</span>) ok.close ();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> TestNet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务端：传输数据，提供一个空闲的端口号</span></span><br><span class="line"><span class="comment"> * 每一个流的后面和每一个输出的后面都要关闭数据传输，并且接收和发送完成后要用shutdown</span></span><br><span class="line"><span class="comment"> *  while ((len = ins.read (b)) != - 1) 和 while ((len!= - 1)后一个是固定了的，可以在读的每一个时刻判定，那么数据会不准，第一个数无限判定,</span></span><br><span class="line"><span class="comment"> *  每次读写读完就可以了是一个动态过程，二第二个是一个静态过程，会导致死锁，陷入循环出不来</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">null</span>;</span><br><span class="line">        Socket Server = <span class="keyword">null</span>;</span><br><span class="line">        FileInputStream ins = <span class="keyword">null</span>;</span><br><span class="line">        OutputStream os = <span class="keyword">null</span>;</span><br><span class="line">        InputStream ok = <span class="keyword">null</span>;</span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//********************************************</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> ServerSocket (<span class="number">4</span>);</span><br><span class="line">            System.out.println (<span class="string">&quot;****************连接开始*******************&quot;</span>);</span><br><span class="line">            Server = serverSocket.accept ();<span class="comment">//客户端通过一个服务器端口进行接收</span></span><br><span class="line">            <span class="comment">//发送</span></span><br><span class="line">            System.out.println (<span class="string">&quot;****************开始发送*******************&quot;</span>);</span><br><span class="line">            ins = <span class="keyword">new</span> FileInputStream</span><br><span class="line">                    (<span class="keyword">new</span> File (<span class="string">&quot;src\\images\\1.jpg&quot;</span>));</span><br><span class="line">            os = Server.getOutputStream ();</span><br><span class="line">            <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = ins.read (b)) != - <span class="number">1</span>) &#123;</span><br><span class="line">                os.write (b, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//告诉服务器我发送完了</span></span><br><span class="line">            Server.shutdownOutput ();</span><br><span class="line">            <span class="comment">//****************************************************************</span></span><br><span class="line">            System.out.println (<span class="string">&quot;****************接收反馈*******************&quot;</span>);</span><br><span class="line">            ok = Server.getInputStream ();</span><br><span class="line">            <span class="keyword">byte</span>[] b2=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len2;</span><br><span class="line">            bos=<span class="keyword">new</span> ByteArrayOutputStream ();</span><br><span class="line">            <span class="keyword">while</span> ((len2=ok.read (b2))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                bos.write (b2,<span class="number">0</span>,len2);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println (bos.toString ());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (serverSocket != <span class="keyword">null</span>) serverSocket.close ();</span><br><span class="line">                <span class="keyword">if</span> (Server != <span class="keyword">null</span>) Server.close ();</span><br><span class="line">                <span class="keyword">if</span> (ins != <span class="keyword">null</span>) ins.close ();</span><br><span class="line">                <span class="keyword">if</span> (os != <span class="keyword">null</span>) os.close ();</span><br><span class="line">                <span class="keyword">if</span> (ok != <span class="keyword">null</span>) ok.close ();</span><br><span class="line">                <span class="keyword">if</span> (bos!=<span class="keyword">null</span>) bos.close ();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//URL</span></span><br><span class="line"><span class="keyword">package</span> TestNet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HttpsURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 先下载在输入流中，再由输出流输出到本地</span></span><br><span class="line"><span class="comment"> * URL：Uniform Resource Locator统一资源定位器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoad</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        URL url=<span class="keyword">new</span> URL (<span class="string">&quot;https://www.deltareading.com/index/student/articleDetailsStudent?articleId=1693&quot;</span>);</span><br><span class="line">        HttpsURLConnection sourse= (HttpsURLConnection) url.openConnection ();</span><br><span class="line">        InputStream inputStream = sourse.getInputStream ();</span><br><span class="line">        FileOutputStream file=<span class="keyword">new</span> FileOutputStream (<span class="keyword">new</span> File (<span class="string">&quot;src//images//1.txt&quot;</span>));</span><br><span class="line">        <span class="keyword">byte</span>[] bytes=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">10240000</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len=inputStream.read (bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            file.write (bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭传输</span></span><br><span class="line">        sourse.disconnect ();</span><br><span class="line">        inputStream.close ();</span><br><span class="line">        file.close ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="8-JUC-编程"><a href="#8-JUC-编程" class="headerlink" title="8.JUC 编程"></a>8.JUC 编程</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JUC;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 相比于前面三种方法的优势，这种方法的优势就是避免了溢出而产生的oom问题</span></span><br><span class="line"><span class="comment"> * 线程的最大值就是maximumPoolSize+BlockingQueue</span></span><br><span class="line"><span class="comment"> * 拒绝策略：</span></span><br><span class="line"><span class="comment"> * 1.AbortPolicy ()；超出最大的数量就会抛出异常</span></span><br><span class="line"><span class="comment"> * 2.CallerRunsPolicy () 超出最大容量就会交给发出这个线程的来源处执行，就是谁提交就到那里去。</span></span><br><span class="line"><span class="comment"> * 3.DiscardPolicy 超出最大线程数的时候就会自动抛弃任务</span></span><br><span class="line"><span class="comment"> * 4.DiscardOldestPolicy 超出的线程会尝试抢夺原来的资源，不成功就退出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestExecutor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ThreadPoolExecutor threadPoolExecutor = <span class="keyword">new</span> ThreadPoolExecutor (</span><br><span class="line">                <span class="number">2</span>,<span class="comment">//开始执行的线程，在等待队列和这个数字满了的情况下，就会开启新的线程</span></span><br><span class="line">                Runtime.getRuntime ().availableProcessors (),<span class="comment">//最大的线程数量</span></span><br><span class="line">                <span class="number">3</span>,<span class="comment">//既没有进入线程运行，也没有子等待区的任务等待的最长时间，在这个时间之后就执行拒绝策略</span></span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                <span class="keyword">new</span> ArrayBlockingQueue&lt;&gt; (<span class="number">5</span>),<span class="comment">//等待队列线程个数</span></span><br><span class="line">                Executors.defaultThreadFactory (),<span class="comment">//一般不用改，这是一个线程工厂</span></span><br><span class="line">                <span class="keyword">new</span> ThreadPoolExecutor.DiscardOldestPolicy ());<span class="comment">//拒绝策略 四种</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> finalI = i;</span><br><span class="line">                threadPoolExecutor.execute (() -&gt; &#123;</span><br><span class="line">                    System.out.println (Thread.currentThread ().getName () + <span class="string">&quot;   Running*******\t&quot;</span>+ finalI);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            threadPoolExecutor.shutdown ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="9-Swing编程"><a href="#9-Swing编程" class="headerlink" title="9.Swing编程"></a>9.Swing编程</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Paint</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        JFrame jf = <span class="keyword">new</span> JFrame();</span><br><span class="line">        jf.setBounds(<span class="number">200</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line">        jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        jf.setBackground(Color.WHITE);</span><br><span class="line">        Container contentPane = jf.getContentPane();</span><br><span class="line">        <span class="comment">//************************************************</span></span><br><span class="line">        paintLine p = <span class="keyword">new</span> paintLine();</span><br><span class="line">        <span class="comment">//*****************************************</span></span><br><span class="line">        contentPane.add(p);</span><br><span class="line">        jf.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">paintLine</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">paintLine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mouse m = <span class="keyword">new</span> mouse();</span><br><span class="line">        <span class="keyword">this</span>.addMouseListener(m);</span><br><span class="line">        <span class="keyword">this</span>.addMouseMotionListener(m);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">mouse</span> <span class="keyword">extends</span> <span class="title">MouseAdapter</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line">            all.add(e.getPoint());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">            all.clear();</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">            all.add(e.getPoint());</span><br><span class="line">            repaint();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;Point&gt; all = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (all.size() &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Point p0, p1;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;i ; j++) &#123;</span><br><span class="line">            p0 = all.get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; all.size(); i++) &#123;</span><br><span class="line">                p1 = all.get(i);</span><br><span class="line">                g.drawLine(p0.x, p0.y, p1.x, p1.y);</span><br><span class="line">                p0 = p1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="10-前端基础"><a href="#10-前端基础" class="headerlink" title="10.前端基础"></a>10.前端基础</h5><p>仿QQ界面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;QQ登陆页面.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;logo&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;logo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;head&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/head.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>QQ<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;head-2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/设置.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;setting&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/最小化.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;minimize&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/关%20%20闭.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;down&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/QQ%20(1).png&quot;</span>  <span class="attr">alt</span>=<span class="string">&quot;QQ&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">&quot;outline: none&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Username&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/down.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Down&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/lock.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;lock&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">&quot;outline: none&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;UserPassWord&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/keyborad_outline.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;keyborad&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>自动登录<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;chechbox&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>记住密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>找回密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/安全.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;safe&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;安全登录&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/二维码.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;erweima&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://ssl.zc.qq.com/v3/index-chs.html?from=client&amp;regkey=7F9953D06739364D58F3F804DEC4F7CBC2E7D38B0A69C480B294DB9EE9551FE1&amp;ADUIN=0&amp;ADSESSION=0&amp;ADTAG=CLIENT.QQ.5749_NewAccount_Btn.0&amp;ADPUBNO=27027&quot;</span> &gt;</span>注册账号<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">540px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">470px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto auto;</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">    <span class="attribute">border</span>: black solid <span class="number">1px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#logo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">margin-left</span>: <span class="number">230px</span>;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">115px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#head</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">540px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">160px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#21D4FD</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">94deg</span>, #<span class="number">21</span>D4FD <span class="number">0%</span>, #B721FF <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#head</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#head</span> <span class="selector-tag">div</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#head-2</span> <span class="selector-tag">img</span><span class="selector-attr">[alt=setting]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#head-2</span> <span class="selector-tag">img</span><span class="selector-attr">[alt=minimize]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">475px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#head-2</span> <span class="selector-tag">img</span><span class="selector-attr">[alt=close]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#head</span> <span class="selector-tag">div</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">540px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">form</span> <span class="selector-tag">div</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: -<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">form</span> <span class="selector-tag">div</span> <span class="selector-tag">input</span><span class="selector-attr">[name^=User]</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">    <span class="attribute">border-right</span>: none;</span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">#00c4ff</span> <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">form</span> <span class="selector-tag">div</span> <span class="selector-tag">input</span><span class="selector-attr">[name^=User]</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">form</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">form</span> <span class="selector-tag">div</span> <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4ff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">form</span> <span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-attr">[alt=safe]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#down</span> <span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-attr">[alt=erweima]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">div</span> <span class="selector-tag">a</span><span class="selector-attr">[href^=https]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">260px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;#search&quot;</span>).css(<span class="string">&quot;outline&quot;</span>,<span class="string">&quot;none&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="11-数据库（7月8日–7月21日）"><a href="#11-数据库（7月8日–7月21日）" class="headerlink" title="11.数据库（7月8日–7月21日）"></a>11.数据库（7月8日–7月21日）</h5><p>笔记：<a href="https://saxon.oss-cn-shenzhen.aliyuncs.com/%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md?Expires=1595336399&amp;OSSAccessKeyId=TMP.3KkR3esQ6p83HTngUKu26sj3ZDVfJLRjBYakB4YEysEb7XEni62atW7ZdwrtajQrjxJBWDnq5twzd5umSHTKkzfsohkMGU&amp;Signature=r4O+j/EEzZgyRPWxpkxshUMNG4Q=">https://saxon.oss-cn-shenzhen.aliyuncs.com/%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md?Expires=1595336399&amp;OSSAccessKeyId=TMP.3KkR3esQ6p83HTngUKu26sj3ZDVfJLRjBYakB4YEysEb7XEni62atW7ZdwrtajQrjxJBWDnq5twzd5umSHTKkzfsohkMGU&amp;Signature=r4O%2Bj%2FEEzZgyRPWxpkxshUMNG4Q%3D</a></p><h5 id="12-java-web-7月21日-8月5日"><a href="#12-java-web-7月21日-8月5日" class="headerlink" title="12.java web(7月21日-8月5日)"></a>12.java web(7月21日-8月5日)</h5><h5 id="13-mybatis-8月6日-8月10日"><a href="#13-mybatis-8月6日-8月10日" class="headerlink" title="13.mybatis(8月6日-8月10日)"></a>13.mybatis(8月6日-8月10日)</h5><h5 id="14-spring（8月11日-8月14日）"><a href="#14-spring（8月11日-8月14日）" class="headerlink" title="14.spring（8月11日-8月14日）"></a>14.spring（8月11日-8月14日）</h5><p><strong>15.springmvc+vue+element(8月16日-9月1日)</strong></p><p><strong>16.SSMBlog(9月1日—一直在改)</strong></p><p><strong>17.springboot(9月20日—-10月5日)</strong></p><p><strong>18.spring boot blog</strong></p><p><strong>19.springcloud</strong></p><p><strong>20.mybatis-plus</strong></p><p><strong>21.redis</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%20%E5%9F%BA%E7%A1%80/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%20%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JAVA%20Web/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JAVA%20Web/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>JAVA　WEB</p><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p><strong>web开发：就是基于网页的开发</strong></p><ul><li>静态网页：每个人看到的都是一样的。例如HTML.css js 等</li><li>动态网页：例如淘宝等大型网站</li></ul><p>在Java中，动态web技术就叫做Java web;</p><h3 id="二、web应用程序"><a href="#二、web应用程序" class="headerlink" title="二、web应用程序"></a>二、web应用程序</h3><p>web应用程序：可以提供给浏览器访问的程序</p><p>web应用程序编写完毕后，如果需要给他人访问，那么需要一个服务器来统一管理。</p><h3 id="三、静态web"><a href="#三、静态web" class="headerlink" title="三、静态web"></a>三、静态web</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/9082898-21595aecd7a3ad26.png"></p><p>客户端发出**(request)<strong>请求访问服务器上的web service ，再通过web service 去找寻拂服务器上的html等静态网页资源，最后再由web service返回</strong>(response)**响应</p><p><strong>缺点:</strong></p><ul><li>web无法实现动态更新，所有用户看到的都是同一个页面</li><li>无法与数据库进行连接，数据无法持久化，用户无法进行交互</li></ul><h3 id="四、动态web"><a href="#四、动态web" class="headerlink" title="四、动态web"></a>四、动态web</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/3.jpg"></p><p><strong>优点:</strong></p><ul><li>web可以动态更新，所有用户看到的都不是同一个页面</li><li>与数据库进行连接</li></ul><h2 id="二、web服务器"><a href="#二、web服务器" class="headerlink" title="二、web服务器"></a>二、web服务器</h2><h3 id="一、脚本语言"><a href="#一、脚本语言" class="headerlink" title="一、脚本语言"></a>一、脚本语言</h3><h4 id="一、asp"><a href="#一、asp" class="headerlink" title="一、asp"></a>一、asp</h4><p>一、概念：</p><p>ASP即Active Server Pages，是Microsoft公司开发的服务器端脚本环境，可用来创建动态交互式网页并建立强大的web应用程序。当服务器收到对ASP文件的请求时，它会处理包含在用于构建发送给浏览器的HTML（<em>Hyper Text Markup Language，超文本置标语言</em>）网页文件中的服务器端脚本代码。除服务器端脚本代码外，ASP文件也可以包含文本、HTML（<em>包括相关的客户端脚本</em>）和com组件调用。</p><p><strong>ASP可以使用两种脚本语言：VBScript和Jscript（所谓的JScript语言就是微软版本的JavaScript语言）</strong></p><h4 id="二、PHP"><a href="#二、PHP" class="headerlink" title="二、PHP"></a>二、PHP</h4><p>PHP即“超文本预处理器，是一种通用开源脚本语言。PHP是在服务器端执行的脚本语言，与C语言类似，是常用的网站编程语言。PHP独特的语法混合了C、Java、Perl以及 PHP 自创的语法。利于学习，使用广泛，主要适用于web开发领域。</p><p><strong>无法承载大的访问量的访问；</strong></p><h4 id="三、JSP"><a href="#三、JSP" class="headerlink" title="三、JSP"></a>三、JSP</h4><p><strong>本质上是servlet</strong></p><p><strong>JSP</strong>（全称<strong>J</strong>ava<strong>S</strong>erver <strong>P</strong>ages）是由Sun公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、xml或其他格式文档的web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的Http请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>特点：</p><ul><li>能以模板化的方式简单、高效地添加动态网页内容。</li><li>由sun公司编写，语法上与ASP相似</li><li>可利用Javabean和标签库技术复用常用的功能代码（设计好的组件容易实现重复利用，减少重复劳动）。标签库不仅带有通用的内置标签JSTL，而且支持可扩展功能的自定义标签。</li><li>有良好的工具支持。</li><li>继承了Java语言的相对易用性。</li><li>继承了Java的跨平台优势，实现“一次编写，处处运行”。因为支持Java及其相关技术的开发平台多，网站开发人员可以选择在最适合自己的系统平台上进行JSP开发；不同环境下开发的JSP项目，在所有客户端上都能顺利访问。</li><li>页面中的动（控制变动内容的部分）/静（内容不需变动的部分）区域以分散但又有序的形式组合在一起，能使人更直观地看出页面代码的整体结构，也使得设计页面效果和程序逻辑这2部分工作容易分离（外观视图与逻辑分离）。从而方便分配人员并发挥各自长处，实现高效地分工合作。</li><li>可与其它企业级Java技术相互配合。JSP可以只专门负责页面中的数据呈现，实现分层开发。</li></ul><h3 id="二、web服务器-1"><a href="#二、web服务器-1" class="headerlink" title="二、web服务器"></a>二、web服务器</h3><h4 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat:"></a>Tomcat:</h4><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8">服务器</a>，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应<a href="https://baike.baidu.com/item/HTML">HTML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073">标准通用标记语言</a>下的一个应用）页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p><p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和<a href="https://baike.baidu.com/item/IIS">IIS</a>等Web服务器一样，具有处理HTML页面的功能，<strong>另外它还是一个Servlet和JSP容器</strong>，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态<a href="https://baike.baidu.com/item/HTML">HTML</a>的能力不如Apache服务器。目前Tomcat最新版本为9.0.37<strong>。</strong></p><h2 id="三、tomcat"><a href="#三、tomcat" class="headerlink" title="三、tomcat"></a>三、tomcat</h2><h4 id="一、安装Tomcat"><a href="#一、安装Tomcat" class="headerlink" title="一、安装Tomcat"></a>一、安装Tomcat</h4><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200723124139128.png" alt="image-20200723124139128"></p><p>目录的意义：</p><ul><li>Bin:启动和关闭等一系列文件</li><li>conf:配置文件</li><li>lib:很多需要的jar包</li><li>logs:日志文件</li><li>Temp:临时文件</li><li>webApps:服务器读取文件的存放位置</li></ul><h4 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h4><p><strong>位置：apache-tomcat-9.0.37\conf\server.xml</strong></p><h5 id="1-更改设备的端口号"><a href="#1-更改设备的端口号" class="headerlink" title="1.更改设备的端口号"></a>1.更改设备的端口号</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> 常见的端口号：</span></span><br><span class="line"><span class="comment">Tomcat：8080；</span></span><br><span class="line"><span class="comment">MySQL：3306；</span></span><br><span class="line"><span class="comment">https:443;</span></span><br><span class="line"><span class="comment">http:80;</span></span><br><span class="line"><span class="comment">-&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-配置主机名称"><a href="#2-配置主机名称" class="headerlink" title="2.配置主机名称"></a>2.配置主机名称</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里改了还要去改Windows 下面的host文件-&gt;</span></span><br></pre></td></tr></table></figure><p>默认的主机名：localhost或者127.0.0.1；</p><p>默认的访问文件夹：webapps；</p><p><strong>一个网站如何访问：</strong></p><p>1.输入一个域名，然后搜索</p><p>2.域名解析</p><ul><li>先在本机上找，找到就返回相应的地址映射 本机地址配置：C:\Windows\System32\drivers\etc</li><li>如果本机没有，那么就去<strong>DNS</strong>上去找，有的话，返回IP地址和端口号等信息。没有的话，就会找不到。</li></ul><p><strong>DNS：所有域名的管理的一个地方</strong></p><h4 id="三、如何发布一个网站"><a href="#三、如何发布一个网站" class="headerlink" title="三、如何发布一个网站"></a>三、如何发布一个网站</h4><p>Tomcat：</p><p>先将自己的项目导入tomcat下面的webapps目录下，通过域名+项目名来访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#必须有的文件是一个web-inf文件夹，里面的web.xml文件 这是一个配置文件，配置网站信息的,以后还会有classes(java程序)和lib(依赖的jar包)；</span></span><br><span class="line"><span class="comment">#还有一个网页或者其他</span></span><br><span class="line"><span class="comment">#static摆放网页的资源文件，可以正常加载</span></span><br></pre></td></tr></table></figure><h2 id="四、HTTP"><a href="#四、HTTP" class="headerlink" title="四、HTTP"></a>四、HTTP</h2><h4 id="一、什么是HTTP"><a href="#一、什么是HTTP" class="headerlink" title="一、什么是HTTP"></a>一、什么是HTTP</h4><p><strong>http（超文本文件传输协议）是一个简单的请求-响应协议，它通常运行在TCP之上。</strong></p><h4 id="二、HTTP请求（百度）"><a href="#二、HTTP请求（百度）" class="headerlink" title="二、HTTP请求（百度）"></a>二、HTTP请求（百度）</h4><p>客户端=&gt;发出请求=&gt;服务器</p><h5 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Request URL: https://www.baidu.com/ <span class="comment">#请求的域名</span></span><br><span class="line">Request Method: GET  <span class="comment">#请求方式 GET和POST</span></span><br><span class="line">Status Code: 200 OK <span class="comment">#状态码</span></span><br><span class="line">Remote Address: 14.215.177.38:443 <span class="comment">#实际上的IP地址和端口</span></span><br></pre></td></tr></table></figure><p><strong>请求方式：</strong></p><ul><li><strong>GET：请求携带的数据比较少，大小有限制，会在访问的URL上面显示数据信息，不安全，但是高效</strong></li><li><strong>POST:请求携带的数据没有限制，大小没有限制，不会在访问的URL上面显示数据信息，安全，但是不高效</strong></li></ul><h5 id="2-消息体"><a href="#2-消息体" class="headerlink" title="2.消息体"></a>2.消息体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,image/apng,<span class="comment">//告诉浏览器他支持的数据类型</span></span><br><span class="line">Accept-Encoding: gzip, deflate, br<span class="comment">//编码</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span><span class="comment">//语言</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span> <span class="comment">//缓存控制</span></span><br><span class="line">Connection: keep-alive <span class="comment">//告诉浏览器请求完成后是不是断开连接，如果断开的话，下一次再要访问还要再次请求全部资源</span></span><br><span class="line">Host: www.baidu.com<span class="comment">//主机</span></span><br></pre></td></tr></table></figure><h4 id="三、HTTP响应（百度）"><a href="#三、HTTP响应（百度）" class="headerlink" title="三、HTTP响应（百度）"></a>三、HTTP响应（百度）</h4><p>服务器=&gt;发出相应=&gt;客户端</p><h5 id="1-响应体"><a href="#1-响应体" class="headerlink" title="1.响应体"></a>1.响应体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: <span class="keyword">private</span><span class="comment">//缓存控制</span></span><br><span class="line">Connection: keep-alive <span class="comment">//告诉浏览器响应完成后是不是断开连接，如果断开的话，下一次再要访问还要再次请求全部资源</span></span><br><span class="line">Content-Encoding: gzip<span class="comment">//编码</span></span><br><span class="line">Content-Type: text/html;<span class="comment">//类型</span></span><br><span class="line">charset=utf-<span class="number">8</span><span class="comment">//编码</span></span><br></pre></td></tr></table></figure><h5 id="2-响应状态码"><a href="#2-响应状态码" class="headerlink" title="2.响应状态码"></a>2.响应状态码</h5><p>200:响应成功</p><p>3XX：重定向</p><p>4XX：失败，资源找不到</p><p>5XX：服务器错误  502网关错误</p><h2 id="五、Maven（-约定大于配置-）"><a href="#五、Maven（-约定大于配置-）" class="headerlink" title="五、Maven（==约定大于配置==）"></a>五、Maven（==约定大于配置==）</h2><p>用途：</p><ol><li>再写Java程序的时候，有的时候要导入大量的jar包，我们要导入</li><li>我们想要一个东西来帮我们自动导包</li></ol><h3 id="一、环境变量的配置"><a href="#一、环境变量的配置" class="headerlink" title="一、环境变量的配置"></a>一、环境变量的配置</h3><ol><li>配置M2_HOME： 安装maven的bin目录下</li><li>配置MAVEN_HOME：安装maven的目录</li><li>在path下面配置MAVEN_HOME的bin目录；就是M2_HOME的位置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置成功后</span></span><br><span class="line">Maven home: D:\JAVA\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin\..</span><br><span class="line">Java version: 9.0.4, vendor: Oracle Corporation, runtime: D:\JAVA\jdk</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: <span class="string">&quot;windows 10&quot;</span>, version: <span class="string">&quot;10.0&quot;</span>, arch: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;windows&quot;</span></span><br></pre></td></tr></table></figure><h3 id="二、阿里云镜像配置"><a href="#二、阿里云镜像配置" class="headerlink" title="二、阿里云镜像配置"></a>二、阿里云镜像配置</h3><p><strong>配置setting.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、本地仓库"><a href="#三、本地仓库" class="headerlink" title="三、本地仓库"></a>三、本地仓库</h3><p>自己建一个文件夹在加进去</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\JAVA\apache-maven-3.6.3-bin\apache-maven-3.6.3\maven_repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四、ideal使用maven"><a href="#四、ideal使用maven" class="headerlink" title="四、ideal使用maven"></a>四、ideal使用maven</h3><p><strong>1.新建一个maven目录创建一个maven项目，可以选择有模板和没模版的；二者的区别也不一样。</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724134718443.png" alt="image-20200724134718443"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724135123957.png" alt="image-20200724135123957"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724140517641.png" alt="image-20200724140517641"></p><p><strong>2.在创建的maven web模板中加入Java（resource root）和resources（resource root）;</strong></p><p><strong>3.配置tomcat，在ideal中</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724170428914.png" alt="image-20200724170428914"></p><p><strong>Warning: No artifacts marked for deployment</strong>：警告：没有标记为部署的项目，要添加一个项目</p><p><strong>4.启动Tomcat</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200724171302317.png" alt="image-20200724171302317"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/Saxon_web_maven_war/ <span class="comment">&lt;!-- 配置完的就是显示后缀名-&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.pom.xml（pom文件）</strong></p><p><strong>maven的核心文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 刚才配置的GAV--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Saxon_web_maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--jar:java 程序的包</span></span><br><span class="line"><span class="comment">    war:javaweb 应用的包--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  自己设置的名字--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Saxon_web_maven Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    默认的构建编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    编码版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--项目依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>   <span class="comment">&lt;!--    具体依赖的包--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--以后用要用的包 可以连他依赖的包一起下下来 &lt;dependency&gt; &lt;/dependency&gt; 用这个包起来的 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>Saxon_web_maven<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于maven的约定大于配置，所以我们在Java文件夹上面如果写的文件不是Java文件，就导不出去。需要在build中配置一下resource文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>修改项目默认生成的文件夹WEB-INF里面的web.xml让版本提高，更好的一个测试环境，不是target</strong></p><p>原版：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更改可以参考tomcat的web.xml</p><h3 id="五、maven仓库"><a href="#五、maven仓库" class="headerlink" title="五、maven仓库"></a>五、maven仓库</h3><p>第一次使用某一个包的时候，他没在我们本地的仓库中，我们就要去网上的maven仓库寻找我们要找的资源</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>   <span class="comment">&lt;!--    具体依赖的包--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、使用"><a href="#六、使用" class="headerlink" title="六、使用"></a>六、使用</h2><h5 id="1-先写出一个java程序"><a href="#1-先写出一个java程序" class="headerlink" title="1.先写出一个java程序"></a>1.先写出一个java程序</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        response.setContentType (<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding (<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">        PrintWriter out = response.getWriter ()；</span><br><span class="line">        out.println (<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;title&gt;Hello Beauty!&lt;/title&gt;&quot;</span>);<span class="comment">//如果是中文，编码不同会导致乱码，可以在Java中设置编码</span></span><br><span class="line">        out.println (<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;h1&gt;Hello beauty!&lt;/h1&gt;&quot;</span>);<span class="comment">//如果是中文，编码不同会导致乱码</span></span><br><span class="line">        out.println (<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">        out.println (<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-修改webaapps中的web-xml文件"><a href="#2-修改webaapps中的web-xml文件" class="headerlink" title="2.修改webaapps中的web.xml文件"></a>2.修改webaapps中的web.xml文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  申请一个servlet 指向一个文件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  与一个    &lt;servlet-name&gt;&lt;/servlet-name&gt; 建立一个连接，用url访问数据 一队建立一个连接</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span><span class="comment">&lt;!-- 这个就是等下访问的地址，在项目名后面加上的额外部分--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/Saxon_web_maven_war; 默认访问webapps下面的index.jsp;</span><br><span class="line">http://localhost:8080/Saxon_web_maven_war/saxon; 加上上面的名字可以访问class文件，如果要想要访问其他的文件，那么直接写下webapps，加上文件名直接访问</span><br></pre></td></tr></table></figure><h2 id="七、servlet"><a href="#七、servlet" class="headerlink" title="七、servlet"></a>七、servlet</h2><h3 id="一、使用"><a href="#一、使用" class="headerlink" title="一、使用"></a>一、使用</h3><h5 id="1-建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目"><a href="#1-建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目" class="headerlink" title="1.建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目"></a>1.建立一个普通的maven项目，不加模板的项目。删除src文件这样就可以在这个项目下建立很多的子项目</h5><h5 id="2-建立一个子项目，子项目的pom-xml就会有父项目的信息"><a href="#2-建立一个子项目，子项目的pom-xml就会有父项目的信息" class="headerlink" title="2.建立一个子项目，子项目的pom.xml就会有父项目的信息"></a>2.建立一个子项目，子项目的pom.xml就会有父项目的信息</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Saxon_01_servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>父项目中就会添加一个子项目信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Saxon_Servlet_Son_01<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>建项目吗?父子局</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">son extends father</span><br></pre></td></tr></table></figure><h5 id="3-环境优化"><a href="#3-环境优化" class="headerlink" title="3.环境优化"></a>3.环境优化</h5><ul><li>配置web.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>优化结构，加上一些该加上的文件夹 Java ,resources</li></ul><h5 id="4-编写第一个servlet程序"><a href="#4-编写第一个servlet程序" class="headerlink" title="4.编写第一个servlet程序"></a>4.编写第一个servlet程序</h5><p><strong>sun公司的servlet的实现类：HttpServlet,GenericServlet</strong></p><ol><li>先创建一个普通的类</li><li>这个类去继承servlet的实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继承HttpServlet</span></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//HttpServlet继承GenericServlet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServlet</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//GenericServlet实现Servlet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span>, <span class="title">ServletConfig</span>, <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//servlet就是一个接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig var1)</span> <span class="keyword">throws</span> ServletException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">ServletConfig <span class="title">getServletConfig</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest var1, ServletResponse var2)</span> <span class="keyword">throws</span> ServletException, IOException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">getServletInfo</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.实现父类的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.ServletSecurity;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        PrintWriter writer = resp.getWriter ();</span><br><span class="line">        writer.print (<span class="string">&quot;Hello, I am Saxon&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.编写servlet地址映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.启动tomcat调试</p><h3 id="二、原理："><a href="#二、原理：" class="headerlink" title="二、原理："></a>二、原理：</h3><p>在我们第一次使用浏览器加载项目时，项目会生成一个Target目录。当浏览器向客户端发出请求的时候，如果是第一次加载，那么就会去加载servlet，如果不是的话，就由web容器发出请求，请求具体访问我们的servlet的service方法。结束后在返还一个响应信息，web容器在返回一个响应给浏览器；（接收并处理要求和返回响应信息）</p><h3 id="三、servlet-mapping"><a href="#三、servlet-mapping" class="headerlink" title="三、servlet mapping"></a>三、servlet mapping</h3><h4 id="一、一个对应一个"><a href="#一、一个对应一个" class="headerlink" title="一、一个对应一个"></a>一、一个对应一个</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="二、一个对应多个"><a href="#二、一个对应多个" class="headerlink" title="二、一个对应多个"></a>二、一个对应多个</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon4<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="三、一个对应所有的映射"><a href="#三、一个对应所有的映射" class="headerlink" title="三、一个对应所有的映射"></a>三、一个对应所有的映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 就是在路径下面加上一个*--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/saxon/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="四、修改默认请求的路径"><a href="#四、修改默认请求的路径" class="headerlink" title="四、修改默认请求的路径"></a>四、修改默认请求的路径</h4><p>默认访问的不是jsp了，而是我们绑定的servlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="五、固定的文件后缀可以访问"><a href="#五、固定的文件后缀可以访问" class="headerlink" title="五、固定的文件后缀可以访问"></a>五、固定的文件后缀可以访问</h4><p>*.saxon的前后不可以加任何的其他字，不然会报错；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.saxon<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.IllegalArgumentException: servlet鏄犲皠涓殑&lt;url pattern&gt;[*.saxon/<span class="number">2</span>]鏃犳晥</span><br></pre></td></tr></table></figure><h3 id="四、ServletContext"><a href="#四、ServletContext" class="headerlink" title="四、ServletContext"></a>四、ServletContext</h3><h4 id="一、含义"><a href="#一、含义" class="headerlink" title="一、含义"></a>一、含义</h4><p>servletContext接口是Servlet中最大的一个接口，呈现了web应用的Servlet视图。**==ServletContext实例是通过 getServletContext()方法获得的==<strong>，由于HttpServlet继承GenericServlet的关系，GenericServlet类和HttpServlet类同时具有该方法。</strong>==这是在servlet之上的一层结构，等级高一级==**     每个web应用都会有一个<a href="https://baike.baidu.com/item/ServletContext"><strong>ServletContext</strong></a>对象与之关联</p><h4 id="二、测试servlet之间的通信"><a href="#二、测试servlet之间的通信" class="headerlink" title="二、测试servlet之间的通信"></a>二、测试servlet之间的通信</h4><p>1.上传</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">send</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        context.setAttribute (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;saxon 是帅哥&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.接收</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">get</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        String saxon = (String)context.getAttribute (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);<span class="comment">//配置编码</span></span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (saxon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>get<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.get<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>get<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/get<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>send<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.send<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>send<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/send<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要先放入在接收，才会显示结果</p><h4 id="三、获得初始化参数"><a href="#三、获得初始化参数" class="headerlink" title="三、获得初始化参数"></a>三、获得初始化参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GP</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        String saxon = context.getInitParameter (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (saxon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>saxon<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://saxon:3306/test<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.GP<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>gp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/gp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="四、请求转发"><a href="#四、请求转发" class="headerlink" title="四、请求转发"></a>四、请求转发</h4><p>含义：就是在当前页面下跳转到另一个页面。servlet之间的跳转；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Skip</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">        RequestDispatcher r = context.getRequestDispatcher (<span class="string">&quot;/gp&quot;</span>);<span class="comment">//写入要跳转的页面的url-pattern</span></span><br><span class="line">        r.forward (req,resp);<span class="comment">//    void forward(ServletRequest var1, ServletResponse var2) 一个请求，一个响应</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">       doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>skip<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.Skip<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>skip<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/skip<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>tips</strong>:zap::我们虽然跳到了其他的页面但是地址栏还是当前的地址，不会变；这就是与重定向的区别。他的<strong>Status Code</strong>是200；</p><h4 id="五、读取配置文件"><a href="#五、读取配置文件" class="headerlink" title="五、读取配置文件"></a>五、读取配置文件</h4><p>1.写一个配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=<span class="string">saxon</span></span><br><span class="line"><span class="attr">pwd</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>2.编写测试servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Properties_Servlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println (<span class="keyword">this</span>.getServletContext ().getContextPath ());<span class="comment">//Saxon_Servlet_Son_02_war</span></span><br><span class="line">        System.out.println (<span class="string">&quot;start***************************&quot;</span>);</span><br><span class="line">        InputStream is = <span class="keyword">this</span>.getServletContext ().getResourceAsStream (<span class="string">&quot;/WEB-INF/classes/lover.properties&quot;</span>);<span class="comment">//注意路径</span></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties ();</span><br><span class="line">        prop.load (is);</span><br><span class="line">        String username = prop.getProperty (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd = prop.getProperty (<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (username + <span class="string">&quot;:&quot;</span> + pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于当前servletcontext是在/Saxon_Servlet_Son_02_war目录下，我们也知道war包就是一个打包的web程序。所以我们的路径前面加上的==/==表示当前路径。我们在resource下面写的包就会到WEB-INF/classes/包下，如果我们将配置文件写在了Java目录中，我们可以在当前项目的文件pom.xml中加入一段代码；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--你要导出资源的文件夹--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span><span class="comment">&lt;!-- 导出资源的类型--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.将这一个servlet加入web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>prop<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.servlet.Properties_Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>prop<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/prop<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.启动tomcat，测试；</p><h2 id="八、Response"><a href="#八、Response" class="headerlink" title="八、Response"></a>八、Response</h2><h4 id="一、下载文件"><a href="#一、下载文件" class="headerlink" title="一、下载文件"></a>一、下载文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoading</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.确定位置和名字</span></span><br><span class="line">        String location = <span class="string">&quot;..\\1.png&quot;</span>      <span class="comment">//具体的地址绝对地址;</span></span><br><span class="line">        String filename = location.substring (location.lastIndexOf (<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//2.设置传输的头文件</span></span><br><span class="line">        resp.setHeader (<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=&quot;</span> + filename);<span class="comment">//下载页面的文件名，可以在下载页面手动改，默认的话就是。.txt;</span></span><br><span class="line">        <span class="comment">//3.建立缓冲区</span></span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">//4.将下载文件变成输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream (location);</span><br><span class="line">        <span class="comment">//5.获得输出流是，下载</span></span><br><span class="line">        ServletOutputStream out = resp.getOutputStream ();</span><br><span class="line">        <span class="comment">//in.read (buffer) 将文件读取到缓存中</span></span><br><span class="line">        <span class="keyword">while</span> (in.read (buffer) != - <span class="number">1</span>) &#123;</span><br><span class="line">            out.write (buffer, <span class="number">0</span>, len);<span class="comment">//将这个缓存给客户端，响应</span></span><br><span class="line">        &#125;</span><br><span class="line">        out.close ();</span><br><span class="line">        in.close ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="二、验证码的实现"><a href="#二、验证码的实现" class="headerlink" title="二、验证码的实现"></a>二、验证码的实现</h4><p>1.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setHeader (<span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;5&quot;</span>);<span class="comment">//刷新时间</span></span><br><span class="line">        <span class="comment">//图片的大小。</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage (<span class="number">80</span>, <span class="number">20</span>, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics2D pen = (Graphics2D) image.getGraphics ();</span><br><span class="line">        <span class="comment">//对图片进行填充</span></span><br><span class="line">        pen.setColor (Color.black);</span><br><span class="line">        pen.fillRect (<span class="number">0</span>,<span class="number">0</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//在图片中写入文字</span></span><br><span class="line">        pen.setColor (Color.white);</span><br><span class="line">        pen.setFont (<span class="keyword">new</span> Font (<span class="keyword">null</span>,Font.BOLD,<span class="number">20</span>));</span><br><span class="line">        pen.drawString (Num (),<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//浏览器的读取形式</span></span><br><span class="line">        resp.setContentType (<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">//缓存</span></span><br><span class="line">        resp.setDateHeader (<span class="string">&quot;expires&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">        resp.setHeader (<span class="string">&quot;Cache-Control&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        resp.setHeader (<span class="string">&quot;pragma&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">//图片交给浏览器</span></span><br><span class="line">        ImageIO.write (image,<span class="string">&quot;jpeg&quot;</span>,resp.getOutputStream ());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">Num</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer str=<span class="keyword">new</span> StringBuffer ();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">7</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> i1 = <span class="keyword">new</span> Random ().nextInt (<span class="number">9</span>);</span><br><span class="line">            str.append (i1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str.toString ();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200726143405536.png" alt="image-20200726143405536" style="zoom: 80%;" /><p>我们可以设置上面的相关的信息；</p><h4 id="三、实现重定向"><a href="#三、实现重定向" class="headerlink" title="三、实现重定向"></a>三、实现重定向</h4><h5 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h5><p>重定向：当你想要小美的QQ号，但你不知道如何要她的QQ号，所以你去找认识小美QQ号的小札，小札叫你自己去，于是你就自己去；</p><p>转发：当你想要小美的QQ号，但是你不知道如何要她的QQ号，所以你就去找认识小美QQ号的小札，小札帮你去要，要到了再给你；</p><p><strong>比较</strong>：重定向和转发</p><p>相同点：都是页面的跳转；</p><p>不同点：重定向的url地址发生了变化，但是转发没有。他们的状态码也不一样。重定向的是3开头的。转发是200；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转发</span></span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext ();</span><br><span class="line">RequestDispatcher r = context.getRequestDispatcher (<span class="string">&quot;/gp&quot;</span>);<span class="comment">//写入要跳转的页面的url-pattern</span></span><br><span class="line"><span class="comment">//重定向</span></span><br><span class="line">String contextPath = <span class="keyword">this</span>.getServletContext ().getContextPath ();<span class="comment">//当前项目的地址</span></span><br><span class="line">resp.sendRedirect (contextPath+<span class="string">&quot;/hello.html&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="2-测试"><a href="#2-测试" class="headerlink" title="2.测试"></a>2.测试</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedirectServlet</span>  <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String contextPath = <span class="keyword">this</span>.getServletContext ().getContextPath ();<span class="comment">//当前项目的地址</span></span><br><span class="line">        resp.sendRedirect (contextPath+<span class="string">&quot;/hello.html&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="九、request"><a href="#九、request" class="headerlink" title="九、request"></a>九、request</h2><h4 id="一、试一下"><a href="#一、试一下" class="headerlink" title="一、试一下"></a>一、试一下</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">requestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String username = req.getParameter (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String password = req.getParameter (<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String path = <span class="keyword">this</span>.getServletContext ().getContextPath ();</span><br><span class="line">        resp.sendRedirect (path+<span class="string">&quot;/success.html&quot;</span>);<span class="comment">//选择重定向的去处</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%-- pageContext.request.contextPath 当前目录/url pattern --%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/re&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>successful<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过代码实现密码输入，成功跳转成功。</p><h4 id="二、获得前端信息"><a href="#二、获得前端信息" class="headerlink" title="二、获得前端信息"></a>二、获得前端信息</h4><p>1.接收前端信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ISO_8859_1 默认编码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">requestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);<span class="comment">//解决乱码问题</span></span><br><span class="line">        String username = req.getParameter (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String[] hobbies = req.getParameterValues (<span class="string">&quot;hobbies&quot;</span>);</span><br><span class="line">        System.out.println (Arrays.toString (hobbies));</span><br><span class="line">        String path = <span class="keyword">this</span>.getServletContext ().getContextPath ();</span><br><span class="line">        resp.sendRedirect (path + <span class="string">&quot;/new.html&quot;</span>);<span class="comment">//302</span></span><br><span class="line">        <span class="comment">//req.getRequestDispatcher (&quot;/sucess.jsp&quot;).forward (req,resp);</span></span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.提交页</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;&lt;%解决界面乱码问题%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%--pageContext.request.contextPath 当前目录/url pattern--%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/re&quot;</span> method=<span class="string">&quot;post&quot;</span> &gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;爱好：</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;篮球&quot;</span> required&gt;篮球</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;游戏&quot;</span>&gt;游戏</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;休息&quot;</span>&gt;休息</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;唱歌&quot;</span>&gt;唱歌</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.成功反馈,跳出这个界面</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">26</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">44</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;successful&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于乱码问题：</p><p>1.首先是Tomcat 的问题，如果在界面加载控制台出现乱码，就改logging.properties（java.util.logging.ConsoleHandler.encoding = GBK）最后一个有关编码的UTF-8改成GBK;</p><p>2.如果是接收的时候出现数据的乱码，就用request.setCharacterEncoding (“utf-8”);就可以了</p><p>3.如果实在不行就上网上搜，我是被这个搞崩溃了。然后在改一下配置，花了好久，在我准备卸载的时候，她就好了；</p><h2 id="十、cookie-session"><a href="#十、cookie-session" class="headerlink" title="十、cookie session"></a>十、cookie session</h2><h3 id="一、会话"><a href="#一、会话" class="headerlink" title="一、会话"></a>一、会话</h3><h4 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h4><p>在计算机术语中，会话是指一个终端用户与交互系统进行通讯的过程，比如从输入账户密码进入操作系统到退出操作系统就是一个会话过程。会话较多用于网络上，TCP的三次握手就创建了一个会话，TCP关闭连接就是关闭会话；</p><p><strong>有状态会话：可以在不同的方法调用间保持针对各个客户端的状态与客户端的联系必须被维持，这样做开销要大一些</strong></p><h4 id="二、保存会话的两种方式"><a href="#二、保存会话的两种方式" class="headerlink" title="二、保存会话的两种方式"></a>二、保存会话的两种方式</h4><p><strong>cookie</strong>  Cookie是客户端技术，程序把每个用户的数据以cookie的形式写给用户各自的浏览器，当用户使用浏览器再去访问服务器中的web资源时，就会带着各自的数据去，这样web资源处理的就是各自的数据！</p><p><strong>session</strong>：Session是服务器端技术，利用这个技术服务器在运行时可以为每一个用户的浏览器绘制创建一个其独享的session对象，由于session为用户浏览器独享，所以用户在访问服务器的web资源时，可以把各自的数据放在各自的session中，当用户再去服务器中的其他web资源时，其它web资源再从用户各自的session中取出数据为用户服务</p><h3 id="二、cookie"><a href="#二、cookie" class="headerlink" title="二、cookie"></a>二、cookie</h3><h5 id="1-添加"><a href="#1-添加" class="headerlink" title="1.添加"></a>1.添加</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">cookieDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        Cookie[] cookies = req.getCookies ();</span><br><span class="line">        PrintWriter out = resp.getWriter ();</span><br><span class="line">        <span class="keyword">if</span> (cookies!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName ();</span><br><span class="line">                <span class="keyword">if</span> (name.equals (<span class="string">&quot;saxon&quot;</span>)) &#123;</span><br><span class="line">                    String value = cookie.getValue ();</span><br><span class="line">                    Date date = <span class="keyword">new</span> Date (Long.parseLong (value));</span><br><span class="line">                    out.print (<span class="string">&quot;你上次来的时间是&quot;</span> + date);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            out.write (<span class="string">&quot;欢迎光临\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie (<span class="string">&quot;saxon&quot;</span>, System.currentTimeMillis () + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        cookie.setMaxAge (<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);<span class="comment">//Set-Cookie: saxon=1595912818749; Max-Age=86400; Expires=Wed, 29-Jul-2020 05:06:58 GMT</span></span><br><span class="line">        resp.addCookie (cookie);<span class="comment">//每次都给一个新的cookie,覆盖上一个同名cookie</span></span><br><span class="line">        System.out.println (<span class="string">&quot;********************************&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-删除"><a href="#2-删除" class="headerlink" title="2.删除"></a>2.删除</h5><ul><li>不设置日期，直接关闭浏览器，就删除cookie</li><li>设置cookie.setMaxAge=0;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        Cookie[] cookies = req.getCookies ();</span><br><span class="line">        Cookie new_cookie=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cookie.getName ().equals (<span class="string">&quot;saxon&quot;</span>))&#123;</span><br><span class="line">                new_cookie=cookie;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (new_cookie!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            new_cookie.setMaxAge (<span class="number">0</span>);</span><br><span class="line">            resp.getWriter ().print (cookie.getName ()+<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        resp.addCookie (new_cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String str=<span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">                URLEncoder.encode (str,<span class="string">&quot;GBK&quot;</span>);<span class="comment">//编码</span></span><br><span class="line">                URLDecoder.decode (str,<span class="string">&quot;GBK&quot;</span>);<span class="comment">//解码</span></span><br></pre></td></tr></table></figure><h4 id="3-cookie的上限"><a href="#3-cookie的上限" class="headerlink" title="3.cookie的上限"></a>3.cookie的上限</h4><h3 id="三、session"><a href="#三、session" class="headerlink" title="三、session"></a>三、session</h3><h4 id="一、概念-1"><a href="#一、概念-1" class="headerlink" title="一、概念"></a>一、概念</h4><p><strong>session</strong>：Session是服务器端技术，利用这个技术服务器在运行时可以为每一个用户的浏览器绘制创建一个其独享的session对象，由于session为用户浏览器独享，所以用户在访问服务器的web资源时，可以把各自的数据放在各自的session中，当用户再去服务器中的其他web资源时，其它web资源再从用户各自的session中取出数据为用户服务</p><p><strong>response.getWriter().print()和response.getWriter().writer（）的区别:</strong></p><ul><li>response.getWriter().print(),不仅可以打印输出文本格式的（包括html标签），还可以将一个对象以默认的编码方式转换为二进制字节输出</li><li>response.getWriter().writer（）,只能打印输出文本格式的（包括html标签），不可以打印对象</li></ul><h4 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h4><h5 id="1-获取session对象，添加节点信息"><a href="#1-获取session对象，添加节点信息" class="headerlink" title="1.获取session对象，添加节点信息"></a>1.获取session对象，添加节点信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType (<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        HttpSession session = req.getSession ();</span><br><span class="line">        session.setAttribute (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;saxon&quot;</span>);<span class="comment">//可以保存一个对象</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (session.isNew ())&#123;</span><br><span class="line">            resp.getWriter ().print (<span class="string">&quot;新创建的session：&quot;</span>+session.getAttribute (<span class="string">&quot;saxon&quot;</span>)+<span class="string">&quot;的ID是&quot;</span>+session.getId ());</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter ().print (<span class="string">&quot;原来就有的&quot;</span>+session.getAttribute (<span class="string">&quot;saxon&quot;</span>)+<span class="string">&quot;的ID是&quot;</span>+session.getId ());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-获得session的信息"><a href="#2-获得session的信息" class="headerlink" title="2.获得session的信息"></a>2.获得session的信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionShow</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取指定的节点</span></span><br><span class="line">        HttpSession session = req.getSession ();</span><br><span class="line">        String saxon = (String) session.getAttribute (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">        resp.getWriter ().print (saxon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-删除session"><a href="#3-删除session" class="headerlink" title="3.删除session"></a>3.删除session</h5><ul><li>在web.xm配置文件会话自动过期</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span> <span class="comment">&lt;!--单位是分钟--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>利用session.invalidate ();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDelete</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        HttpSession session = req.getSession ();</span><br><span class="line">        session.removeAttribute (<span class="string">&quot;saxon&quot;</span>);<span class="comment">//移除保存的数据</span></span><br><span class="line">        session.invalidate ();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="三、session与cookie的区别"><a href="#三、session与cookie的区别" class="headerlink" title="三、session与cookie的区别"></a>三、session与cookie的区别</h4><ul><li><strong>cookie:**cookie是把数据写在用户自己的浏览器，交给用户自己保存，</strong>直接把信息交给用户**</li><li><strong>session:**把用户的数据写在独立的session里面，交给服务器保管（保存重要信息，节约服务器资源），</strong>交给用户的是一个ID，用户不知道里面的内容，但是可以凭借这个访问服务器的资源资源在服务器**</li><li>session由服务器创建，不写也是存在</li></ul><p>==<strong>使用频繁的信息我们用session保存:例如用户登录信息，购物信息</strong>==</p><h2 id="十一、JSP"><a href="#十一、JSP" class="headerlink" title="十一、JSP"></a>十一、JSP</h2><h3 id="一、概念-2"><a href="#一、概念-2" class="headerlink" title="一、概念"></a>一、概念</h3><p>ldea下面的tomcat的目录：C:\Users\adiminstor\AppData\Local\JetBrains</p><h5 id="1-jsp的运行原理："><a href="#1-jsp的运行原理：" class="headerlink" title="1.jsp的运行原理："></a>1.<strong>jsp的运行原理：</strong></h5><p><strong>1.jsp</strong>实际上编译后会变成一个class文件，继承了一个类org.apache.jasper.runtime.HttpJspBase;会发现这实际上就是一个servlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">index_jsp</span> <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">jasper</span>.<span class="title">runtime</span>.<span class="title">HttpJspBase</span>----&gt;</span></span><br><span class="line"><span class="class">    </span>===&gt;<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpJspBase</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> <span class="keyword">implements</span> <span class="title">HttpJspPage</span></span></span><br></pre></td></tr></table></figure><h5 id="2-内置对象"><a href="#2-内置对象" class="headerlink" title="2.内置对象"></a>2.内置对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext;</span><br><span class="line">javax.servlet.http.HttpSession session = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application;</span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config;</span><br><span class="line">javax.servlet.jsp.JspWriter out = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">final</span> java.lang.Object page = <span class="keyword">this</span>;</span><br><span class="line">javax.servlet.jsp.JspWriter _jspx_out = <span class="keyword">null</span>;</span><br><span class="line">javax.servlet.jsp.PageContext _jspx_page_context = <span class="keyword">null</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-运行过程"><a href="#3-运行过程" class="headerlink" title="3.运行过程"></a>3.运行过程</h5><p>用户客户端发出请求，服务器在自己项目内寻找jsp，找到后，先把jsp转换成Java文件，在把Java文件编译成class文件，再交给服务器，由服务器交给用户，那么用户拿到的就是真正的class对象，实际上就是一个servlet；</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/091745426439496.png"></p><h5 id="4-对比jsp和jsp-java"><a href="#4-对比jsp和jsp-java" class="headerlink" title="4.对比jsp和jsp.java"></a>4.对比jsp和jsp.java</h5><p><strong>jsp</strong>:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span>  pageEncoding=<span class="string">&quot;utf-8&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%--pageContext.request.contextPath 当前目录/url pattern--%&gt;</span><br><span class="line">&lt;% String name=<span class="string">&quot;saxon&quot;</span>;%&gt;</span><br><span class="line">name=&lt;%=name%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/re&quot;</span> method=<span class="string">&quot;get&quot;</span> &gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;label&gt;password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;爱好：</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;篮球&quot;</span> required&gt;篮球</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;游戏&quot;</span>&gt;游戏</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;休息&quot;</span>&gt;休息</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;唱歌&quot;</span>&gt;唱歌</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);<span class="comment">//识别</span></span><br><span class="line">      pageContext = _jspxFactory.getPageContext(<span class="keyword">this</span>, request, response,</span><br><span class="line">      <span class="keyword">null</span>, <span class="keyword">true</span>, <span class="number">8192</span>, <span class="keyword">true</span>);</span><br><span class="line">      _jspx_page_context = pageContext;</span><br><span class="line">      application = pageContext.getServletContext();</span><br><span class="line">      config = pageContext.getServletConfig();</span><br><span class="line">      session = pageContext.getSession();</span><br><span class="line">      out = pageContext.getOut();</span><br><span class="line">      _jspx_out = out;</span><br><span class="line"></span><br><span class="line">      out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;html&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;body&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;h2&gt;Hello World!&lt;/h2&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"> String name=<span class="string">&quot;saxon&quot;</span>;<span class="comment">//我们写的Java代码</span></span><br><span class="line">      out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;name=&quot;</span>);</span><br><span class="line">      out.print(name);<span class="comment">//原样输出</span></span><br><span class="line">      out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;form action=\&quot;&quot;</span>);</span><br><span class="line">      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;&quot;</span>, java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, <span class="keyword">null</span>));</span><br><span class="line">      out.write(<span class="string">&quot;/re\&quot; method=\&quot;get\&quot; &gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;p&gt;&lt;label&gt;username：&lt;input type=\&quot;text\&quot; name=\&quot;username\&quot;&gt;&lt;/label&gt;&lt;/p&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;p&gt;&lt;label&gt;password：&lt;input type=\&quot;password\&quot; name=\&quot;password\&quot;&gt;&lt;/label&gt;&lt;/p&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;p&gt;爱好：\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;篮球\&quot; required&gt;篮球\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;游戏\&quot;&gt;游戏\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;休息\&quot;&gt;休息\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;input type=\&quot;checkbox\&quot; name=\&quot;hobbies\&quot; value=\&quot;唱歌\&quot;&gt;唱歌\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;/p&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;input type=\&quot;submit\&quot;&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/form&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/body&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>==<strong>通过对比我们明白，如果我们写在jsp中的代码是Java，那么就会原模原样的输出Java代码，如果是html代码就会改写成out.write方法输出到页面上</strong>==</p><h3 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、基本语法</h3><h4 id="一、导入依赖的包"><a href="#一、导入依赖的包" class="headerlink" title="一、导入依赖的包"></a>一、导入依赖的包</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    servlet的依赖包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    jsp的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl-api --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    JSTL的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/taglibs/standard --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--   standard标签库--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="二、基本语法-1"><a href="#二、基本语法-1" class="headerlink" title="二、基本语法"></a>二、基本语法</h4><p>1.表达式(&lt;%=      %&gt;)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;%=3%&gt;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>2.jsp脚本片段(&lt;%      %&gt;)</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    out.println (sum);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">5</span> ; i++) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;hello world!&lt;/h1&gt;</span><br><span class="line">&lt;%&#125;    %&gt;</span><br></pre></td></tr></table></figure><p>3.jsp声明(&lt;%!    %&gt;)</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">21</span>:08</span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;&lt;%=3%&gt;&lt;/h1&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    out.println (sum);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">5</span> ; i++) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;hello world!&lt;/h1&gt;</span><br><span class="line">&lt;%&#125;    %&gt;</span><br><span class="line">    </span><br><span class="line">&lt;%!</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除了声明，编译后会在类的里面，其他的编译了会在service方法里面；</p><h3 id="三、jsp指令"><a href="#三、jsp指令" class="headerlink" title="三、jsp指令"></a>三、jsp指令</h3><h5 id="1、配置错误页面"><a href="#1、配置错误页面" class="headerlink" title="1、配置错误页面"></a>1、配置错误页面</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- code要写在location前面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><p>404错误界面，没有页面时跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">18</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;404&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/images/404.jpg&quot;</span> alt=<span class="string">&quot;404 error&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主页面显示：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;% <span class="keyword">int</span> x=<span class="number">1</span>/<span class="number">0</span>;%&gt; &lt;%--<span class="number">500</span>错误--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.include标签的区别</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;index.jsp&quot;</span>%&gt; </span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;index.jsp&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>&lt;%@include file=”index.jsp”%&gt; ,就是一个页面，把全部的代码用Java写出来，就是out.write();可能出现变量重名的情况</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;title&gt;Title&lt;/title&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;h1&gt;this is my include&lt;/h1&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/html&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;h1&gt;hello world&lt;/h1&gt;\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>&lt;jsp:include page=”index.jsp”/&gt;是页面的拼接，是对象拼在一起，区别就在于如果写Java代码会不会出现变量重名的情况</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    _jspx_imports_packages = <span class="keyword">new</span> java.util.HashSet&lt;&gt;();</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;java.util&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet.http&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet.jsp&quot;</span>);</span><br><span class="line">    _jspx_imports_classes = <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, <span class="string">&quot;index.jsp&quot;</span>, out, <span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><h3 id="四、jsp的四大作用域和9大内置对象"><a href="#四、jsp的四大作用域和9大内置对象" class="headerlink" title="四、jsp的四大作用域和9大内置对象"></a>四、jsp的四大作用域和9大内置对象</h3><h4 id="1-9大内置对象"><a href="#1-9大内置对象" class="headerlink" title="1.9大内置对象"></a>1.9大内置对象</h4><p>1.<strong>PageContext</strong>: javax.servlet.jsp.PageContext  <strong>存储信息</strong><br>2**.reques<strong>t :javax.servlet.http.HttpServletrequest  **存储信息</strong><br>3.<strong>response</strong>: javax.servlet.http.HttpServletResponse <strong>服务器向客户端的回应信息</strong><br>4**.session**: javax.servlet.http.HttpSession  <strong>存储信息</strong><br>5.<strong>application</strong>: javax.servlet.ServletContext  <strong>存储信息</strong><br>6.<strong>config</strong> :javax.servlet.ServletConfig  <strong>配置文件</strong><br>7.<strong>out</strong> :javax.servlet.jsp.jspWriter<br>8.<strong>page</strong> ：不常用<br>9.<strong>exceptio</strong>n java.lang.Throwable <strong>异常</strong></p><h4 id="2、四大作用域"><a href="#2、四大作用域" class="headerlink" title="2、四大作用域"></a>2、四大作用域</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute (<span class="string">&quot;NO1&quot;</span>, <span class="string">&quot;saxon1&quot;</span>);</span><br><span class="line">    request.setAttribute (<span class="string">&quot;NO2&quot;</span>, <span class="string">&quot;saxon2&quot;</span>);</span><br><span class="line">    session.setAttribute (<span class="string">&quot;NO3&quot;</span>, <span class="string">&quot;saxon3&quot;</span>);</span><br><span class="line">    application.setAttribute (<span class="string">&quot;NO4&quot;</span>, <span class="string">&quot;saxon4&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>pageContext</strong>：只有当前页面有用，其他页面数据就失效；</li><li><strong>request</strong>：只有这个请求页有效；但是转发数据也会被带到新的页面；</li><li><strong>session</strong>：在这个浏览器关闭前有效；</li><li><strong>application：</strong>只有服务器炸裂时，才会失效；</li></ul><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">21</span>:08</span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Index&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    pageContext.setAttribute (<span class="string">&quot;NO1&quot;</span>, <span class="string">&quot;saxon1&quot;</span>);</span><br><span class="line">    request.setAttribute (<span class="string">&quot;NO2&quot;</span>, <span class="string">&quot;saxon2&quot;</span>);</span><br><span class="line">    session.setAttribute (<span class="string">&quot;NO3&quot;</span>, <span class="string">&quot;saxon3&quot;</span>);</span><br><span class="line">    application.setAttribute (<span class="string">&quot;NO4&quot;</span>, <span class="string">&quot;saxon4&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String no1 = (String) pageContext.findAttribute (<span class="string">&quot;No1&quot;</span>);</span><br><span class="line">    String no2 = (String) pageContext.findAttribute (<span class="string">&quot;No2&quot;</span>);</span><br><span class="line">    String no3 = (String) pageContext.findAttribute (<span class="string">&quot;No3&quot;</span>);</span><br><span class="line">    String no4 = (String) pageContext.findAttribute (<span class="string">&quot;No4&quot;</span>);</span><br><span class="line">    String no5 = (String) pageContext.findAttribute (<span class="string">&quot;No2&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%pageContext.forward(<span class="string">&quot;/Test.jsp&quot;</span>);%&gt;</span><br><span class="line">$&#123;NO1&#125;</span><br><span class="line">$&#123;NO2&#125;</span><br><span class="line">$&#123;NO3&#125;</span><br><span class="line">$&#123;NO4&#125;</span><br><span class="line">$&#123;NO5&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>转发页：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User:Saxon</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">7</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String no1 = (String) pageContext.findAttribute (<span class="string">&quot;No1&quot;</span>);</span><br><span class="line">    String no2 = (String) pageContext.findAttribute (<span class="string">&quot;No2&quot;</span>);</span><br><span class="line">    String no3 = (String) pageContext.findAttribute (<span class="string">&quot;No3&quot;</span>);</span><br><span class="line">    String no4 = (String) pageContext.findAttribute (<span class="string">&quot;No4&quot;</span>);</span><br><span class="line">    String no5 = (String) pageContext.findAttribute (<span class="string">&quot;No5&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;NO1&#125;</span><br><span class="line">$&#123;NO2&#125;</span><br><span class="line">$&#123;NO3&#125;</span><br><span class="line">$&#123;NO4&#125;</span><br><span class="line">$&#123;NO5&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>常见场景：</p><p>1.看了一次就不会在看的，例如新闻，可以放在request中</p><p>2.用户会一直使用的信息，例如购物车，放在session中</p><p>3.这个网页，网站一直要用的，例如，浏览人数，放在application中</p><p>4.一些只在当前页面要用到的，就放在pagecontext</p><h3 id="五、JSP标签，JSTL标签，EL表达式"><a href="#五、JSP标签，JSTL标签，EL表达式" class="headerlink" title="五、JSP标签，JSTL标签，EL表达式"></a>五、JSP标签，JSTL标签，EL表达式</h3><h4 id="一、JSTL标签"><a href="#一、JSTL标签" class="headerlink" title="一、JSTL标签"></a>一、JSTL标签</h4><p><strong>种类：</strong></p><ul><li>核心标签</li><li>sql标签</li><li>xml标签</li><li>格式化标签</li></ul><p>测试一：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;#&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">    用户：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;$&#123;param.username&#125;&quot;</span>&gt;</span><br><span class="line">    分数：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;score&quot;</span> value=<span class="string">&quot;$&#123;param.score&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>JSTL标签</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;param.username==&#x27;saxon&#x27;&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;saxon&quot;</span>&gt;&lt;!-- 这里的值--&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;登录成功&quot;</span>/&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;saxon&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;c:set value=<span class="string">&quot;$&#123;param.score&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;score&quot;</span>/&gt;</span><br><span class="line">    &lt;c:choose&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;90&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩优秀</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;80&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩一般</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;70&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩可以</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;60&#125;&quot;</span>&gt;</span><br><span class="line">            你的成绩罪恶</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">    &lt;/c:choose&gt;</span><br></pre></td></tr></table></figure><p>java实现：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span> (request.getParameter (<span class="string">&quot;username&quot;</span>) != <span class="keyword">null</span> &amp;&amp; request.getParameter (<span class="string">&quot;username&quot;</span>).equals (<span class="string">&quot;saxon&quot;</span>)) &#123;</span><br><span class="line">        out.print (request.getParameter (<span class="string">&quot;username&quot;</span>) + <span class="string">&quot;,欢迎你&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span> (request.getParameter (<span class="string">&quot;username&quot;</span>) != <span class="keyword">null</span> &amp;&amp; request.getParameter (<span class="string">&quot;username&quot;</span>).equals (<span class="string">&quot;saxon&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (request.getParameter (<span class="string">&quot;score&quot;</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String score = request.getParameter (<span class="string">&quot;score&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> i = Integer.parseInt (score);</span><br><span class="line">            out.print (<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            out.print (<span class="string">&quot;你的成绩是：&quot;</span>);</span><br><span class="line">            <span class="keyword">switch</span> (i / <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;good&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;better&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;Just-so-so&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;Usual&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    out.println (<span class="string">&quot;worse or in put again&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>测试二：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    ArrayList&lt;String&gt; str = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">    str.add (<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;田六&quot;</span>);</span><br><span class="line">    str.add (<span class="string">&quot;李七&quot;</span>);</span><br><span class="line">    request.setAttribute (<span class="string">&quot;people&quot;</span>,str);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>JSTL标签：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="keyword">var</span>:名字；</span><br><span class="line">items：来源</span><br><span class="line">begin：开始节点</span><br><span class="line">step:下标递增的次序</span><br><span class="line">end:最后一个的下标</span><br><span class="line">--&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;list&quot;</span> items=<span class="string">&quot;$&#123;people&#125;&quot;</span> begin=<span class="string">&quot;0&quot;</span> step=<span class="string">&quot;2&quot;</span> end=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;list&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>Java代码：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">5</span> ; i+=<span class="number">2</span>) &#123;</span><br><span class="line">        out.println (str.get (i));</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>通过对比我们就可以明白，标签可以做的，我们的Java语言也可以做。那么用标签的原因就是简化代码，看起来美观一些；</p><h4 id="二、EL表达式"><a href="#二、EL表达式" class="headerlink" title="二、EL表达式"></a>二、EL表达式</h4><p><strong>格式:  ${}</strong></p><p>作用：</p><ul><li>获取数据</li><li>执行运算</li><li>获得web执行的对象；</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$&#123;param.score&#125; <span class="comment">//获得数据</span></span><br><span class="line">$&#123;score&gt;<span class="number">90</span>&#125;    <span class="comment">//执行运算</span></span><br><span class="line">$&#123;param.score&#125;<span class="comment">//获得web对象</span></span><br></pre></td></tr></table></figure><h2 id="十一、JavaBean"><a href="#十一、JavaBean" class="headerlink" title="十一、JavaBean"></a>十一、JavaBean</h2><p>一张表对应一个实体类；一一映射；</p><h2 id="十二、MVC三层架构"><a href="#十二、MVC三层架构" class="headerlink" title="十二、MVC三层架构"></a>十二、MVC三层架构</h2><p><strong>servlet和jsp都可以写Java代码;servlet注重写处理代码，跳转页面;JSP注重于显示数据</strong></p><p><strong>mvc:</strong></p><ul><li><strong>M:model (模型 service)**：</strong>控制业务操作，对数据的增删改查；访问数据库**；</li><li><strong>V:view(视图 JSP)**MVC好处是它能为应用程序处理很多不同的视图，在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式，</strong>提供用户操作，展示数据模型**</li><li>**C :controller(控制器 servlet)**：接收数据，将数据交给服务层去做，页面的跳转</li></ul><h2 id="十三、过滤器filter"><a href="#十三、过滤器filter" class="headerlink" title="十三、过滤器filter"></a>十三、过滤器filter</h2><p>应用：</p><ul><li>web服务器有一些垃圾请求那么我们后台就应该报错或者不处理</li><li>乱码问题</li></ul><p>测试代码：</p><ol><li>过滤器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">filterDemo</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;过滤器初始化完毕&quot;</span>);<span class="comment">//在一切之前初始化</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span> <span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        servletRequest.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        servletResponse.setContentType (<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        servletResponse.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        System.out.println (<span class="string">&quot;start***************************&quot;</span>);</span><br><span class="line">        filterChain.doFilter (servletRequest,servletResponse);<span class="comment">//必须写</span></span><br><span class="line">        System.out.println (<span class="string">&quot;end***************************&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;销毁&quot;</span>);<span class="comment">//在服务器关闭时注销</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter ().write (<span class="string">&quot;只有爱，才会喜欢代码&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.saxon.filter.Demo<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/r/r<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/r<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>f<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.saxon.filter.filterDemo<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>f<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/r/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>//文件目录</span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="十四、SMBMS系统"><a href="#十四、SMBMS系统" class="headerlink" title="十四、SMBMS系统"></a>十四、SMBMS系统</h2><h3 id="一、步骤"><a href="#一、步骤" class="headerlink" title="一、步骤"></a>一、步骤</h3><p><strong>1.搭建一个web项目</strong></p><p> <strong>2.配置Tomcat</strong></p><p> <strong>3.导入依赖和更新web.xml</strong></p><p> <strong>4.编写实体类JavaBean；</strong></p><p> <strong>5.创建项目的目录</strong></p><h5 id="编写基础公共类，工具类；"><a href="#编写基础公共类，工具类；" class="headerlink" title="编写基础公共类，工具类；"></a><strong>编写基础公共类，工具类；</strong></h5><ol><li><h6 id="数据库配置文件db-properties"><a href="#数据库配置文件db-properties" class="headerlink" title="数据库配置文件db.properties,"></a>数据库配置文件db.properties,</h6><p>关于读取配置文件的问题；其中一种方法，使用类加载器。getClassLoader ().getResource会选择当前class文件的根目录(src/)，在web程序中，我们的Java文件夹中Java文件编译过后会在classes文件夹下，我们的resource下面的文件也会到这个包里，所以可以这么使用；关于类加载器的内容，慢慢的开始补充；</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream stream = BaseDao.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;db.properties&quot;</span>);</span><br></pre></td></tr></table></figure><h6 id="2-编写数据库的查询类"><a href="#2-编写数据库的查询类" class="headerlink" title="2.编写数据库的查询类"></a>2.编写数据库的查询类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream stream = BaseDao.class.getClassLoader ().getResourceAsStream (<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line">            properties.load (stream);</span><br><span class="line">            driver = properties.getProperty (<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty (<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty (<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty (<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName (driver);</span><br><span class="line">            connection = DriverManager.getConnection (url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql        查询语句;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params     参数;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回查询;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title">executeQuery</span> <span class="params">(Connection connection, String sql, Object[] params)</span> </span>&#123;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                PreparedStatement preparedStatement = connection.prepareStatement (sql);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                    preparedStatement.setObject (i, params[i - <span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                resultSet = preparedStatement.executeQuery (sql);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resultSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql        数据库查询语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params     数据库的属性</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回改变的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">execute</span> <span class="params">(Connection connection, String sql, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> changeRows = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                PreparedStatement preparedStatement = connection.prepareStatement (sql);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                    preparedStatement.setObject (i + <span class="number">1</span>, params[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                changeRows = preparedStatement.executeUpdate ();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> changeRows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭连接释放资源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement  数据库本身</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet  结果集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回释放结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">release</span> <span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close ();</span><br><span class="line">                connection = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">                System.out.println (<span class="string">&quot;connection&quot;</span> + <span class="string">&quot;关闭失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close ();</span><br><span class="line">                statement = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">                System.out.println (<span class="string">&quot;statement&quot;</span> + <span class="string">&quot;关闭失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close ();</span><br><span class="line">                resultSet = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">                System.out.println (<span class="string">&quot;resultSet&quot;</span> + <span class="string">&quot;关闭失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-编写字符编码过滤器"><a href="#3-编写字符编码过滤器" class="headerlink" title="3.编写字符编码过滤器"></a>3.编写字符编码过滤器</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span> <span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        chain.doFilter (request, response);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="7-导入静态资源"><a href="#7-导入静态资源" class="headerlink" title="7.导入静态资源"></a>7.导入静态资源</h5><h5 id="8-编写Dao层代码"><a href="#8-编写Dao层代码" class="headerlink" title="8.编写Dao层代码"></a>8.编写Dao层代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">     <span class="function">User <span class="title">getLoginUser</span><span class="params">(Connection connection, String userCode,String password)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.Dao.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        user=<span class="keyword">new</span> User ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getLoginUser</span> <span class="params">(Connection connection, String userCode,String password)</span> </span>&#123;</span><br><span class="line">        connection = BaseDao.getConnection ();</span><br><span class="line">        String sql = <span class="string">&quot;select * from smbms_user where smbms_user.userCode=? and smbms_user.userPassword=?; &quot;</span>;</span><br><span class="line">        Object[] params = &#123;userCode,password&#125;;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ResultSet resultSet = BaseDao.executeQuery (connection, sql, params);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(resultSet.next ())&#123;</span><br><span class="line">                    user.setID (resultSet.getInt (<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                    user.setUserCode (resultSet.getString (<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                    user.setUserName (resultSet.getString (<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                    user.setUserPassword (resultSet.getString (<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                    user.setGender (resultSet.getInt (<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    user.setBirthday (resultSet.getDate (<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                    user.setPhone (resultSet.getString (<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                    user.setAddress (resultSet.getString (<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                    user.setUserRole (resultSet.getInt (<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                    user.setCreateBy (resultSet.getInt (<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                    user.setCreationDate (resultSet.getDate (<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                    user.setModifyBy (resultSet.getInt (<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                    user.setModifyDate (resultSet.getDate (<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    user=<span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="9-编写service层代码"><a href="#9-编写service层代码" class="headerlink" title="9.编写service层代码"></a>9.编写service层代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">     <span class="function">User  <span class="title">login</span><span class="params">(String userCode,String password)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.User.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.saxon.Dao.User.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      userDao = <span class="keyword">new</span> UserDaoImpl ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span> <span class="params">(String userCode,String password)</span> </span>&#123;</span><br><span class="line">        Connection connection=<span class="keyword">null</span>;</span><br><span class="line">        User user=<span class="keyword">null</span>;</span><br><span class="line">        connection=BaseDao.getConnection ();</span><br><span class="line">        <span class="keyword">if</span> (userDao!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            user = userDao.getLoginUser (connection, userCode,password);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="10-编写注册登录servlet"><a href="#10-编写注册登录servlet" class="headerlink" title="10.编写注册登录servlet"></a>10.编写注册登录servlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.servlet.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.saxon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.saxon.service.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.saxon.util.constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;start&quot;</span>);</span><br><span class="line">        UserServiceImpl user=<span class="keyword">new</span> UserServiceImpl ();</span><br><span class="line">        String userCode = req.getParameter (<span class="string">&quot;userCode&quot;</span>);</span><br><span class="line">        String password = req.getParameter (<span class="string">&quot;userPassword&quot;</span>);</span><br><span class="line">        User login = user.login (userCode, password);</span><br><span class="line">        <span class="keyword">if</span> (login!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            req.getSession ().setAttribute (constants.USER_SESSION,user);</span><br><span class="line">            resp.sendRedirect (<span class="string">&quot;JSP/frame.jsp&quot;</span>);</span><br><span class="line">            resp.setCharacterEncoding (<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.getServletContext ().setAttribute (<span class="string">&quot;error&quot;</span>,<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">            resp.sendRedirect (<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二、密码修改"><a href="#二、密码修改" class="headerlink" title="二、密码修改"></a>二、密码修改</h3><h4 id="1-旧密码验证"><a href="#1-旧密码验证" class="headerlink" title="1.旧密码验证"></a>1.旧密码验证</h4><p>由于旧密码可以被我们储存在session中，所以我们可以不用在验证旧密码的时候去查询数据库；</p><p>前端代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">jsp/user.<span class="keyword">do</span><span class="string">&quot; 数据提交给的serlvet action里面的数据</span></span><br><span class="line"><span class="string">这里的name属性就是我们接收值的string 例如req.getParameter (&quot;</span>oldpassword<span class="string">&quot;) 表单传递的是name</span></span><br><span class="line"><span class="string">$&#123;&#125;:el表达式，</span></span><br><span class="line"><span class="string">--&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;%@ page language=&quot;</span>java<span class="string">&quot; contentType=&quot;</span>text/html; charset=UTF-<span class="number">8</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">pageEncoding=&quot;</span>UTF-<span class="number">8</span><span class="string">&quot;%&gt;</span></span><br><span class="line"><span class="string">&lt;%@include file=&quot;</span>/JSP/common/head.jsp<span class="string">&quot;%&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;</span>right<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;</span>location<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;strong&gt;你现在所在的位置是:&lt;/strong&gt;</span></span><br><span class="line"><span class="string">                &lt;span&gt;密码修改页面&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;</span>providerAdd<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;form id=&quot;</span>userForm<span class="string">&quot; name=&quot;</span>userForm<span class="string">&quot; method=&quot;</span>post<span class="string">&quot; action=&quot;</span>$&#123;pageContext.request.contextPath &#125;/jsp/user.<span class="keyword">do</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;input type=&quot;</span>hidden<span class="string">&quot; name=&quot;</span>method<span class="string">&quot; value=&quot;</span>savepwd<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;!--div的class 为error是验证错误，ok是验证成功--&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;</span>info<span class="string">&quot;&gt;$&#123;message&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label for=&quot;</span>oldPassword<span class="string">&quot;&gt;旧密码：&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;</span>password<span class="string">&quot; name=&quot;</span>oldpassword<span class="string">&quot; id=&quot;</span>oldpassword<span class="string">&quot; value=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;font color=&quot;</span>red<span class="string">&quot;&gt;&lt;/font&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div&gt;</span></span><br><span class="line"><span class="string">                        &lt;label for=&quot;</span>newPassword<span class="string">&quot;&gt;新密码：&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;</span>password<span class="string">&quot; name=&quot;</span>newpassword<span class="string">&quot; id=&quot;</span>newpassword<span class="string">&quot; value=&quot;</span><span class="string">&quot;&gt; </span></span><br><span class="line"><span class="string">&lt;font color=&quot;</span>red<span class="string">&quot;&gt;&lt;/font&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div&gt;</span></span><br><span class="line"><span class="string">                        &lt;label for=&quot;</span>rnewpassword<span class="string">&quot;&gt;确认新密码：&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;</span>password<span class="string">&quot; name=&quot;</span>rnewpassword<span class="string">&quot; id=&quot;</span>rnewpassword<span class="string">&quot; value=&quot;</span><span class="string">&quot;&gt; </span></span><br><span class="line"><span class="string">&lt;font color=&quot;</span>red<span class="string">&quot;&gt;&lt;/font&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;</span>providerAddBtn<span class="string">&quot;&gt;</span></span><br><span class="line">                        &lt;!--&lt;a href=&quot;#&quot;&gt;保存&lt;/a&gt;--&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;button&quot;</span> name=<span class="string">&quot;save&quot;</span> id=<span class="string">&quot;save&quot;</span> value=<span class="string">&quot;保存&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;input-button&quot;</span>&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/JSP/common/foot.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;pageContext.request.contextPath &#125;/js/pwdmodify.js&quot; charset=&quot;UTF-8&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>对旧数据的查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证旧密码，从session中获得</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">oldPwd</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt; ();<span class="comment">//设置一个map集合来把信息传递出去</span></span><br><span class="line">        String oldpassword = req.getParameter (<span class="string">&quot;oldpassword&quot;</span>);<span class="comment">//获得传递过来的信息</span></span><br><span class="line">        User user = (User) req.getSession ().getAttribute (constants.USER_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (oldpassword != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (oldpassword.equals (user.getUserPassword ())) &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;sessionerror&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置编译的类型</span></span><br><span class="line">        resp.setContentType (<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        PrintWriter writer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writer = resp.getWriter ();</span><br><span class="line">            writer.write (JSONArray.toJSONString (map));<span class="comment">//将一个对象变为json</span></span><br><span class="line">            writer.flush ();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (writer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                writer.close ();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把servlet处理的结果放回到一个集合中，再把集合变成一个json对象，这样js可以接收数据；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (oldpassword.equals (user.getUserPassword ())) &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put (<span class="string">&quot;result&quot;</span>, <span class="string">&quot;sessionerror&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">writer.write (JSONArray.toJSONString (map));<span class="comment">//将一个对象变为json</span></span><br></pre></td></tr></table></figure><p>AJAX：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">oldpassword.on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            url: path + <span class="string">&quot;/jsp/user.do&quot;</span>,<span class="comment">//传向的位置</span></span><br><span class="line">            data: &#123;<span class="attr">method</span>: <span class="string">&quot;pwdmodify&quot;</span>, <span class="attr">oldpassword</span>: oldpassword.val()&#125;,<span class="comment">//传输的数据</span></span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,<span class="comment">//接收的数据类型</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//成功的页面，回调函数</span></span><br><span class="line">                <span class="keyword">if</span> (data.result == <span class="string">&quot;true&quot;</span>) &#123;<span class="comment">//旧密码正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;false&quot;</span>) &#123;<span class="comment">//旧密码输入不正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 原密码输入不正确&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;sessionerror&quot;</span>) &#123;<span class="comment">//当前用户session过期，请重新登录</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 当前用户session过期，请重新登录&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;error&quot;</span>) &#123;<span class="comment">//旧密码输入为空</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请输入旧密码&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//请求出错 回调函数</span></span><br><span class="line"></span><br><span class="line">                validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请求错误&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在ajax的成功返回的值中，data,由于接受的数据是json，我们后台返回的是一个map集合编译成的一个json数据，而json的格式就是key-value,所以其实date是一个对象，我们传的数值就是一个属性，所以用data.result;</span></span><br><span class="line">data.result == <span class="string">&quot;true“</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,<span class="comment">//接受方式</span></span><br><span class="line">            url: path + <span class="string">&quot;/jsp/user.do&quot;</span>,<span class="comment">//传向的位置</span></span><br><span class="line">            data: &#123;<span class="attr">method</span>: <span class="string">&quot;pwdmodify&quot;</span>, <span class="attr">oldpassword</span>: oldpassword.val()&#125;,<span class="comment">//传输的数据</span></span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,<span class="comment">//接收的数据类型</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//成功的页面，回调函数,</span></span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span></span><br></pre></td></tr></table></figure><h4 id="2-密码更新"><a href="#2-密码更新" class="headerlink" title="2.密码更新"></a>2.密码更新</h4><h5 id="1-userDao"><a href="#1-userDao" class="headerlink" title="1.userDao"></a>1.userDao</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">changeUserPassword</span> <span class="params">(Connection connection, String userCode, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> execute = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">&quot;update smbms_user set userPassword =? where userCode=?;&quot;</span>;</span><br><span class="line">            Object[] params = &#123;password, userCode&#125;;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                execute = BaseDao.execute (connection, sql, params);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">            System.out.println (<span class="string">&quot;UserDaoImpl 关闭失败&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                BaseDao.release (<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);<span class="comment">//感觉应该没啥用</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.userService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">PasswordService</span> <span class="params">(String userCode, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDao.getConnection ();</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> i = userDao.changeUserPassword (connection, userCode, password);</span><br><span class="line">                flag = i &gt; <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">            throwables.printStackTrace ();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                BaseDao.release (connection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新密码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updatePassword</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String newpwd = req.getParameter (<span class="string">&quot;newpassword&quot;</span>);</span><br><span class="line">        Object attribute = req.getSession ().getAttribute (constants.USER_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (attribute != <span class="keyword">null</span>) &#123;</span><br><span class="line">            User user = (User) attribute;</span><br><span class="line">            UserServiceImpl service = <span class="keyword">new</span> UserServiceImpl ();</span><br><span class="line">            <span class="keyword">boolean</span> b = service.PasswordService (user.getUserCode (), newpwd);</span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                req.setAttribute (<span class="string">&quot;message&quot;</span>, <span class="string">&quot;change password successful&quot;</span>);</span><br><span class="line">                req.getSession ().removeAttribute (constants.USER_SESSION);</span><br><span class="line">                req.getRequestDispatcher (<span class="string">&quot;/login.jsp&quot;</span>).forward (req, resp);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.setAttribute (<span class="string">&quot;message&quot;</span>, <span class="string">&quot;change password error&quot;</span>);</span><br><span class="line">                req.getRequestDispatcher (<span class="string">&quot;#&quot;</span>).forward (req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute (<span class="string">&quot;message&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher (<span class="string">&quot;#&quot;</span>).forward (req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;info&quot;&gt;$&#123;message&#125;&lt;/div&gt;//接收返回值</span><br></pre></td></tr></table></figure><p>最后的提交与否是要三个都是真的时候才会提交</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">saveBtn.on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        oldpassword.blur();</span><br><span class="line">        newpassword.blur();</span><br><span class="line">        rnewpassword.blur();</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            oldpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>&amp;&amp;</span><br><span class="line">            newpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span></span><br><span class="line">            &amp;&amp; rnewpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (confirm(<span class="string">&quot;确定要修改密码？&quot;</span>)) &#123;</span><br><span class="line">                $(<span class="string">&quot;#userForm&quot;</span>).submit();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>密码验证的js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oldpassword = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> newpassword = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> rnewpassword = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> saveBtn = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    oldpassword = $(<span class="string">&quot;#oldpassword&quot;</span>);</span><br><span class="line">    newpassword = $(<span class="string">&quot;#newpassword&quot;</span>);</span><br><span class="line">    rnewpassword = $(<span class="string">&quot;#rnewpassword&quot;</span>);</span><br><span class="line">    saveBtn = $(<span class="string">&quot;#save&quot;</span>);</span><br><span class="line"></span><br><span class="line">    oldpassword.next().html(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    newpassword.next().html(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    rnewpassword.next().html(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    oldpassword.on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            url: path + <span class="string">&quot;/jsp/user.do&quot;</span>,<span class="comment">//传向的位置</span></span><br><span class="line">            data: &#123;<span class="attr">method</span>: <span class="string">&quot;pwdmodify&quot;</span>, <span class="attr">oldpassword</span>: oldpassword.val()&#125;,<span class="comment">//传输的数据</span></span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,<span class="comment">//接收的数据类型</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//成功的页面，回调函数</span></span><br><span class="line">                <span class="keyword">if</span> (data.result == <span class="string">&quot;true&quot;</span>) &#123;<span class="comment">//旧密码正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;false&quot;</span>) &#123;<span class="comment">//旧密码输入不正确</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 原密码输入不正确&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;sessionerror&quot;</span>) &#123;<span class="comment">//当前用户session过期，请重新登录</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 当前用户session过期，请重新登录&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.result == <span class="string">&quot;error&quot;</span>) &#123;<span class="comment">//旧密码输入为空</span></span><br><span class="line">                    validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请输入旧密码&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//请求出错 回调函数</span></span><br><span class="line"></span><br><span class="line">                validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; 请求错误&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;).on(<span class="string">&quot;focus&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        validateTip(oldpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#666666&quot;</span>&#125;, <span class="string">&quot;* Please enter the original password&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    newpassword.on(<span class="string">&quot;focus&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        validateTip(newpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#666666&quot;</span>&#125;, <span class="string">&quot;* Password length must be greater than 6 and less than 20&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;).on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (newpassword.val() != <span class="literal">null</span> &amp;&amp; newpassword.val().length &gt; <span class="number">6</span></span><br><span class="line">            &amp;&amp; newpassword.val().length &lt; <span class="number">20</span>) &#123;</span><br><span class="line">            validateTip(newpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            validateTip(newpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; Password input does not meet the specification, please re-enter&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    rnewpassword.on(<span class="string">&quot;focus&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        validateTip(rnewpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#666666&quot;</span>&#125;, <span class="string">&quot;* Please enter the same password as above&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;).on(<span class="string">&quot;blur&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rnewpassword.val() != <span class="literal">null</span> &amp;&amp; rnewpassword.val().length &gt; <span class="number">6</span></span><br><span class="line">            &amp;&amp; rnewpassword.val().length &lt; <span class="number">20</span> &amp;&amp; newpassword.val() == rnewpassword.val()) &#123;</span><br><span class="line">            validateTip(rnewpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, imgYes, <span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            validateTip(rnewpassword.next(), &#123;<span class="string">&quot;color&quot;</span>: <span class="string">&quot;red&quot;</span>&#125;, imgNo + <span class="string">&quot; The two passwords are inconsistent, please re-enter&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    saveBtn.on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        oldpassword.blur();</span><br><span class="line">        newpassword.blur();</span><br><span class="line">        rnewpassword.blur();</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            oldpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>&amp;&amp;</span><br><span class="line">            newpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span></span><br><span class="line">            &amp;&amp; rnewpassword.attr(<span class="string">&quot;validateStatus&quot;</span>) == <span class="string">&quot;true&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (confirm(<span class="string">&quot;确定要修改密码？&quot;</span>)) &#123;</span><br><span class="line">                $(<span class="string">&quot;#userForm&quot;</span>).submit();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="三、用户管理"><a href="#三、用户管理" class="headerlink" title="三、用户管理"></a>三、用户管理</h3><p>用户管理是由三条线组成：查询用户，查询角色，查询用户数量（分页）</p><h5 id="查询用户："><a href="#查询用户：" class="headerlink" title="查询用户："></a>查询用户：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span> <span class="params">(Connection connection, String userName, <span class="keyword">int</span> roleID, <span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        StringBuffer sql = <span class="keyword">new</span> StringBuffer (<span class="string">&quot;select * from smbms_user u ,smbms_role r  where u.userRole=r.id &quot;</span>);</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        <span class="keyword">int</span> execute = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (userName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and u.userName like ? &quot;</span>);</span><br><span class="line">                list.add (<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (roleID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and r.id= ?&quot;</span>);</span><br><span class="line">                list.add (roleID);</span><br><span class="line">            &#125;</span><br><span class="line">            sql.append (<span class="string">&quot; order by u.id  limit ?,?;&quot;</span>);<span class="comment">//第一个参数指定第一个返回记录行的偏移量,就是从第几个开始，第二个参数指定返回记录行的最大数目</span></span><br><span class="line">            currentPage = (currentPage - <span class="number">1</span>) *pageSize;</span><br><span class="line">            list.add (currentPage);</span><br><span class="line">            list.add (pageSize);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet = BaseDao.executeQuery (connection, sql.toString (), list.toArray ());</span><br><span class="line">                <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                    User _user = <span class="keyword">new</span> User ();</span><br><span class="line">                    _user.setID (resultSet.getInt (<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                    _user.setUserCode (resultSet.getString (<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                    _user.setUserName (resultSet.getString (<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                    _user.setUserPassword (resultSet.getString (<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                    _user.setGender (resultSet.getInt (<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    _user.setBirthday (resultSet.getDate (<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                    _user.setPhone (resultSet.getString (<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                    _user.setAddress (resultSet.getString (<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                    _user.setUserRole (resultSet.getInt (<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                    _user.setCreateBy (resultSet.getInt (<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                    _user.setCreationDate (resultSet.getDate (<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                    _user.setModifyBy (resultSet.getInt (<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                    _user.setModifyDate (resultSet.getDate (<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                    userList.add (_user);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                BaseDao.release (<span class="keyword">null</span>, <span class="keyword">null</span>, resultSet);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里的重点是利用字符串的拼接和集合的使用，来把查询语句拼成一句查询语句。用于实现我们的用户管理界面的用户查询和角色查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (userName != <span class="keyword">null</span>) &#123;</span><br><span class="line">               sql.append (<span class="string">&quot;and u.userName like ? &quot;</span>);</span><br><span class="line">               list.add (<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (roleID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">               sql.append (<span class="string">&quot;and r.id= ?&quot;</span>);</span><br><span class="line">               list.add (roleID);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>userservice</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span> <span class="params">(String userName, <span class="keyword">int</span> userRole, <span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        Connection connection = BaseDao.getConnection ();</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            userList = userDao.getUserList (connection, userName, userRole, currentPage, pageSize);</span><br><span class="line"></span><br><span class="line">            BaseDao.release (connection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="查询数量："><a href="#查询数量：" class="headerlink" title="查询数量："></a>查询数量：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">UserNum</span> <span class="params">(Connection connection, String userName, <span class="keyword">int</span> roleID)</span> </span>&#123;</span><br><span class="line">        StringBuffer sql = <span class="keyword">new</span> StringBuffer (<span class="string">&quot;select count(1) as count from smbms_user u ,smbms_role r  where u.userRole=r.id &quot;</span>);</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">        <span class="keyword">int</span> execute = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (userName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and u.userCode like ? &quot;</span>);</span><br><span class="line">                list.add (<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (roleID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sql.append (<span class="string">&quot;and u.userRole= ?&quot;</span>);</span><br><span class="line">                list.add (roleID);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet = BaseDao.executeQuery (connection, sql.toString (), list.toArray ());</span><br><span class="line">                <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                        execute = resultSet.getInt (<span class="string">&quot;count&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">                throwables.printStackTrace ();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                BaseDao.release (<span class="keyword">null</span>, <span class="keyword">null</span>, resultSet);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>联表查询；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span> <span class="params">(String userName, <span class="keyword">int</span> userRole)</span> </span>&#123;</span><br><span class="line">    Connection connection = BaseDao.getConnection ();</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">        i = userDao.UserNum (connection, userName, userRole);</span><br><span class="line">        BaseDao.release (connection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="查询用户的角色的信息"><a href="#查询用户的角色的信息" class="headerlink" title="查询用户的角色的信息"></a>查询用户的角色的信息</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">getRoleList</span> <span class="params">(Connection connection)</span></span>&#123;</span><br><span class="line">       List&lt;Role&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">       String sql = <span class="string">&quot;select * from smbms_role r;&quot;</span>;</span><br><span class="line">       <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">           ResultSet resultSet = BaseDao.executeQuery (connection, sql, <span class="keyword">null</span>);</span><br><span class="line">           <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="keyword">while</span> (resultSet.next ()) &#123;</span><br><span class="line">                       Role _role = <span class="keyword">new</span> Role ();</span><br><span class="line">                       _role.setID (resultSet.getInt (<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                       _role.setRoleCode (resultSet.getString (<span class="string">&quot;roleCode&quot;</span>));</span><br><span class="line">                       _role.setRoleName (resultSet.getString (<span class="string">&quot;roleName&quot;</span>));</span><br><span class="line">                       list.add (_role);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                   throwables.printStackTrace ();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>roleService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">getRoleList</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">       List&lt;Role&gt; roleList = <span class="keyword">new</span> ArrayList&lt;&gt; ();</span><br><span class="line">       Connection connection = BaseDao.getConnection ();</span><br><span class="line">       <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">           roleList = role.getRoleList (connection);</span><br><span class="line">       &#125;</span><br><span class="line">       BaseDao.release (connection,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">       <span class="keyword">return</span> roleList;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这查询的是为了使用用户角色来查询我们的用户</p><p>接下来就是把这三条线合在一起组成一条线；</p><p>servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询界面</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line">        String queryname = req.getParameter (<span class="string">&quot;queryname&quot;</span>);</span><br><span class="line">        String checkRole = req.getParameter (<span class="string">&quot;queryUserRole&quot;</span>);</span><br><span class="line">        String index = req.getParameter (<span class="string">&quot;pageIndex&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> queryUserRole = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//确定查询的框是不是为空</span></span><br><span class="line">        <span class="keyword">if</span> (queryname == <span class="keyword">null</span>) &#123;</span><br><span class="line">            queryname = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断角色框是否是空，在这个框里，传递出来的是value=0;</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;c:if test=&quot;$&#123;roleList != null &#125;&quot;&gt;</span></span><br><span class="line"><span class="comment">         * &lt;option value=&quot;0&quot;&gt;--请选择--&lt;/option&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (checkRole != <span class="keyword">null</span> &amp;&amp; ! checkRole.equals (<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            queryUserRole = Integer.parseInt (checkRole);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//分页</span></span><br><span class="line">        <span class="keyword">int</span> currentPage = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> totalCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl ();</span><br><span class="line">        <span class="comment">//获得用户总数</span></span><br><span class="line">        totalCount = userService.getCount (queryname, queryUserRole);</span><br><span class="line">        <span class="keyword">if</span> (index != <span class="keyword">null</span>) &#123;</span><br><span class="line">            currentPage = Integer.parseInt (index);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置页面</span></span><br><span class="line">        PageSupport pageSupport = <span class="keyword">new</span> PageSupport ();</span><br><span class="line">        pageSupport.setPageSize (pageSize);</span><br><span class="line">        pageSupport.setTotalPageCount (totalCount);</span><br><span class="line">        pageSupport.setCurrentPageNo (currentPage);</span><br><span class="line">        pageSupport.setTotalCount (totalCount);</span><br><span class="line">        <span class="keyword">int</span> currentPageNo = pageSupport.getCurrentPageNo ();</span><br><span class="line">        <span class="comment">//控制第一页和最后一页</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageNo &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            currentPageNo = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentPageNo &gt; totalCount) &#123;</span><br><span class="line">            currentPageNo = totalCount;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得用户列表显示</span></span><br><span class="line">        List&lt;User&gt; userList = userService.getUserList (queryname, queryUserRole, currentPage, pageSize);</span><br><span class="line"></span><br><span class="line">        req.setAttribute (<span class="string">&quot;userList&quot;</span>, userList);</span><br><span class="line">        <span class="comment">//角色列表  用户查询的显示rolelist</span></span><br><span class="line">        roleServiceImpl role = <span class="keyword">new</span> roleServiceImpl ();</span><br><span class="line">        List&lt;Role&gt; roleList = role.getRoleList ();</span><br><span class="line">        req.setAttribute (<span class="string">&quot;roleList&quot;</span>, roleList);</span><br><span class="line">        <span class="comment">//显示页数</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;totalCount&quot;</span>, totalCount);</span><br><span class="line">        req.setAttribute (<span class="string">&quot;currentPageNo&quot;</span>, currentPageNo);<span class="comment">//当前页数</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;totalPageCount&quot;</span>,pageSupport.getTotalPageCount ());<span class="comment">//查询的总页数</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;queryUserName&quot;</span>,queryname);<span class="comment">//名字查询</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;userList&quot;</span>,userList);<span class="comment">//用户列表</span></span><br><span class="line">        req.setAttribute (<span class="string">&quot;queryUserRole&quot;</span>,roleList);<span class="comment">//用户角色的列表</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            req.getRequestDispatcher (<span class="string">&quot;/JSP/userlist.jsp&quot;</span>).forward (req, resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>jsp:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.saxon.pojo.Role&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line"> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/JSP/common/head.jsp&quot;</span>%&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;right&quot;</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;location&quot;</span>&gt;</span><br><span class="line">                &lt;strong&gt;你现在所在的位置是:&lt;/strong&gt;</span><br><span class="line">                &lt;span&gt;用户管理页面&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;search&quot;</span>&gt;</span><br><span class="line">           &lt;form method=<span class="string">&quot;get&quot;</span> action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/jsp/user.do&quot;</span>&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;method&quot;</span> value=<span class="string">&quot;query&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;input-text&quot;</span> type=<span class="string">&quot;hidden&quot;</span>&gt;</span><br><span class="line"> &lt;span&gt;用户名：&lt;/span&gt;</span><br><span class="line"> &lt;input name=<span class="string">&quot;queryname&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;input-text&quot;</span>type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;queryUserName&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;span&gt;用户角色：&lt;/span&gt;</span><br><span class="line">&lt;select name=<span class="string">&quot;queryUserRole&quot;</span>&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;roleList!= null &#125;&quot;</span>&gt;</span><br><span class="line">&lt;option value=&quot;0&quot;&gt;--请选择--&lt;/option&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;pageIndex&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line"> &lt;inputvalue=<span class="string">&quot;查 询&quot;</span> type=<span class="string">&quot;submit&quot;</span> id=<span class="string">&quot;searchbutton&quot;</span>&gt;</span><br><span class="line">&lt;%-- &lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/jsp/useradd.jsp&quot; &gt;添加用户&lt;/a&gt;--%&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!--用户--&gt;</span><br><span class="line">            &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;providerTable&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">                &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;firstTr&quot;</span>&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;用户编码&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;20%&quot;&gt;用户名称&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;性别&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;年龄&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;电话&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;10%&quot;&gt;用户角色&lt;/th&gt;</span><br><span class="line">                    &lt;th width=&quot;30%&quot;&gt;操作&lt;/th&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                   &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;user&quot;</span> items=<span class="string">&quot;$&#123;userList &#125;&quot;</span> varStatus=<span class="string">&quot;status&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.userCode &#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.userName &#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;</span><br><span class="line">&lt;c:if test=&quot;$&#123;user.gender==1&#125;&quot;&gt;男&lt;/c:if&gt;</span><br><span class="line">&lt;c:if test=&quot;$&#123;user.gender==2&#125;&quot;&gt;女&lt;/c:if&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.birthday&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.phone&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;$&#123;user.userRole&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;span&gt;&lt;a class=&quot;viewUser&quot; href=&quot;javascript:;&quot; userid=$&#123;user.ID &#125; username=$&#123;user.userName &#125;&gt;&lt;img src=&quot;$&#123;pageContext.request.contextPath &#125;/images/read.png&quot; alt=&quot;查看&quot; title=&quot;查看&quot;/&gt;&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;&lt;a class=&quot;modifyUser&quot; href=&quot;javascript:;&quot; userid=$&#123;user.ID &#125; username=$&#123;user.userName &#125;&gt;&lt;img src=&quot;$&#123;pageContext.request.contextPath &#125;/images/xiugai.png&quot; alt=&quot;修改&quot; title=&quot;修改&quot;/&gt;&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;&lt;a class=&quot;deleteUser&quot; href=&quot;javascript:;&quot; userid=$&#123;user.ID &#125; username=$&#123;user.userName &#125;&gt;&lt;img src=&quot;$&#123;pageContext.request.contextPath &#125;/images/schu.png&quot; alt=&quot;删除&quot; title=&quot;删除&quot;/&gt;&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> id=<span class="string">&quot;totalPageCount&quot;</span> value=<span class="string">&quot;$&#123;totalPageCount&#125;&quot;</span>/&gt;</span><br><span class="line">  &lt;c:<span class="keyword">import</span> url=<span class="string">&quot;/JSP/rollpage.jsp&quot;</span>&gt;</span><br><span class="line">          &lt;c:param name=<span class="string">&quot;totalCount&quot;</span> value=<span class="string">&quot;$&#123;totalCount&#125;&quot;</span>/&gt;</span><br><span class="line">          &lt;c:param name=<span class="string">&quot;currentPageNo&quot;</span> value=<span class="string">&quot;$&#123;currentPageNo&#125;&quot;</span>/&gt;</span><br><span class="line">          &lt;c:param name=<span class="string">&quot;totalPageCount&quot;</span> value=<span class="string">&quot;$&#123;totalPageCount&#125;&quot;</span>/&gt;</span><br><span class="line">          &lt;/c:import&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--点击删除按钮后弹出的页面--&gt;</span><br><span class="line">&lt;div class=&quot;zhezhao&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;remove&quot;</span> id=<span class="string">&quot;removeUse&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;removerChid&quot;</span>&gt;</span><br><span class="line">        &lt;h2&gt;提示&lt;/h2&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;removeMain&quot;</span>&gt;</span><br><span class="line">            &lt;p&gt;你确定要删除该用户吗？&lt;/p&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot; id=&quot;yes&quot;&gt;确定&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot; id=&quot;no&quot;&gt;取消&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/JSP/common/foot.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;pageContext.request.contextPath &#125;/js/userlist.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十五，文件上传"><a href="#十五，文件上传" class="headerlink" title="十五，文件上传"></a>十五，文件上传</h2><p>需要的jar包：</p><p>commo.io;</p><p>文件上传要求：</p><p>1.为了文件的安全性，我们要把文件放在外界无法直接访问的目录下；</p><p>2.要限制文件的大小</p><p>3.为了防止发生重名覆盖的现象，我们要避免重名</p><p>4.可以限制文件的类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.ProgressListener;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">fileUpLoad</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//判断文件是不是有文件上传的项</span></span><br><span class="line">        <span class="keyword">if</span> (! ServletFileUpload.isMultipartContent (req)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//终止方法,没有文件上传的功能</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建文件上传的路径 建议在WEB-INF目录下因为外部无法直接访问，比较安全；</span></span><br><span class="line">        String realPath = <span class="keyword">this</span>.getServletContext ().getRealPath (<span class="string">&quot;/WEB-INF/load&quot;</span>);</span><br><span class="line">        File file = <span class="keyword">new</span> File (realPath);</span><br><span class="line">        <span class="keyword">if</span> (! file.exists ()) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> mkdir = file.mkdir ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//临时文件区域，当文件的大小超过了一定的大小，就放在这里，超过一定的时间九自动删除；</span></span><br><span class="line">        String tempPath = <span class="keyword">this</span>.getServletContext ().getRealPath (<span class="string">&quot;/WEB-INF/temp&quot;</span>);</span><br><span class="line">        File temp = <span class="keyword">new</span> File (tempPath);</span><br><span class="line">        <span class="keyword">if</span> (! temp.exists ()) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> mkdir = temp.mkdir ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得一个工厂</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          @see DiskFileItemFactory</span></span><br><span class="line"><span class="comment">         * public static final int DEFAULT_SIZE_THRESHOLD = 10240;</span></span><br><span class="line"><span class="comment">         *     private File repository; 存储库文件的地方</span></span><br><span class="line"><span class="comment">         *     private int sizeThreshold;  文件的大小</span></span><br><span class="line"><span class="comment">         *     private FileCleaningTracker fileCleaningTracker;清理文件</span></span><br><span class="line"><span class="comment">         *     private String defaultCharset;编码</span></span><br><span class="line"><span class="comment">         *      public static final String DEFAULT_CHARSET = &quot;ISO-8859-1&quot;;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory ();</span><br><span class="line">        <span class="comment">//factory要有。</span></span><br><span class="line">        ServletFileUpload Upload = <span class="keyword">new</span> ServletFileUpload ();</span><br><span class="line">        <span class="comment">//监听我们的进程的进度</span></span><br><span class="line">        Upload.setProgressListener (<span class="keyword">new</span> ProgressListener () &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> pBytesRead 已经读取的文件</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> pContentLength 文件上传的大小</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> pItems 已经上传的项目</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span> <span class="params">(<span class="keyword">long</span> pBytesRead, <span class="keyword">long</span> pContentLength, <span class="keyword">int</span> pItems)</span> </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//获得文件的后缀和文件的名字</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//解析前端的请求，封装成一个fileitem对象</span></span><br><span class="line">        List&lt;FileItem&gt; list = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            list = Upload.parseRequest (req);</span><br><span class="line">            <span class="keyword">for</span> (FileItem fileItem : list) &#123;</span><br><span class="line">                <span class="keyword">if</span> (fileItem.isFormField ()) &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span> <span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet (req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十六、邮件发送"><a href="#十六、邮件发送" class="headerlink" title="十六、邮件发送"></a>十六、邮件发送</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.saxon.mail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.activation.DataHandler;</span><br><span class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mail</span> </span>&#123;</span><br><span class="line">    <span class="comment">//配置文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties ();</span><br><span class="line">        <span class="comment">//准备</span></span><br><span class="line">        properties.setProperty (<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>);<span class="comment">//设置QQ邮箱</span></span><br><span class="line">        properties.setProperty (<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);<span class="comment">//设置发送协议</span></span><br><span class="line">        properties.setProperty (<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);<span class="comment">//是否验证密码</span></span><br><span class="line">        <span class="comment">//QQ邮箱</span></span><br><span class="line"></span><br><span class="line">        MailSSLSocketFactory socketFactory = <span class="keyword">new</span> MailSSLSocketFactory ();</span><br><span class="line">        socketFactory.setTrustAllHosts (<span class="keyword">true</span>);</span><br><span class="line">        properties.put (<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        properties.put (<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, socketFactory);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//邮箱的五个步骤</span></span><br><span class="line">        <span class="comment">//1.设置session环境</span></span><br><span class="line">        Session defaultInstance = Session.getDefaultInstance (properties, <span class="keyword">new</span> Authenticator () &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication (<span class="string">&quot;2433027822@qq.com&quot;</span>, <span class="string">&quot;ffvluhisjcfzebab&quot;</span>);<span class="comment">//前一个写地址，后一个写验证码</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        defaultInstance.setDebug (<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//2获得transport对象.用来发送邮件</span></span><br><span class="line">        Transport ts = defaultInstance.getTransport ();</span><br><span class="line">        <span class="comment">//3.使用邮箱和授权码来进行连接</span></span><br><span class="line">        ts.connect (<span class="string">&quot;smtp.qq.com&quot;</span>, <span class="string">&quot;2433027822#qq.com&quot;</span>, <span class="string">&quot;ffvluhisjcfzebab&quot;</span>);</span><br><span class="line">        <span class="comment">//4,编写邮件</span></span><br><span class="line">        Message message = <span class="keyword">new</span> MimeMessage (defaultInstance);</span><br><span class="line">        <span class="comment">//指明发件人</span></span><br><span class="line">        message.addRecipient (Message.RecipientType.TO, <span class="keyword">new</span> InternetAddress (<span class="string">&quot;2433027822@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//设置主题</span></span><br><span class="line">        message.setSubject (<span class="string">&quot;你好啊&quot;</span>);</span><br><span class="line">        <span class="comment">//设置图片内容</span></span><br><span class="line">        MimeBodyPart image = <span class="keyword">new</span> MimeBodyPart ();</span><br><span class="line">        <span class="comment">//图片要处理一下数据</span></span><br><span class="line">        DataHandler dataHandler = <span class="keyword">new</span> DataHandler (<span class="keyword">new</span> FileDataSource (<span class="string">&quot;D:\\dnf补丁\\bg.jpg&quot;</span>));</span><br><span class="line">        image.setDataHandler (dataHandler);</span><br><span class="line">        image.setContentID (<span class="string">&quot;bg.jpg&quot;</span>);<span class="comment">//这里设置的ID我们子啊后面可以接着使用</span></span><br><span class="line">        <span class="comment">//准备正文数据</span></span><br><span class="line">        MimeBodyPart content=<span class="keyword">new</span> MimeBodyPart ();</span><br><span class="line">        content.setContent (<span class="string">&quot;这是一个带有图片的邮件&lt;img src=&#x27;uid:bg.jpg&#x27;&gt;&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//描述数据关系</span></span><br><span class="line">        MimeMultipart mm=<span class="keyword">new</span> MimeMultipart ();</span><br><span class="line">        mm.addBodyPart (image);</span><br><span class="line">        mm.addBodyPart (content);</span><br><span class="line">        mm.setSubType (<span class="string">&quot;related&quot;</span>);</span><br><span class="line">        message.setText (<span class="string">&quot;这是第一份邮件&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置到消息中</span></span><br><span class="line">        message.setContent (mm);<span class="comment">//把最后消息发送到消息中</span></span><br><span class="line">        message.saveChanges ();<span class="comment">//保存修改</span></span><br><span class="line">        <span class="comment">//设置接受的人</span></span><br><span class="line">        message.setFrom (<span class="keyword">new</span> InternetAddress (<span class="string">&quot;2433027822@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//5.发送邮件</span></span><br><span class="line">        ts.sendMessage (message,message.getAllRecipients ());</span><br><span class="line">        ts.close ();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ElasticSearch/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ElasticSearch/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h1><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>Elaticsearch，简称为es， es是一个开源的高扩展的分布式全文检索引擎，它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。es也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p><p> 据国际权威的数据库产品评测机构DB Engines的统计，在2016年1月，ElasticSearch已超过Solr等，成为排名第一的搜索引擎类应用。</p><h2 id="二、ElasticSearch和Elastic-Search-Kibana安装"><a href="#二、ElasticSearch和Elastic-Search-Kibana安装" class="headerlink" title="二、ElasticSearch和Elastic Search Kibana安装"></a>二、ElasticSearch和Elastic Search Kibana安装</h2><h3 id="一、Elastic-Search和Elastic-Search-head"><a href="#一、Elastic-Search和Elastic-Search-head" class="headerlink" title="一、Elastic Search和Elastic Search head"></a>一、Elastic Search和Elastic Search head</h3><p>我们需要下载和安装ElasticSearch的服务端和客户端！</p><p>注意：</p><p>ElasticSearch是使用java开发的，且本版本的es需要的jdk版本要是1.8以上，所以安装ElasticSearch 之前保证JDK1.8+安装完毕，并正确的配置好JDK环境变量，否则启动ElasticSearch失败。</p><p>ElasticSearch的官方地址： <a href="https://www.elastic.co/products/elasticsearch">https://www.elastic.co/products/elasticsearch</a></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/clip_image005.jpg" alt="img"></p><p>官方下载地址：<a href="https://www.elastic.co/cn/downloads/elasticsearch">https://www.elastic.co/cn/downloads/elasticsearch </a>（很慢，可以翻墙下载！）</p><p>win下载：<a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.1.zip">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.1.zip</a></p><p>我这里已经帮大家下载好了，Linux 和 window 版的！</p><p>我们学习的话使用 window 或者 linux 都是可以的，对于我们 java 开发来说没有区别，只是连接的问题！</p><p>Windows更加方便一点！所以我们前期都是用Window安装使用！后面我们再真正的安装到Linux服务器 上跑项目！</p><p> <strong>1、解压window的压缩包！</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/clip_image012.jpg" alt="img"></p><p>2、双击ElasticSearch下的bin目录中的elasticsearch.bat启动，控制台显示的日志（等待启动完 毕！）：</p><p>3、然后在浏览器访问：<a href="http://localhost:9200/">http://localhost:9200</a> 得到如下信息，说明安装成功了:</p><p>!)<img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/clip_image018.jpg" alt="img"></p><p>注意：需要NodeJS的环境，我们讲解大前端进阶已经安装过了，没安装的需要安装！ Head是elasticsearch的集群管理工具，可以用于数据的浏览查询！被托管在github上面！ 地址： <a href="https://github.com/mobz/elasticsearch-head/">https://github.com/mobz/elasticsearch-head/</a></p><p>1、下载 elasticsearch-head-master.zip 2、解压之后安装依赖！ </p><p>这将启动在端口9100上运行的本地web服务器，为elasticsearch-head服务！访问测试： </p><p>3、由于ES进程和客户端进程端口号不同，存在跨域问题，所以我们要在ES的配置文件中配置下跨域问 题：</p><table><thead><tr><th>1</th><th># 跨域配置：</th></tr></thead><tbody><tr><td>2</td><td>http.cors.enabled:  true</td></tr><tr><td>3</td><td>http.cors.allow-origin:  “*”</td></tr></tbody></table><p>4、启动ElasticSearch，使用head工具进行连接测试！</p><h3 id="二、kibana"><a href="#二、kibana" class="headerlink" title="二、kibana"></a><strong>二、kibana</strong></h3><p>Kibana是一个针对Elasticsearch的开源分析及可视化平台，用来搜索、查看交互存储在Elasticsearch索 引中的数据。使用Kibana，可以通过各种图表进行高级数据分析及展示。Kibana让海量数据更容易理   解。它操作简单，基于浏览器的用户界面可以快速创建仪表板（dashboard）实时显示Elasticsearch查 询动态。设置Kibana非常简单。无需编码或者额外的基础架构，几分钟内就可以完成Kibana安装并启动Elasticsearch索引监测。</p><p>下载过程和上面的一摸一样，但是就是我们的版本号不同导致页面和以前不一样</p><p><strong>配置中文</strong></p><p>只需要在配置文件 kibana.yml 中加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i18n.locale: <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><h2 id="三、Elastic-Search的核心概念"><a href="#三、Elastic-Search的核心概念" class="headerlink" title="三、Elastic Search的核心概念"></a>三、Elastic Search的核心概念</h2><p><strong>==elasticsearch是面向文档，关系行数据库 和 elasticsearch 客观的对比==</strong></p><table><thead><tr><th><strong>Relational DB</strong>  (mysql)</th><th><strong>Elasticsearch</strong></th></tr></thead><tbody><tr><td>数据库(database)</td><td>索引(indices)</td></tr><tr><td>表(tables)</td><td>types</td></tr><tr><td>行(rows)</td><td>documents</td></tr><tr><td>字段(columns)</td><td>ﬁelds</td></tr></tbody></table><p>elasticsearch(集群)中可以包含<strong>多个索引(数据库)**，每个索引中可以包含</strong>多个类型(表)<strong>，每个类型下又包 含多 个</strong>文档(行)<strong>，每个文档中又包含多个</strong>字段(列)**。</p><p>物理设计：</p><p>elasticsearch 在后台把每个索引划分成多个分片，每分分片可以在集群中的不同服务器间迁移</p><p>逻辑设计：</p><p>一个索引类型中，包含多个文档，比如说文档1，文档2。 当我们索引一篇文档时，可以通过这样的一各顺序找到 它: 索引 ▷ 类型 ▷ 文档ID ，通过这个组合我们就能索引到某个具体的文档。 注意:ID不必是整数，实际上它是个字 符串。</p><h3 id="一、文档"><a href="#一、文档" class="headerlink" title="一、文档"></a>一、文档</h3><p>之前说elasticsearch是面向文档的，那么就意味着索引和搜索数据的最小单位是文档，elasticsearch 中，文档有几个 重要属性 :</p><p>!自我包含，一篇文档同时包含字段和对应的值，也就是同时包含 key:value！ 可以是层次型的，一个文档中包含自文档，复杂的逻辑实体就是这么来的！</p><p>灵活的结构，文档不依赖预先定义的模式，我们知道关系型数据库中，要提前定义字段才能使用， 在elasticsearch中，对于字段是非常灵活的，有时候，我们可以忽略该字段，或者动态的添加一个 新的字段。<br>尽管我们可以随意的新增或者忽略某个字段，但是，每个字段的类型非常重要，比如一个年龄字段类   型，可以是字符 串也可以是整形。因为elasticsearch会保存字段和类型之间的映射及其他的设置。这种映射具体到每个映射的每种类型，这也是为什么在elasticsearch中，类型有时候也称为映射类型。</p><p>类型是文档的逻辑容器，就像关系型数据库一样，表格是行的容器。 类型中对于字段的定义称为映射</p><h3 id="二、类型"><a href="#二、类型" class="headerlink" title="二、类型"></a>二、类型</h3><p>比如 name 映 射为字符串类型。 我们说文档是无模式的，它们不需要拥有映射中所定义的所有字段， 比如新增一个字段，那么elasticsearch是怎么做的呢?elasticsearch会自动的将新字段加入映射，但是这 个字段的不确定它是什么类型，elasticsearch就开始猜，如果这个值是18，那么elasticsearch会认为它 是整形。 但是elasticsearch也可能猜不对， 所以<strong>最安全的方式就是提前定义好所需要的映射</strong>，这点跟关系型数据库殊途同归了，先定义好字段，然后再使用，别 整什么幺蛾子。</p><h2 id="四、IK分词器"><a href="#四、IK分词器" class="headerlink" title="四、IK分词器"></a>四、IK分词器</h2><p>分词：即把一段中文或者别的划分成一个个的关键字，我们在搜索时候会把自己的信息进行分词，会把 数据库中或者索引库中的数据进行分词，然后进行一个匹配操作，默认的中文分词是将每个字看成一个 词，比如 “我爱狂神” 会被分为”我”,”爱”,”狂”,”神”，这显然是不符合要求的，所以我们需要安装中文分词器ik来解决这个问题。</p><p>IK提供了两个分词算法：ik_smart 和 ik_max_word，其中 ik_smart 为最少切分，ik_max_word为最细粒度划分！一会我们测试！</p><p><strong>ik_smart</strong> : 粗粒度分词，从第一个开始分割，分离词汇，不会阿紫回来再分割一次，就只分割一次！</p><p><strong>ik_max_word</strong> : 细粒度分词，会穷尽一个语句中所有分词可能，测试！</p><h4 id="ik-smart"><a href="#ik-smart" class="headerlink" title="ik_smart"></a>ik_smart</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line"> , <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;曲靖师范学院信息工程学院&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;曲靖&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;信息&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ik-max-word"><a href="#ik-max-word" class="headerlink" title="ik_max_word"></a>ik_max_word</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line"> , <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;曲靖师范学院信息工程学院&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;曲靖&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">3</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;信息&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程学&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">6</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;工程&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">7</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">8</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>smart模式只会分割一次。</p><h4 id="自定义词汇"><a href="#自定义词汇" class="headerlink" title="自定义词汇"></a>自定义词汇</h4><p>步骤：</p><p>（1）  进入elasticsearch/plugins/ik/conﬁg目录</p><p>（2）  新建一个my.dic文件，编辑内容：</p><p>（3）  修改IKAnalyzer.cfg.xml（在ik/conﬁg目录下）</p><p>使用以后变化：</p><p>我在字典里面添加了一个==信息工程学院==</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line"> , <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;曲靖师范学院信息工程学院&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;曲靖&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;师范学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;信息工程学院&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">6</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变化在于：<strong>他把我们的原来拆分成俩个的信息和工程学院变成信息工程学院了</strong></p><h2 id="五、restful风格"><a href="#五、restful风格" class="headerlink" title="五、restful风格"></a>五、restful风格</h2><p>一种软件架构风格，而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交 互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。</p><p>基本Rest命令说明：</p><table><thead><tr><th><strong>method</strong></th><th><strong>url</strong>地址</th><th>描述</th></tr></thead><tbody><tr><td>PUT</td><td>localhost:9200/索引名称/类型名称/文档id</td><td>创建文档（指定文档id）</td></tr><tr><td>POST</td><td>localhost:9200/索引名称/类型名称</td><td>创建文档（随机文档id）</td></tr><tr><td>POST</td><td>localhost:9200/索引名称/类型名称/文档id/_update</td><td>修改文档</td></tr><tr><td>DELETE</td><td>localhost:9200/索引名称/类型名称/文档id</td><td>删除文档</td></tr><tr><td>GET</td><td>localhost:9200/索引名称/类型名称/文档id</td><td>查询文档通过文档id</td></tr><tr><td>POST</td><td>localhost:9200/索引名称/类型名称/_search</td><td>查询所有数据</td></tr></tbody></table><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT /[index]</span><br></pre></td></tr></table></figure><h4 id="测试put（添加数据）"><a href="#测试put（添加数据）" class="headerlink" title="测试put（添加数据）"></a><strong>测试put（添加数据）</strong></h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT /test/type1/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in document index requests is deprecated, use the typeless endpoints instead (/&#123;index&#125;/_doc/&#123;id&#125;, /&#123;index&#125;/_doc, or /&#123;index&#125;/_create/&#123;id&#125;).//使用的格式不要制定索引的类型</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;test&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;type1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在elasticSearch head里面发现新的索引</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201123154604392.png" alt="image-20201123154604392"></p><p><strong>如果kibana一直在调转，我们可以看一下Elastic Search客户端是否卡住了；</strong></p><p><strong>使用put创建一个库</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUT /saxon</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;integer&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;index&quot;</span> : <span class="string">&quot;saxon&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不指定数据类型的话，es会自动指定数据</p><h4 id="修改索引库"><a href="#修改索引库" class="headerlink" title="修改索引库"></a>修改索引库</h4><p><strong>第一种方法：put</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT /test/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;saxonmo&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;test&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>需要注意的是，这个需要我们把库里面所有的字段，都要写出来；实际上就是一个覆盖</strong></p><p>使用post 最后加上<strong>__update</strong></p><p><strong>修改属性</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /saxon/_doc/3/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;doc&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;json&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最新的方式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /key2/_update/jjab_nUB0kitsOqAVIOH/</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;doc&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;ss&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在索引的后面就是用<strong>_update</strong>在加上 <strong>id</strong>就可以修改，这么做的方法与上面put不同的地方在于可以不用写出全部的字段名，想要修改哪一个属性就修改那个属性，使用 <strong>doc</strong>括起来就可以</p><h4 id="删除索引库"><a href="#删除索引库" class="headerlink" title="删除索引库"></a>删除索引库</h4><p>删除一整个库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /[index]</span><br></pre></td></tr></table></figure><p>删除某一个字段</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /key2/_doc/jjab_nUB0kitsOqAVIOH</span><br></pre></td></tr></table></figure><p><strong>库名/类型/id</strong></p><h4 id="文档的搜索"><a href="#文档的搜索" class="headerlink" title="文档的搜索"></a>文档的搜索</h4><p><strong>关于hits</strong></p><p>hits包括了索引和文档信息，查询结果的总数,id等信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.9808291</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>不使用restful风格</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET saxon/_search?q=name=mo</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.9808291</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.9808291</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="搜索指定索引根据属性"><a href="#搜索指定索引根据属性" class="headerlink" title="搜索指定索引根据属性"></a><strong>搜索指定索引根据属性</strong></h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mosong&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;json&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.08701137</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;saxonmo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="搜索出来的数据，控制显示的属性"><a href="#搜索出来的数据，控制显示的属性" class="headerlink" title="搜索出来的数据，控制显示的属性"></a><strong>搜索出来的数据，控制显示的属性</strong></h5><p>使用“_source”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_source&quot;</span>: [<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">1.2039728</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.2039728</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;18&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="数据排序"><a href="#数据排序" class="headerlink" title="数据排序"></a>数据排序</h5><p><strong>sort:</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;mo&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;sort&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h5><p><strong>from[序号] size[页面大小]</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;mo&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;from&quot;</span>: <span class="number">0</span></span><br><span class="line">  , <span class="attr">&quot;size&quot;</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h5><p>bool下面使用must或者should，使用<strong>must</strong>的话，就是and关系，必须要所有条件，排除条件的话，使用 <strong>must_not</strong>；使用<strong>should</strong>的话就只要满足一个就好</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是多个条件一起查询</p><h5 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h5><p><strong>使用filter选择在这个条件的时候，range选择age的范围</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;saxon&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;filter&quot;</span>: [</span><br><span class="line">        &#123;<span class="attr">&quot;range&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;age&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;gte&quot;</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;lte&quot;</span>: <span class="number">20</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>gte:大于等于 gt:大于</li><li>lte:小于等于 lt:小于</li></ul><h5 id="查询多个的权重"><a href="#查询多个的权重" class="headerlink" title="查询多个的权重"></a><strong>查询多个的权重</strong></h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">325</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣男&quot;</span>,</span><br><span class="line">            <span class="string">&quot;男&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.12874341</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;男人&quot;</span>,</span><br><span class="line">            <span class="string">&quot;美铝&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配的个数不同的话，他的分数就会不一样，权重就不一样，匹配越多，权重越大；</p><p>匹配多个的话，直接使用空格隔开</p><h5 id="精准查询"><a href="#精准查询" class="headerlink" title="精准查询"></a>精准查询</h5><p>term:直接查询精确的，通过倒排索指定的词条进行精确查询</p><p>match：使用分词器分析</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果tags是关键字的话，他就会只匹配一整个，不会分词</p><p><strong>字段的类型 text和keyword</strong></p><p><strong>text：会不会被拆分，会不会使用分词器分析</strong></p><p><strong>keyword：不会被拆分</strong></p><h5 id="高亮显示"><a href="#高亮显示" class="headerlink" title="高亮显示"></a>高亮显示</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">83</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣男&quot;</span>,</span><br><span class="line">            <span class="string">&quot;男&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣&lt;em&gt;男&lt;/em&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;em&gt;男&lt;/em&gt;&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.12874341</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;男人&quot;</span>,</span><br><span class="line">            <span class="string">&quot;美铝&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;&lt;em&gt;男&lt;/em&gt;人&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>自定义高亮样式：</strong></p><p>使用<strong>pre_tags(前缀)**和</strong>post_tags(后缀)**</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;pre_tags&quot;</span>: <span class="string">&quot;&lt;p&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;post_tags&quot;</span>: <span class="string">&quot;&lt;/p&gt;&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;tags&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> : <span class="string">&quot;eq&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.19350058</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣男&quot;</span>,</span><br><span class="line">            <span class="string">&quot;男&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;渣&lt;p&gt;男&lt;/p&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;p&gt;男&lt;/p&gt;&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.12874341</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;mo&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;age&quot;</span> : <span class="number">23</span>,</span><br><span class="line">          <span class="attr">&quot;desc&quot;</span> : <span class="string">&quot;selftest&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;男人&quot;</span>,</span><br><span class="line">            <span class="string">&quot;美铝&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;tags&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;&lt;p&gt;男&lt;/p&gt;人&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、Springboot-集成-ElasticSearch7-8-0"><a href="#六、Springboot-集成-ElasticSearch7-8-0" class="headerlink" title="六、Springboot 集成 ElasticSearch7.8.0"></a>六、Springboot 集成 ElasticSearch7.8.0</h2><p><strong>使用spring boot的版本为2.4.0，所以系统自带的ElasticSearch 的版本就是7.9.2，我们可以为他自动降个版本</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>7.8.0<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用版本要和我们本地的版本一致；</p><h3 id="第一步、Quick-Start"><a href="#第一步、Quick-Start" class="headerlink" title="第一步、Quick Start"></a>第一步、Quick Start</h3><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20201124214447961.png" alt="image-20201124214447961"></p><p>初始化，在spring boot自动配置；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticSearchClientConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestHighLevelClient <span class="title">restHighLevelClient</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestHighLevelClient (RestClient.builder(</span><br><span class="line">                <span class="keyword">new</span> HttpHost(<span class="string">&quot;localhost&quot;</span>, <span class="number">9200</span>, <span class="string">&quot;http&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于<strong>RestHighLevelClient</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">RestHighLevelClient</span><span class="params">(RestClientBuilder restClientBuilder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(restClientBuilder, Collections.emptyList());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>对我们的客户端进行一个绑定</p><h3 id="第二步、创建第一个索引"><a href="#第二步、创建第一个索引" class="headerlink" title="第二步、创建第一个索引"></a>第二步、创建第一个索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.indices.CreateIndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.indices.CreateIndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoApplicationTests</span> </span>&#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RestHighLevelClient restHighLevelClient;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">CreateIndexRequest request=<span class="keyword">new</span> CreateIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">CreateIndexResponse response=restHighLevelClient.indices ().create (request, RequestOptions.DEFAULT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一个创建索引的服务端，就有一个创建索引的响应端创建执行索引命令；</p><p>结果如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">GET /saxon</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;saxon&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;aliases&quot;</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;index&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;creation_date&quot;</span> : <span class="string">&quot;1606225198553&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_shards&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_replicas&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;uuid&quot;</span> : <span class="string">&quot;LwwRyzzISD20HJXIKsHZ8A&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;created&quot;</span> : <span class="string">&quot;7080099&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;provided_name&quot;</span> : <span class="string">&quot;saxon&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三步、查看索引是否存在以及获得索引信息"><a href="#第三步、查看索引是否存在以及获得索引信息" class="headerlink" title="第三步、查看索引是否存在以及获得索引信息"></a>第三步、查看索引是否存在以及获得索引信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetIndexRequest request=<span class="keyword">new</span> GetIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">System.out.println (restHighLevelClient.indices ().exists (request, RequestOptions.DEFAULT));</span><br></pre></td></tr></table></figure><p>执行命令：<strong>restHighLevelClient.indices ()</strong></p><p>获得索引信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetIndexRequest request=<span class="keyword">new</span> GetIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">System.out.println (restHighLevelClient.indices ().get (request,RequestOptions.DEFAULT));</span><br></pre></td></tr></table></figure><h3 id="第四步、测试删除一个索引"><a href="#第四步、测试删除一个索引" class="headerlink" title="第四步、测试删除一个索引"></a>第四步、测试删除一个索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">DeleteIndexRequest request=<span class="keyword">new</span> DeleteIndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">System.out.println (restHighLevelClient.indices ().delete (request,RequestOptions.DEFAULT).isAcknowledged ());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、文档操作"><a href="#七、文档操作" class="headerlink" title="七、文档操作"></a>七、文档操作</h2><h3 id="一、添加文档信息"><a href="#一、添加文档信息" class="headerlink" title="一、添加文档信息"></a>一、添加文档信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实际命令 PUT /saxon/_doc/1</span></span><br><span class="line"><span class="comment">//        &#123;...&#125;</span></span><br><span class="line">User saxon = <span class="keyword">new</span> User (<span class="string">&quot;saxon&quot;</span>, <span class="number">1</span>);</span><br><span class="line">IndexRequest indexRequest=<span class="keyword">new</span> IndexRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">indexRequest.id (<span class="string">&quot;1&quot;</span>);<span class="comment">//设置文档的编号</span></span><br><span class="line">indexRequest.timeout (<span class="string">&quot;1s&quot;</span>);</span><br><span class="line">String s = JSON.toJSONString (saxon);</span><br><span class="line">indexRequest.source (s,XContentType.JSON);</span><br><span class="line">IndexResponse index = restHighLevelClient.index (indexRequest, RequestOptions.DEFAULT);</span><br><span class="line">System.out.println (index.getVersion ());</span><br></pre></td></tr></table></figure><p>指定timeout，就能在timeout时间范围内，将搜索到的部分数据（也可能全部都搜索到），直接返回给client，而不是所有数据搜索到再返回，可以为一些敏感的搜索应用提供良好的支持</p><p>提供的信息必须要是json字符串，否则就会添加失败,还是那句话，所有的命令由client执行</p><h3 id="二、修改文档的数据"><a href="#二、修改文档的数据" class="headerlink" title="二、修改文档的数据"></a>二、修改文档的数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UpdateRequest up = <span class="keyword">new</span> UpdateRequest (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">up.doc (JSON.toJSONString (<span class="keyword">new</span> User (<span class="string">&quot;saxonmo&quot;</span>,<span class="number">202</span>)),XContentType.JSON);</span><br><span class="line">UpdateResponse update = restHighLevelClient.update (up, RequestOptions.DEFAULT);</span><br><span class="line">System.out.println (update.status ());</span><br></pre></td></tr></table></figure><p>实际上每一个xxxxResponse对应的都是一个命令的返回体</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;saxon&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">6</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">5</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、删除文档数据"><a href="#三、删除文档数据" class="headerlink" title="三、删除文档数据"></a>三、删除文档数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DeleteRequest deleteRequest=<span class="keyword">new</span> DeleteRequest (<span class="string">&quot;saxon&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">deleteRequest.timeout (<span class="string">&quot;1s&quot;</span>);</span><br><span class="line">DeleteResponse deleteResponse=restHighLevelClient.delete (deleteRequest,RequestOptions.DEFAULT);</span><br><span class="line">System.out.println (deleteResponse.status ());</span><br></pre></td></tr></table></figure><h3 id="四、查出文档信息"><a href="#四、查出文档信息" class="headerlink" title="四、查出文档信息"></a>四、查出文档信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SearchRequest searchRequest=<span class="keyword">new</span> SearchRequest (<span class="string">&quot;saxon&quot;</span>);</span><br><span class="line">SearchSourceBuilder Builder = <span class="keyword">new</span> SearchSourceBuilder ();</span><br><span class="line">Builder.query (QueryBuilders.matchQuery (<span class="string">&quot;name&quot;</span>,<span class="string">&quot;saxon&quot;</span>));</span><br><span class="line">searchRequest.source (Builder);</span><br><span class="line">SearchResponse search = restHighLevelClient.search (searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"><span class="keyword">for</span> (SearchHit hit : search.getHits ()) &#123;</span><br><span class="line">System.out.println (hit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>2020/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、单例模式"><a href="#一、单例模式" class="headerlink" title="一、单例模式"></a>一、单例模式</h2><p>饿汉式单例模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">LazyMan</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyMan</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> LazyMan LAZYMAN=<span class="keyword">new</span> LazyMan();</span><br><span class="line">  <span class="function"><span class="keyword">public</span> LazyMan <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> LAZYMAN;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>==盲目的没有条件的新建对象，会造成内存的浪费==</strong></p><p>懒汉式单例模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">LazyMan</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyMan</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> LazyMan LAZYMAN;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> LazyMan <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> LazyMan();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是上面的程序在多线程情况下没有安全性可言，于是有了DSL(双锁单例模式)，实际上更像是一个三🔒的模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * DCL（Double Check Lock）单例模式，简而言之就是双锁问题，用两个锁来让对象实现原子操作。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SigleTon</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SigleTon</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (SigleTon.class) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag ==<span class="keyword">true</span>) &#123;</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException (<span class="string">&quot;?????&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println (Thread.currentThread ().getName () + <span class="string">&quot;\tOK&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> SigleTon singleton;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.分配内存空间</span></span><br><span class="line"><span class="comment">     * 2.执行构造方法</span></span><br><span class="line"><span class="comment">     * 3.将空间地址复制给变量</span></span><br><span class="line"><span class="comment">     * 以上3步执行完成之后，才创建完整的一个实例。</span></span><br><span class="line"><span class="comment">     * 因此执行顺序可能会有不同，比如123就是正常，但是由于CPU，jvm具有重排指令的功能，所以可能会导致132，一旦空间分配完成，</span></span><br><span class="line"><span class="comment">     * 我们就认为一个对象的实例化完成，那么另一个进程进入的时候就会以为已经完成了对韵对象的获取，那么返回的就是一个空的对象。</span></span><br><span class="line"><span class="comment">     * 加上volatile及时的进行可见性的使用,拒绝代码的重排</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SigleTon <span class="title">getInstance</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//只有一个类就可以使用这个代码块，:在任何时候,最多允许一个线程拥有同步锁,谁拿到锁就进入代码块,其他的线程只能在外等着.</span></span><br><span class="line">            <span class="comment">//在这里，synchronized 加在这里的话，可以尽可能的减少系统开销，提高速度</span></span><br><span class="line">            <span class="keyword">synchronized</span> (SigleTon.class) &#123;<span class="comment">//第一个锁</span></span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;<span class="comment">//第二个锁，起到判定</span></span><br><span class="line">                    singleton = <span class="keyword">new</span> SigleTon ();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> singleton;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部类实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Single</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Single</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Single <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inner.SINGLE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">inner</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span>  <span class="keyword">static</span>  Single SINGLE=<span class="keyword">new</span> Single ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个也不是很安全，我们可以利用反射破坏结构；</p><p>所以使用枚举来实行单例模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JUC.Sigle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 枚举类实现单例模式是安全的，无法破坏原子性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span>  <span class="title">EnumSigle</span>  </span>&#123;</span><br><span class="line"></span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    EnumSigle () &#123;</span><br><span class="line">        System.out.println (Thread.currentThread ().getName ());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EnumSigle <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println (<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread (()-&gt; EnumSigle.getInstance ()).start ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、代理模式"><a href="#二、代理模式" class="headerlink" title="二、代理模式"></a>二、代理模式</h2><h2 id="三、工厂模式"><a href="#三、工厂模式" class="headerlink" title="三、工厂模式"></a>三、工厂模式</h2><p>我们一般的普通的使用对象，我们需要知道他具体的实现方法，比如使用new car();但是我们只想获得这个对象，我不想知道他是如何产生的和构造的，就像我们去吃饭，我们不关心饭是如何做的，我们只关心自己吃什么；我们就可以使用一个模式来定向获得对象；</p><h3 id="静态代理模式"><a href="#静态代理模式" class="headerlink" title="静态代理模式"></a>静态代理模式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> StaticFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> StaticFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tesla</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">name</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;tesla&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> StaticFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Truck</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">name</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;Truck&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> StaticFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">getCar</span><span class="params">(String car)</span></span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (car)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;tesla&quot;</span>: <span class="keyword">return</span> <span class="keyword">new</span> Tesla ();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;truck&quot;</span>:<span class="keyword">return</span> <span class="keyword">new</span> Truck();</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> StaticFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticFactoryTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Car tesla = CarFactory.getCar (<span class="string">&quot;tesla&quot;</span>);</span><br><span class="line">        tesla.name ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面代码的问题就在于不可以动态的更新，我们一旦添加一个新的类，我们就要再方法上修改方法，违背我们的软件设计原则；</p><h3 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h3><p>解决我们上面的问题，我们上面无法动态更新，于是我们想一个办法，每生产一个类，就生产一个相应的工厂类；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MethodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> MethodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tesla</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">name</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;Tesla&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> MethodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Truck</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">name</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println (<span class="string">&quot;Truck&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> MethodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TeslaFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tesla <span class="title">getCar</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> Tesla ();&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> MethodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TruckFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Truck <span class="title">getCar</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Truck ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> MethodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TeslaFactory.getCar ().name ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样做的优点就是我们实现了定向添加类，不用修改已有的方法，直接使用添加一个实体类的工厂就可以了，但是带来的问题也很明显，就是浪费很多的内存，并且，创建的工厂类也会越来越多；</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot自动装配</title>
      <link href="2020/12/10/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/"/>
      <url>2020/12/10/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、springboot自动装配原理"><a href="#一、springboot自动装配原理" class="headerlink" title="一、springboot自动装配原理"></a>一、springboot自动装配原理</h2><p><strong>springboot 在加载时会加载大量的自动配置类</strong></p><p>一、pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.3.3.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;relativePath&#x2F;&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;&#x2F;parent&gt;</span><br></pre></td></tr></table></figure><p>一切交由springboot管理，版本号这些繁琐的配置就不用再我们自己一个一个的配置了；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一、入口</span></span><br><span class="line"><span class="keyword">package</span> com.saxon.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span><span class="comment">//注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run (SpringbootApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//二、@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan(excludeFilters = &#123; @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span></span><br><span class="line"><span class="meta">@Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">//三、@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import(AutoConfigurationImportSelector.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableAutoConfiguration &#123;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">//四、AutoConfigurationImportSelector</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AutoConfigurationEntry <span class="title">getAutoConfigurationEntry</span><span class="params">(AnnotationMetadata annotationMetadata)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!isEnabled(annotationMetadata)) &#123;</span><br><span class="line"><span class="keyword">return</span> EMPTY_ENTRY;</span><br><span class="line">&#125;</span><br><span class="line">AnnotationAttributes attributes = getAttributes(annotationMetadata);</span><br><span class="line">List&lt;String&gt; configurations = getCandidateConfigurations(annotationMetadata, attributes);</span><br><span class="line">configurations = removeDuplicates(configurations);</span><br><span class="line">Set&lt;String&gt; exclusions = getExclusions(annotationMetadata, attributes);</span><br><span class="line">checkExcludedClasses(configurations, exclusions);</span><br><span class="line">configurations.removeAll(exclusions);</span><br><span class="line">configurations = getConfigurationClassFilter().filter(configurations);</span><br><span class="line">fireAutoConfigurationImportEvents(configurations, exclusions);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> AutoConfigurationEntry(configurations, exclusions);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line"><span class="comment">//五、加载配置文件</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;String&gt;&gt; loadSpringFactories(<span class="meta">@Nullable</span> ClassLoader classLoader) &#123;</span><br><span class="line">        MultiValueMap&lt;String, String&gt; result = (MultiValueMap)cache.get(classLoader);</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Enumeration&lt;URL&gt; urls = classLoader != <span class="keyword">null</span> ? classLoader.getResources(<span class="string">&quot;META-INF/spring.factories&quot;</span>) : ClassLoader.getSystemResources(<span class="string">&quot;META-INF/spring.factories&quot;</span>);</span><br><span class="line">                LinkedMultiValueMap result = <span class="keyword">new</span> LinkedMultiValueMap();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(urls.hasMoreElements()) &#123;</span><br><span class="line">                    URL url = (URL)urls.nextElement();</span><br><span class="line">                    UrlResource resource = <span class="keyword">new</span> UrlResource(url);</span><br><span class="line">                    Properties properties = PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line">                    Iterator var6 = properties.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span>(var6.hasNext()) &#123;</span><br><span class="line">                        Entry&lt;?, ?&gt; entry = (Entry)var6.next();</span><br><span class="line">                        String factoryTypeName = ((String)entry.getKey()).trim();</span><br><span class="line">                        String[] var9 = StringUtils.commaDelimitedListToStringArray((String)entry.getValue());</span><br><span class="line">                        <span class="keyword">int</span> var10 = var9.length;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> var11 = <span class="number">0</span>; var11 &lt; var10; ++var11) &#123;</span><br><span class="line">                            String factoryImplementationName = var9[var11];</span><br><span class="line">                            result.add(factoryTypeName, factoryImplementationName.trim());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                cache.put(classLoader, result);</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException var13) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Unable to load factories from location [META-INF/spring.factories]&quot;</span>, var13);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata, AnnotationAttributes attributes)</span> </span>&#123;</span><br><span class="line">List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(getSpringFactoriesLoaderFactoryClass(),</span><br><span class="line">getBeanClassLoader());</span><br><span class="line">Assert.notEmpty(configurations, <span class="string">&quot;No auto configuration classes found in META-INF/spring.factories. If you &quot;</span></span><br><span class="line">+ <span class="string">&quot;are using a custom packaging, make sure that file is correct.&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> configurations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以知道<strong>classes found in META-INF/spring.factories和 ClassLoader.getSystemResources(“META-INF/spring.factories”);</strong></p><p>在<strong>spring-boot-autoconfigure-2.3.3.RELEASE.jar</strong>找到了配置文件从而实现自动配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initializers</span></span><br><span class="line">org.springframework.context.ApplicationContextInitializer=\</span><br><span class="line">org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\</span><br><span class="line">org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application Listeners</span></span><br><span class="line">org.springframework.context.ApplicationListener=\</span><br><span class="line">org.springframework.boot.autoconfigure.BackgroundPreinitializer</span><br><span class="line"></span><br><span class="line"><span class="comment"># Auto Configuration Import Listeners</span></span><br><span class="line">org.springframework.boot.autoconfigure.AutoConfigurationImportListener=\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener</span><br><span class="line"></span><br><span class="line"><span class="comment"># Auto Configuration Import Filters</span></span><br><span class="line">org.springframework.boot.autoconfigure.AutoConfigurationImportFilter=\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.OnBeanCondition,\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.OnClassCondition,\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition</span><br><span class="line"></span><br><span class="line"><span class="comment"># Auto Configure</span></span><br><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcTransactionManagerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</span><br><span class="line"></span><br><span class="line"><span class="comment"># Failure analyzers</span></span><br><span class="line">org.springframework.boot.diagnostics.FailureAnalyzer=\</span><br><span class="line">org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer,\</span><br><span class="line">org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer,\</span><br><span class="line">org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer,\</span><br><span class="line">org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer,\</span><br><span class="line">org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer</span><br><span class="line"></span><br><span class="line"><span class="comment"># Template availability providers</span></span><br><span class="line">org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider=\</span><br><span class="line">org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider,\</span><br><span class="line">org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider,\</span><br><span class="line">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider,\</span><br><span class="line">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在factories里面的配置文件原理</p><p>**@Configuration(proxyBeanMethods = false)**标志是一个配置类</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200928220632488.png" alt="image-20200923144626074"></p><p>spring为我们提供了<code>@Conditional</code>和<code>Condition.class</code>搭配使用的方式实现自定义条件下的autoconfigure，源码如下</p><p>满足这个配置的的并且有这个注解的自动配置；</p><p>以ServceProperties为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;server&quot;, ignoreUnknownFields = true)</span></span><br></pre></td></tr></table></figure><p>在yaml里面配置的就是这个的属性，前缀是server</p><p>**xxxxProperties.java与yaml里面的xxxx匹配，自动匹配yaml **</p><p><strong>自定义配置</strong></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/image-20200928220632488.png" alt="image-20200928220632488"></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="2020/12/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/12/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这是用来测试的</p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/wallhaven-2eroxm.jpg"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/%E3%80%8AHeartCatch%E5%85%89%E4%B9%8B%E7%BE%8E%E5%B0%91%E5%A5%B3%E3%80%8B%E6%9A%97%E4%B9%8B%E7%BE%8E%E5%B0%91%E5%A5%B3%E3%80%81%E6%9C%88%E5%BD%B1%E7%99%BE%E5%90%884k%E5%A3%81%E7%BA%B8_%E5%BD%BC%E5%B2%B8%E5%9B%BE%E7%BD%91.jpg"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/b.jpg"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/%E8%A1%97%E9%81%93%20%E5%9F%8E%E5%B8%82%20%E9%81%93%E8%B7%AF%20%E8%A1%8C%E4%BA%BA%20%E6%9C%AA%E6%9D%A5%E6%B4%BE%20%E5%88%9B%E6%84%8F%E8%89%BA%E6%9C%AF%204k%E7%BB%98%E7%94%BB%E5%A3%81%E7%BA%B8_%E5%BD%BC%E5%B2%B8%E5%9B%BE%E7%BD%91.jpg"></p><p><img src="https://saxon.oss-cn-shenzhen.aliyuncs.com/blog/%E6%AF%8F%E4%B8%80%E9%81%93%E6%98%9F%E6%84%BF%E9%83%BD%E6%9C%89%E6%88%91%E5%AF%B9%E4%BD%A0%E7%9A%84%E6%80%9D%E5%BF%B5%20%E9%9B%B6%E5%BA%A6%E9%B1%BC%E6%84%8F%E5%A2%834K%E6%96%87%E5%AD%97%E5%A3%81%E7%BA%B8_%E5%BD%BC%E5%B2%B8%E5%9B%BE%E7%BD%91.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 个人感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
